{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"pipeline":["stemmer","trimmer","stopWordFilter"],"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"index.html","text":"Student Personal Wiki \u00b6 Info This is where I put my random Tech Notes that I find useful and that I share with my students! References \u00b6 GitHub Pages shows how to turn your mkdocs output directory into a freely hosted GitHub Site","title":"Home"},{"location":"index.html#student-personal-wiki","text":"Info This is where I put my random Tech Notes that I find useful and that I share with my students!","title":"Student Personal Wiki"},{"location":"index.html#references","text":"GitHub Pages shows how to turn your mkdocs output directory into a freely hosted GitHub Site","title":"References"},{"location":"MacOS_Overview.html","text":"MacOS Overview \u00b6 Mission Control \u00b6 Shows all Open Winodows + Allows for Multiple Desktops Drag Items Onto new Desktop to Add Arrow between them with Control + Left or Right Arrows 4 Finger Gesture UP / DOWN to close Arrow > 3 Window Button Launchpad \u00b6 Easy access to installed apps 5 Finter Gesture IN / OUT to close Arrow > 6 Window Button Mac Desktop \u00b6 Finder \u00b6 Finder menu bar\u2019s Go feature can access shares Access to files and folders Applications are the mac binary programs we can run Utilities support a Mac with things like terminal or disk access. Locations are storage locations including remote/shared locations Tags can be used to tag important files Apple Menu \u00b6 Access to System Information, Preferences, App Store, recent items, Force Quit options Preferences: System wide settings and features Track Pad iCloud Time Machine Users & Groups Sharing like Screen Sharing or Remote Login Network Settings Spotlight (Search Utility) Spotlight \u00b6 Command + SpaceBar KeyChain \u00b6 MacOS Password Manager found under Utilities Screen Sharing \u00b6 System Preferences > Sharing Remote Disc \u00b6 Allows access to Optical drive via the network. Terminal \u00b6 Super User Command Line Control","title":"MacOS Overview"},{"location":"MacOS_Overview.html#macos-overview","text":"","title":"MacOS Overview"},{"location":"MacOS_Overview.html#mission-control","text":"Shows all Open Winodows + Allows for Multiple Desktops Drag Items Onto new Desktop to Add Arrow between them with Control + Left or Right Arrows 4 Finger Gesture UP / DOWN to close Arrow > 3 Window Button","title":"Mission Control"},{"location":"MacOS_Overview.html#launchpad","text":"Easy access to installed apps 5 Finter Gesture IN / OUT to close Arrow > 6 Window Button","title":"Launchpad"},{"location":"MacOS_Overview.html#mac-desktop","text":"","title":"Mac Desktop"},{"location":"MacOS_Overview.html#finder","text":"Finder menu bar\u2019s Go feature can access shares Access to files and folders Applications are the mac binary programs we can run Utilities support a Mac with things like terminal or disk access. Locations are storage locations including remote/shared locations Tags can be used to tag important files","title":"Finder"},{"location":"MacOS_Overview.html#apple-menu","text":"Access to System Information, Preferences, App Store, recent items, Force Quit options Preferences: System wide settings and features Track Pad iCloud Time Machine Users & Groups Sharing like Screen Sharing or Remote Login Network Settings Spotlight (Search Utility)","title":"Apple Menu"},{"location":"MacOS_Overview.html#spotlight","text":"Command + SpaceBar","title":"Spotlight"},{"location":"MacOS_Overview.html#keychain","text":"MacOS Password Manager found under Utilities","title":"KeyChain"},{"location":"MacOS_Overview.html#screen-sharing","text":"System Preferences > Sharing","title":"Screen Sharing"},{"location":"MacOS_Overview.html#remote-disc","text":"Allows access to Optical drive via the network.","title":"Remote Disc"},{"location":"MacOS_Overview.html#terminal","text":"Super User Command Line Control","title":"Terminal"},{"location":"archive.html","text":"Class Notes \u00b6 CIS-50 \u00b6 Database Systems CIS-18 \u00b6 CIS-12 \u00b6","title":"Index"},{"location":"archive.html#class-notes","text":"","title":"Class Notes"},{"location":"archive.html#cis-50","text":"Database Systems","title":"CIS-50"},{"location":"archive.html#cis-18","text":"","title":"CIS-18"},{"location":"archive.html#cis-12","text":"","title":"CIS-12"},{"location":"aug22_lesson.html","text":"Introduction to Java \u00b6 What is Programming \u00b6 Set of instructions organized into an steps to solve a problem (Algorithm) Computation, text manipulation, searching, graphics Every language Input, output, math, decisions (conditional), repetition (while, for, do\u2026while loops) What is Computer Science \u00b6 Study of and discovery of algorithms (or creating the steps to solve a problem) Reduce computational expense Novel ways to solve a problem Program (Algorithm) errors are called Bugs Programming Languages \u00b6 Low Level Language: machine code like the RISC vs CISC assembly language battle RISC = 1 instruction / cycle VERSUS CISC = Many Instructions / several cycles Complex Instruction Set Computer CISC 80x86 is what Intel uses Reduced Instruction Set Computer RISC is what many ARM processors use High Level Languages Easier to understand, formatting human readable 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ; ---------------------------------------------------------------------------------------- ; Writes \"Hello, World\" to the console using only system calls. Runs on 64-bit Linux only. ; To assemble and run: ; ; nasm -felf64 hello.asm && ld hello.o && ./a.out ; ---------------------------------------------------------------------------------------- global _start section .text _start: mov rax, 1 ; system call for write mov rdi, 1 ; file handle 1 is stdout mov rsi, message ; address of string to output mov rdx, 13 ; number of bytes syscall ; invoke operating system to do the write mov rax, 60 ; system call for exit xor rdi, rdi ; exit code 0 syscall ; invoke operating system to exit section .data message: db \"Hello, World\", 10 ; note the newline at the end VERSUS 1 2 3 4 5 6 7 8 9 10 11 12 /** Writes \"Hello, World\" to the console. javac HelloWorld.java # compiled to byte-code. java HelloWorld # Looks for and executes main. */ class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } } Less cumbersome to debug Portable Types of High Level Languages Note on Compiling - In layman\u2019s speak, a program that converts a program in one programming language into another program in another programming language. Compiled to machine code AOT (Ahead of Time): C, C++ Must be compiled to the target architecture (80x86, ARMv8, etc.) Compile to byte-code, then Interpreted JIT (Just in Time): Java Portable to any system with bytcode interpreter (JVM) Interpreted: Scripting Languages Extremely Portable Slower due to fewer runtime optimizations and fully just in time compiling Description of HelloWorld \u00b6 class: template used to create objects Defines object data types. Contains methods to get/set/modify the object. class == category object == item in that category static: A static method belongs to the class rather than instances. This also goes for static variables. void: It Returns NOTHING - We believe in nothing, Lebowski. Nothing. == VOID public: Modifier that makes the method (variable, etc.) accessible OUTSIDE the class A Bit About Git \u00b6 Git Flow * Will demo full git turn in process at the end of class. Learning! \u00b6 Learn by doing - code, code, code, all day long Learn tools that are relevant - IntelliJ, Git Learn Languages where the jobs are - Python, Java, Web-Technologies (React, Next.js, Vue.js, GraphQL) Ask for help! Be agile, Pair Program, run a personal (OR TEAM) scrum. Questions to ask in Team/Personal scrum every day: What did you do yesterday? What will you do today? What\u2019s getting in your way? Something fun I learned!","title":"Introduction to Java"},{"location":"aug22_lesson.html#introduction-to-java","text":"","title":"Introduction to Java"},{"location":"aug22_lesson.html#what-is-programming","text":"Set of instructions organized into an steps to solve a problem (Algorithm) Computation, text manipulation, searching, graphics Every language Input, output, math, decisions (conditional), repetition (while, for, do\u2026while loops)","title":"What is Programming"},{"location":"aug22_lesson.html#what-is-computer-science","text":"Study of and discovery of algorithms (or creating the steps to solve a problem) Reduce computational expense Novel ways to solve a problem Program (Algorithm) errors are called Bugs","title":"What is Computer Science"},{"location":"aug22_lesson.html#programming-languages","text":"Low Level Language: machine code like the RISC vs CISC assembly language battle RISC = 1 instruction / cycle VERSUS CISC = Many Instructions / several cycles Complex Instruction Set Computer CISC 80x86 is what Intel uses Reduced Instruction Set Computer RISC is what many ARM processors use High Level Languages Easier to understand, formatting human readable 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ; ---------------------------------------------------------------------------------------- ; Writes \"Hello, World\" to the console using only system calls. Runs on 64-bit Linux only. ; To assemble and run: ; ; nasm -felf64 hello.asm && ld hello.o && ./a.out ; ---------------------------------------------------------------------------------------- global _start section .text _start: mov rax, 1 ; system call for write mov rdi, 1 ; file handle 1 is stdout mov rsi, message ; address of string to output mov rdx, 13 ; number of bytes syscall ; invoke operating system to do the write mov rax, 60 ; system call for exit xor rdi, rdi ; exit code 0 syscall ; invoke operating system to exit section .data message: db \"Hello, World\", 10 ; note the newline at the end VERSUS 1 2 3 4 5 6 7 8 9 10 11 12 /** Writes \"Hello, World\" to the console. javac HelloWorld.java # compiled to byte-code. java HelloWorld # Looks for and executes main. */ class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } } Less cumbersome to debug Portable Types of High Level Languages Note on Compiling - In layman\u2019s speak, a program that converts a program in one programming language into another program in another programming language. Compiled to machine code AOT (Ahead of Time): C, C++ Must be compiled to the target architecture (80x86, ARMv8, etc.) Compile to byte-code, then Interpreted JIT (Just in Time): Java Portable to any system with bytcode interpreter (JVM) Interpreted: Scripting Languages Extremely Portable Slower due to fewer runtime optimizations and fully just in time compiling","title":"Programming Languages"},{"location":"aug22_lesson.html#description-of-helloworld","text":"class: template used to create objects Defines object data types. Contains methods to get/set/modify the object. class == category object == item in that category static: A static method belongs to the class rather than instances. This also goes for static variables. void: It Returns NOTHING - We believe in nothing, Lebowski. Nothing. == VOID public: Modifier that makes the method (variable, etc.) accessible OUTSIDE the class","title":"Description of HelloWorld"},{"location":"aug22_lesson.html#a-bit-about-git","text":"Git Flow * Will demo full git turn in process at the end of class.","title":"A Bit About Git"},{"location":"aug22_lesson.html#learning","text":"Learn by doing - code, code, code, all day long Learn tools that are relevant - IntelliJ, Git Learn Languages where the jobs are - Python, Java, Web-Technologies (React, Next.js, Vue.js, GraphQL) Ask for help! Be agile, Pair Program, run a personal (OR TEAM) scrum. Questions to ask in Team/Personal scrum every day: What did you do yesterday? What will you do today? What\u2019s getting in your way? Something fun I learned!","title":"Learning!"},{"location":"aug23_lesson.html","text":"Today\u2019s Lesson \u00b6 Introduction \u00b6 Cable Demonstration \u00b6 Cat-6 and RJ45 Networking Commands \u00b6 Commands on the cmd prompt CLI","title":"Today's Lesson"},{"location":"aug23_lesson.html#todays-lesson","text":"","title":"Today's Lesson"},{"location":"aug23_lesson.html#introduction","text":"","title":"Introduction"},{"location":"aug23_lesson.html#cable-demonstration","text":"Cat-6 and RJ45","title":"Cable Demonstration"},{"location":"aug23_lesson.html#networking-commands","text":"Commands on the cmd prompt CLI","title":"Networking Commands"},{"location":"aug30_lesson.html","text":"Lab 1 Review \u00b6 Part 1 - Ipconfig \u00b6 1 ipconfig /all IPv4 Address should be something like 192.168.1.15 Subnet mask should be something like 255.255.255.0 Default Gateway should be something like 192.168.1.1 Should see Autoconfiguration Enabled Meaning DHCP Should see Lease Obtained and Expires Allowing to calculate lease time Make and model of Ethernet is listed under Description Mac Address is Physical Address can also be retrieved via getmac Unique on the network Can be spoofed Allows for Ethernet communication, wraps IP packets and routes on LAN only DNS Servers should be listed under DNS Servers Part 2 - Ipconfig Release \u00b6 1 2 ipconfig /release ipconfig /all Releases autoconfiguration IP, DNS, gateway, etc. IP is 169.254.176.94, the APIPA IP - No IP was leased, DHCP failure subnet mask is now 255.255.0.0 Default Gateway no longer configured Physical MAC is unrelated, does not change. Ping Google DNS is a transmit failure There is no browser connectivity, no DNS, No IP means no routing to the Internet Part 3 - Ipconfig Renew \u00b6 1 2 ipconfig /renew ipconfig /all IPv4 Address is now VERY likely 192.168.1.15 again, but could be different depending on lease times and network conditions. Lease Obtained and Expires times will have updated, but the configured DHCP overall lease time is dependent on the server config, so it didn\u2019t change. DNS is now back (DHCP Assigned) so ping 8.8.8.8 replies With an IP and DNS, we can now route to and browse the internet again. Part 4 - Static IP \u00b6 Windows Config should have showed Obtain an IP address automatically in IPv4 Properties Depending on your Static Settings you COULD achieve connectivity. Still need to be on the same network with same Gateway, OR add routes via route add command Part 5 - DNS \u00b6 1 2 3 4 5 6 ipconfig /displaydns ipconfig /displaydns | find /c /v \"\" # OR ipconfig /displaydns | find /c /i \"search str\" ipconfig /flushdns netstat If you can\u2019t get to a web-site, but other sites work, and other systems can get to the site, it may be local DNS cache. Display DNS shows all the records in your local DNS cache (42 records, could vary though) Flush DNS clears your local cahce forcing your system to query its DNS Server and refresh its local cache NetStat command shows open network connections, and can be used to find the programs the connect to!!! TOOLS Review \u00b6 ESD Strap, Screwdrivers, tweezers, flashlight, compressed air Loopback plug: tests NIC ports Post Card: Can be used to test PCI, PCIe, USB, post errors Power Supply Tester: Can be used to test function/voltage of power supply Multi-Meter: Continuity of network cables, resistance, power supply voltage Network Toner: Find cables snaked through walls and ceilings Chapter Notes \u00b6 Keep GOOD notes, mkdocs, cell-phone pictures, draw pictures Shutdown system, unplug it, press power to drain, put on ESD strap Internal: MB, CPU, Expansion, Mem, Case form-factors are ATX, MicroATX, MiniITX, NanoITX, PicoITX BIOS/UEFI Mange essential devices K,V,M, Storage Power Supplys today use 24-pin P1 with 4 or 8 pin Aux. References \u00b6 K","title":"Lab 1 Review"},{"location":"aug30_lesson.html#lab-1-review","text":"","title":"Lab 1 Review"},{"location":"aug30_lesson.html#part-1---ipconfig","text":"1 ipconfig /all IPv4 Address should be something like 192.168.1.15 Subnet mask should be something like 255.255.255.0 Default Gateway should be something like 192.168.1.1 Should see Autoconfiguration Enabled Meaning DHCP Should see Lease Obtained and Expires Allowing to calculate lease time Make and model of Ethernet is listed under Description Mac Address is Physical Address can also be retrieved via getmac Unique on the network Can be spoofed Allows for Ethernet communication, wraps IP packets and routes on LAN only DNS Servers should be listed under DNS Servers","title":"Part 1 - Ipconfig"},{"location":"aug30_lesson.html#part-2---ipconfig-release","text":"1 2 ipconfig /release ipconfig /all Releases autoconfiguration IP, DNS, gateway, etc. IP is 169.254.176.94, the APIPA IP - No IP was leased, DHCP failure subnet mask is now 255.255.0.0 Default Gateway no longer configured Physical MAC is unrelated, does not change. Ping Google DNS is a transmit failure There is no browser connectivity, no DNS, No IP means no routing to the Internet","title":"Part 2 - Ipconfig Release"},{"location":"aug30_lesson.html#part-3---ipconfig-renew","text":"1 2 ipconfig /renew ipconfig /all IPv4 Address is now VERY likely 192.168.1.15 again, but could be different depending on lease times and network conditions. Lease Obtained and Expires times will have updated, but the configured DHCP overall lease time is dependent on the server config, so it didn\u2019t change. DNS is now back (DHCP Assigned) so ping 8.8.8.8 replies With an IP and DNS, we can now route to and browse the internet again.","title":"Part 3 - Ipconfig Renew"},{"location":"aug30_lesson.html#part-4---static-ip","text":"Windows Config should have showed Obtain an IP address automatically in IPv4 Properties Depending on your Static Settings you COULD achieve connectivity. Still need to be on the same network with same Gateway, OR add routes via route add command","title":"Part 4 - Static IP"},{"location":"aug30_lesson.html#part-5---dns","text":"1 2 3 4 5 6 ipconfig /displaydns ipconfig /displaydns | find /c /v \"\" # OR ipconfig /displaydns | find /c /i \"search str\" ipconfig /flushdns netstat If you can\u2019t get to a web-site, but other sites work, and other systems can get to the site, it may be local DNS cache. Display DNS shows all the records in your local DNS cache (42 records, could vary though) Flush DNS clears your local cahce forcing your system to query its DNS Server and refresh its local cache NetStat command shows open network connections, and can be used to find the programs the connect to!!!","title":"Part 5 - DNS"},{"location":"aug30_lesson.html#tools-review","text":"ESD Strap, Screwdrivers, tweezers, flashlight, compressed air Loopback plug: tests NIC ports Post Card: Can be used to test PCI, PCIe, USB, post errors Power Supply Tester: Can be used to test function/voltage of power supply Multi-Meter: Continuity of network cables, resistance, power supply voltage Network Toner: Find cables snaked through walls and ceilings","title":"TOOLS Review"},{"location":"aug30_lesson.html#chapter-notes","text":"Keep GOOD notes, mkdocs, cell-phone pictures, draw pictures Shutdown system, unplug it, press power to drain, put on ESD strap Internal: MB, CPU, Expansion, Mem, Case form-factors are ATX, MicroATX, MiniITX, NanoITX, PicoITX BIOS/UEFI Mange essential devices K,V,M, Storage Power Supplys today use 24-pin P1 with 4 or 8 pin Aux.","title":"Chapter Notes"},{"location":"aug30_lesson.html#references","text":"K","title":"References"},{"location":"aug31_lesson.html","text":"Variables and Operators \u00b6 Declaring Variables \u00b6 Allocate Storage Location of that Data-Type 1 2 3 4 5 String aString; int anInt; double a64BitFloat; float a32BitFloat; char aCharacter; Note the capital letter in String A string is Special Object in Java OK, so why don\u2019t we have to create strings like we create other objects i.e. String aString = new String(\"aString\"); ? Java founders determined Strings were so common , Strings needed to be treated differently (i.e. reference the same literal string even if assigned to 2 different variables. Consider the following blocks of code: 1 2 3 4 5 6 7 String a = \"Next iteration\"; String b = \"Next iteration\"; System.out.println(\"What will this be?\" + ((a == b) ? \"True\" : \"False\") ); // ? are they the same ? for (int i = 0; i < 10; i++) { System.out.println(\"Next iteration\"); // If the literal String weren't a reference, this would instantiate the string every single loop. } Thus, Strings are interned to: Lower memory requirements. Make comparisons faster. BUT WAIT, if strings are shared/cached references , wouldn\u2019t changing the string for variable a also change it for b ? Yes, but that\u2019s why the designers also made literal strings immutable . String methods that modify a string will return new string, not the original literal. This is also why you should not compare strings with but a.equals(b) because compares the reference while the other compares the string. Declare variables of the same type on 1 line! 1 int a, b, c = 5; // This is OK! Variables names must be unique (within its scope), and not a reserved word like static, private, public, final, class, etc. Variables are case sensitive 1 2 int firstName = 1; int FirstName = 2; Camel Case is Java\u2019s preferred naming convention. Assignment - Initialize a Variable \u00b6 Stores/Updates variable value, but you must assign the right data-type. 1 2 String a = \"123\"; String a = 123; // Error: wrong type. State - Forget diagrams - Use IntelliJ debug \u00b6 Why waste your time, use the state diagrams that already exist in your IDE ;-) Arithmetic Operators \u00b6 Symbols for doing Math See Arithmetic Operators Type aware, int division is int only result! (i.e. 59/60 == 0) Operations with Floating Point \u00b6 Fractional numbers, with fractional precision, BUT NOT PERFECT! , which leads to rounding errors. Irrational numbers can\u2019t be represented. Nor can repeating fractions. 1 or more double numbers will cause operators to use floating point calculations. If you\u2019re equation depends on fractional precision use doubles to avoid 59/60 error, or convert to whole numbers like $$$ libraries do. Java will implicitly convert integer assignment to a double, however. Operators for Strings \u00b6 + concatenates, enough said. Errors \u00b6 Compile Errors - Syntax errors, Keywords as variable names, etc. causes Parser to barf. Runtime Errors - Errors that cause exceptions only when the program is run i.e. FileNotFoundException Logic Error - Compiles and runs without errors, but the output is invalid. double percent = 59 / 60; Talk About Assignment! \u00b6","title":"Variables and Operators"},{"location":"aug31_lesson.html#variables-and-operators","text":"","title":"Variables and Operators"},{"location":"aug31_lesson.html#declaring-variables","text":"Allocate Storage Location of that Data-Type 1 2 3 4 5 String aString; int anInt; double a64BitFloat; float a32BitFloat; char aCharacter; Note the capital letter in String A string is Special Object in Java OK, so why don\u2019t we have to create strings like we create other objects i.e. String aString = new String(\"aString\"); ? Java founders determined Strings were so common , Strings needed to be treated differently (i.e. reference the same literal string even if assigned to 2 different variables. Consider the following blocks of code: 1 2 3 4 5 6 7 String a = \"Next iteration\"; String b = \"Next iteration\"; System.out.println(\"What will this be?\" + ((a == b) ? \"True\" : \"False\") ); // ? are they the same ? for (int i = 0; i < 10; i++) { System.out.println(\"Next iteration\"); // If the literal String weren't a reference, this would instantiate the string every single loop. } Thus, Strings are interned to: Lower memory requirements. Make comparisons faster. BUT WAIT, if strings are shared/cached references , wouldn\u2019t changing the string for variable a also change it for b ? Yes, but that\u2019s why the designers also made literal strings immutable . String methods that modify a string will return new string, not the original literal. This is also why you should not compare strings with but a.equals(b) because compares the reference while the other compares the string. Declare variables of the same type on 1 line! 1 int a, b, c = 5; // This is OK! Variables names must be unique (within its scope), and not a reserved word like static, private, public, final, class, etc. Variables are case sensitive 1 2 int firstName = 1; int FirstName = 2; Camel Case is Java\u2019s preferred naming convention.","title":"Declaring Variables"},{"location":"aug31_lesson.html#assignment---initialize-a-variable","text":"Stores/Updates variable value, but you must assign the right data-type. 1 2 String a = \"123\"; String a = 123; // Error: wrong type.","title":"Assignment - Initialize a Variable"},{"location":"aug31_lesson.html#state---forget-diagrams---use-intellij-debug","text":"Why waste your time, use the state diagrams that already exist in your IDE ;-)","title":"State - Forget diagrams - Use IntelliJ debug"},{"location":"aug31_lesson.html#arithmetic-operators","text":"Symbols for doing Math See Arithmetic Operators Type aware, int division is int only result! (i.e. 59/60 == 0)","title":"Arithmetic Operators"},{"location":"aug31_lesson.html#operations-with-floating-point","text":"Fractional numbers, with fractional precision, BUT NOT PERFECT! , which leads to rounding errors. Irrational numbers can\u2019t be represented. Nor can repeating fractions. 1 or more double numbers will cause operators to use floating point calculations. If you\u2019re equation depends on fractional precision use doubles to avoid 59/60 error, or convert to whole numbers like $$$ libraries do. Java will implicitly convert integer assignment to a double, however.","title":"Operations with Floating Point"},{"location":"aug31_lesson.html#operators-for-strings","text":"+ concatenates, enough said.","title":"Operators for Strings"},{"location":"aug31_lesson.html#errors","text":"Compile Errors - Syntax errors, Keywords as variable names, etc. causes Parser to barf. Runtime Errors - Errors that cause exceptions only when the program is run i.e. FileNotFoundException Logic Error - Compiles and runs without errors, but the output is invalid. double percent = 59 / 60;","title":"Errors"},{"location":"aug31_lesson.html#talk-about-assignment","text":"","title":"Talk About Assignment!"},{"location":"classes.html","text":"","title":"Classes"},{"location":"markdown-cheat-sheet.html","text":"Markdown Cheat Sheet \u00b6 This Markdown cheat sheet provides a quick overview of all the Markdown syntax elements. It can\u2019t cover every edge case, so if you need more information about any of these elements, refer to the reference guides for basic syntax and extended syntax . Basic Syntax \u00b6 These are the elements outlined in John Gruber\u2019s original design document. All Markdown applications support these elements. Heading \u00b6 1 2 3 # H1 ## H2 ### H3 Bold \u00b6 1 **bold text** Italic \u00b6 1 *italicized text* Blockquote \u00b6 1 > blockquote Ordered List \u00b6 1 2 3 1. First item 1. Second item 1. Third item Unordered List \u00b6 1 2 3 - First item - Second item - Third item Code \u00b6 1 `code` Horizontal Rule \u00b6 1 --- Link \u00b6 1 [Markdown Guide](https://www.markdownguide.org) Image \u00b6 1 ![alt text](https://www.markdownguide.org/assets/images/tux.png) Extended Syntax \u00b6 1 These elements extend the basic syntax by adding additional features. Not all Markdown applications support these elements. Table \u00b6 1 2 3 4 | Syntax | Description | | ----------- | ----------- | | Header | Title | | Paragraph | Text | Fenced Code Block \u00b6 1 2 3 4 5 6 7 ``` { \"firstName\": \"John\", \"lastName\": \"Smith\", \"age\": 25 } ``` Footnote \u00b6 1 2 3 Here's a sentence with a footnote. [^1] [^1]: This is the footnote. Heading ID \u00b6 1 ### My Great Heading {#custom-id} Definition List \u00b6 1 2 term : definition Strikethrough \u00b6 1 ~~The world is flat.~~ Task List \u00b6 1 2 3 - [x] Write the press release - [ ] Update the website - [ ] Contact the media Emoji \u00b6 1 2 3 That is so funny! :joy: (See also [Copying and Pasting Emoji](https://www.markdownguide.org/extended-syntax/#copying-and-pasting-emoji)) Highlight \u00b6 1 I need to highlight these ==very important words==. Subscript \u00b6 1 H~2~O Superscript \u00b6 1 X^2^","title":"Markdown"},{"location":"markdown-cheat-sheet.html#markdown-cheat-sheet","text":"This Markdown cheat sheet provides a quick overview of all the Markdown syntax elements. It can\u2019t cover every edge case, so if you need more information about any of these elements, refer to the reference guides for basic syntax and extended syntax .","title":"Markdown Cheat Sheet"},{"location":"markdown-cheat-sheet.html#basic-syntax","text":"These are the elements outlined in John Gruber\u2019s original design document. All Markdown applications support these elements.","title":"Basic Syntax"},{"location":"markdown-cheat-sheet.html#heading","text":"1 2 3 # H1 ## H2 ### H3","title":"Heading"},{"location":"markdown-cheat-sheet.html#bold","text":"1 **bold text**","title":"Bold"},{"location":"markdown-cheat-sheet.html#italic","text":"1 *italicized text*","title":"Italic"},{"location":"markdown-cheat-sheet.html#blockquote","text":"1 > blockquote","title":"Blockquote"},{"location":"markdown-cheat-sheet.html#ordered-list","text":"1 2 3 1. First item 1. Second item 1. Third item","title":"Ordered List"},{"location":"markdown-cheat-sheet.html#unordered-list","text":"1 2 3 - First item - Second item - Third item","title":"Unordered List"},{"location":"markdown-cheat-sheet.html#code","text":"1 `code`","title":"Code"},{"location":"markdown-cheat-sheet.html#horizontal-rule","text":"1 ---","title":"Horizontal Rule"},{"location":"markdown-cheat-sheet.html#link","text":"1 [Markdown Guide](https://www.markdownguide.org)","title":"Link"},{"location":"markdown-cheat-sheet.html#image","text":"1 ![alt text](https://www.markdownguide.org/assets/images/tux.png)","title":"Image"},{"location":"markdown-cheat-sheet.html#extended-syntax","text":"1 These elements extend the basic syntax by adding additional features. Not all Markdown applications support these elements.","title":"Extended Syntax"},{"location":"markdown-cheat-sheet.html#table","text":"1 2 3 4 | Syntax | Description | | ----------- | ----------- | | Header | Title | | Paragraph | Text |","title":"Table"},{"location":"markdown-cheat-sheet.html#fenced-code-block","text":"1 2 3 4 5 6 7 ``` { \"firstName\": \"John\", \"lastName\": \"Smith\", \"age\": 25 } ```","title":"Fenced Code Block"},{"location":"markdown-cheat-sheet.html#footnote","text":"1 2 3 Here's a sentence with a footnote. [^1] [^1]: This is the footnote.","title":"Footnote"},{"location":"markdown-cheat-sheet.html#heading-id","text":"1 ### My Great Heading {#custom-id}","title":"Heading ID"},{"location":"markdown-cheat-sheet.html#definition-list","text":"1 2 term : definition","title":"Definition List"},{"location":"markdown-cheat-sheet.html#strikethrough","text":"1 ~~The world is flat.~~","title":"Strikethrough"},{"location":"markdown-cheat-sheet.html#task-list","text":"1 2 3 - [x] Write the press release - [ ] Update the website - [ ] Contact the media","title":"Task List"},{"location":"markdown-cheat-sheet.html#emoji","text":"1 2 3 That is so funny! :joy: (See also [Copying and Pasting Emoji](https://www.markdownguide.org/extended-syntax/#copying-and-pasting-emoji))","title":"Emoji"},{"location":"markdown-cheat-sheet.html#highlight","text":"1 I need to highlight these ==very important words==.","title":"Highlight"},{"location":"markdown-cheat-sheet.html#subscript","text":"1 H~2~O","title":"Subscript"},{"location":"markdown-cheat-sheet.html#superscript","text":"1 X^2^","title":"Superscript"},{"location":"minesweeper.html","text":"Minesweeper \u00b6 classDiagram class Location Location : +int x Location : +int y Location : +equal(Location) boolean class Square Square : +boolean isRevealed Square : +boolean isMine Square : +Location location Square : +int hint Square : +reveal() Square : +setMine() Square : +toString() String class Board Board : +int size Board : +List~Square~ squares Board : +boolean isRevealed Board : +createEmptyBoard(int) Board Board : +revealAllSquares() Board : +revealOneSquare(Location) Board : +getSquare(Location) Square Board : +getNeighbors(Square) Iterable~Square~ Board : +hasLocation(Location) boolean Board : +toString() String class IGenerateMines IGenerateMines : +placeMines(int, Board) class RandomMinesGenerator RandomMinesGenerator : +placeMines(int, Board) class Game Game : -IGenerateMines minesGenerator Game : +Board board Game : +int state Game : +CreateBoard() Game : +Play() class Rule Rule : +isWinningCondition(Board) boolean Rule : +isLosingCondition(Board) boolean IGenerateMines < |.. RandomMinesGenerator IGenerateMines *-- Board Game *-- Board Game *-- Rule Game *-- IGenerateMines Board *-- Square Square *-- Location","title":"Minesweeper"},{"location":"minesweeper.html#minesweeper","text":"classDiagram class Location Location : +int x Location : +int y Location : +equal(Location) boolean class Square Square : +boolean isRevealed Square : +boolean isMine Square : +Location location Square : +int hint Square : +reveal() Square : +setMine() Square : +toString() String class Board Board : +int size Board : +List~Square~ squares Board : +boolean isRevealed Board : +createEmptyBoard(int) Board Board : +revealAllSquares() Board : +revealOneSquare(Location) Board : +getSquare(Location) Square Board : +getNeighbors(Square) Iterable~Square~ Board : +hasLocation(Location) boolean Board : +toString() String class IGenerateMines IGenerateMines : +placeMines(int, Board) class RandomMinesGenerator RandomMinesGenerator : +placeMines(int, Board) class Game Game : -IGenerateMines minesGenerator Game : +Board board Game : +int state Game : +CreateBoard() Game : +Play() class Rule Rule : +isWinningCondition(Board) boolean Rule : +isLosingCondition(Board) boolean IGenerateMines < |.. RandomMinesGenerator IGenerateMines *-- Board Game *-- Board Game *-- Rule Game *-- IGenerateMines Board *-- Square Square *-- Location","title":"Minesweeper"},{"location":"nov15_lesson.html","text":"Supporting the Power Systems and Troubleshooting Computers \u00b6 Cooling Methods and Devices \u00b6 Keep the case closed Keep the computer clean Keep the computer in a proper location Not on the floor in dusty areas Not enclosed in a non-ventalated cabinet Vents should be exposed and uncovered. Processor Coolers, Fans, and Heat Sinks \u00b6 Heat sinks Pick a metal material with great thermal conductive properties (copper is better than aluminum, but much more expensive). thermal conductivity to cost ratio. With heat-sinks material, shape, and size matter. Fans attached to the heatsink can help dissapate heat more rapidly. 4-pin fans are more appropriate for CPU coolers as they allow for variable fan speeds via PWM pin (or pulse-width-modulation). 3-pin fans can plug into 4-pin fan power, but won\u2019t have variable control. Fans are usually between 80 - 150mm and the larger fans generally are quieter because they can move the same amount of air at lower RPMs. You may also find fans and heat-sinks attached to memory chips and especially high-end graphics cards. Liquid cooling systems Less common in industry Cost more and are higher maintenence due to liquid pumps Quietest option, but only necessary for high-end gaming systems or high-end computer systems. Selecting a Power Supply \u00b6 ATX or micro ATX form factors Rated by Watts (i.e. Power consumption), which is the first thing to be aware of Pick your power supply not just off Wattage, but also off the Watts per rail In high end gaming systems +12V rail is the most important In large storage systems the +5V rail is often the most important Add up all the Power needs of all the components in your system and estimate for 30% higher than that. Wattage Calc \u00b6 1 Power = Voltage * Amperage Strategies to Troubleshoot Any Computer \u00b6 Tier 1 Flowchart \u00b6 * Also go review page 181-182 and try to memorize as many of the symptom to solution messages as you can! * But remember, don\u2019t ignore BEEP codes Troubleshooting the Electrical System \u00b6 If you see smoke or smell electrical burn smell, immediately track down the source and turn the system off. Look for discoloration on capacitors on the various circuit boards Burned capacitors are usually the culprit of smell, and always mean the faulty component should be replaced. Use a multimeter to test voltage of power-supplies (!!! DC i.e. Direct Current !!!). Troubleshooting the Motherboard, Processor, and RAM \u00b6 Windows Memory Diagnostic Tool MemTest86","title":"Supporting the Power Systems and Troubleshooting Computers"},{"location":"nov15_lesson.html#supporting-the-power-systems-and-troubleshooting-computers","text":"","title":"Supporting the Power Systems and Troubleshooting Computers"},{"location":"nov15_lesson.html#cooling-methods-and-devices","text":"Keep the case closed Keep the computer clean Keep the computer in a proper location Not on the floor in dusty areas Not enclosed in a non-ventalated cabinet Vents should be exposed and uncovered.","title":"Cooling Methods and Devices"},{"location":"nov15_lesson.html#processor-coolers-fans-and-heat-sinks","text":"Heat sinks Pick a metal material with great thermal conductive properties (copper is better than aluminum, but much more expensive). thermal conductivity to cost ratio. With heat-sinks material, shape, and size matter. Fans attached to the heatsink can help dissapate heat more rapidly. 4-pin fans are more appropriate for CPU coolers as they allow for variable fan speeds via PWM pin (or pulse-width-modulation). 3-pin fans can plug into 4-pin fan power, but won\u2019t have variable control. Fans are usually between 80 - 150mm and the larger fans generally are quieter because they can move the same amount of air at lower RPMs. You may also find fans and heat-sinks attached to memory chips and especially high-end graphics cards. Liquid cooling systems Less common in industry Cost more and are higher maintenence due to liquid pumps Quietest option, but only necessary for high-end gaming systems or high-end computer systems.","title":"Processor Coolers, Fans, and Heat Sinks"},{"location":"nov15_lesson.html#selecting-a-power-supply","text":"ATX or micro ATX form factors Rated by Watts (i.e. Power consumption), which is the first thing to be aware of Pick your power supply not just off Wattage, but also off the Watts per rail In high end gaming systems +12V rail is the most important In large storage systems the +5V rail is often the most important Add up all the Power needs of all the components in your system and estimate for 30% higher than that.","title":"Selecting a Power Supply"},{"location":"nov15_lesson.html#wattage-calc","text":"1 Power = Voltage * Amperage","title":"Wattage Calc"},{"location":"nov15_lesson.html#strategies-to-troubleshoot-any-computer","text":"","title":"Strategies to Troubleshoot Any Computer"},{"location":"nov15_lesson.html#tier-1-flowchart","text":"* Also go review page 181-182 and try to memorize as many of the symptom to solution messages as you can! * But remember, don\u2019t ignore BEEP codes","title":"Tier 1 Flowchart"},{"location":"nov15_lesson.html#troubleshooting-the-electrical-system","text":"If you see smoke or smell electrical burn smell, immediately track down the source and turn the system off. Look for discoloration on capacitors on the various circuit boards Burned capacitors are usually the culprit of smell, and always mean the faulty component should be replaced. Use a multimeter to test voltage of power-supplies (!!! DC i.e. Direct Current !!!).","title":"Troubleshooting the Electrical System"},{"location":"nov15_lesson.html#troubleshooting-the-motherboard-processor-and-ram","text":"Windows Memory Diagnostic Tool MemTest86","title":"Troubleshooting the Motherboard, Processor, and RAM"},{"location":"nov8_lesson.html","text":"Networking! \u00b6","title":"Networking!"},{"location":"nov8_lesson.html#networking","text":"","title":"Networking!"},{"location":"nov9_lesson.html","text":"Object Oriented Programming \u00b6 It\u2019s Just the Beginning, but WHY??? We Can Make Models, and Patterns , that Help Us Solve Problems \u00b6 Favor Composition over Inheritence \u00b6 Wait, what\u2019s Inheritance ? OK, that makes sense, but what is Composition ? But how can I favor composition? One way is Interfaces Walk Through Lab Code \u00b6 Lab 10 classDiagram class WeatherStation WeatherStation : -URL url WeatherStation : -List~Display~ displays WeatherStation : -Gson gson WeatherStation : -float temperature WeatherStation : -float humidity WeatherStation : -float pressure WeatherStation : +WeatherStation() WeatherStation : +registerDisplay(display) WeatherStation : +removeDisplay(display) WeatherStation : +notifyDisplays() WeatherStation : +getTemperature() float WeatherStation : +getHumidity() float WeatherStation : +getPressure() float WeatherStation : +measure() class I_Display I_Display : update() I_Display : display() class CurrentConditions CurrentConditions: -WeatherStation ws CurrentConditions : -float temperature CurrentConditions : -float humidity CurrentConditions : +CurrentConditions(weatherstation) CurrentConditions : update() CurrentConditions : display() class StatisticsDisplay StatisticsDisplay: -WeatherStation ws StatisticsDisplay : -float temperatureMin StatisticsDisplay : -float temperatureMax StatisticsDisplay : -float temperatureTotal StatisticsDisplay : -int numReadings StatisticsDisplay : +StatisticsDisplay(weatherstation) StatisticsDisplay : update() StatisticsDisplay : display() class ForecastDisplay ForecastDisplay: -WeatherStation ws ForecastDisplay : -float currentPressure ForecastDisplay : -float lastPressure ForecastDisplay : +ForecastDisplay(weatherstation) ForecastDisplay : update() ForecastDisplay : display() I_Display < |.. CurrentConditions I_Display < |.. StatisticsDisplay I_Display < |.. ForecastDisplay WeatherStation --* CurrentConditions WeatherStation --* StatisticsDisplay WeatherStation --* ForecastDisplay I_Display --* WeatherStation","title":"Object Oriented Programming"},{"location":"nov9_lesson.html#object-oriented-programming","text":"It\u2019s Just the Beginning, but WHY???","title":"Object Oriented Programming"},{"location":"nov9_lesson.html#we-can-make-models-and-patterns-that-help-us-solve-problems","text":"","title":"We Can Make Models, and Patterns, that Help Us Solve Problems"},{"location":"nov9_lesson.html#favor-composition-over-inheritence","text":"Wait, what\u2019s Inheritance ? OK, that makes sense, but what is Composition ? But how can I favor composition? One way is Interfaces","title":"Favor Composition over Inheritence"},{"location":"nov9_lesson.html#walk-through-lab-code","text":"Lab 10 classDiagram class WeatherStation WeatherStation : -URL url WeatherStation : -List~Display~ displays WeatherStation : -Gson gson WeatherStation : -float temperature WeatherStation : -float humidity WeatherStation : -float pressure WeatherStation : +WeatherStation() WeatherStation : +registerDisplay(display) WeatherStation : +removeDisplay(display) WeatherStation : +notifyDisplays() WeatherStation : +getTemperature() float WeatherStation : +getHumidity() float WeatherStation : +getPressure() float WeatherStation : +measure() class I_Display I_Display : update() I_Display : display() class CurrentConditions CurrentConditions: -WeatherStation ws CurrentConditions : -float temperature CurrentConditions : -float humidity CurrentConditions : +CurrentConditions(weatherstation) CurrentConditions : update() CurrentConditions : display() class StatisticsDisplay StatisticsDisplay: -WeatherStation ws StatisticsDisplay : -float temperatureMin StatisticsDisplay : -float temperatureMax StatisticsDisplay : -float temperatureTotal StatisticsDisplay : -int numReadings StatisticsDisplay : +StatisticsDisplay(weatherstation) StatisticsDisplay : update() StatisticsDisplay : display() class ForecastDisplay ForecastDisplay: -WeatherStation ws ForecastDisplay : -float currentPressure ForecastDisplay : -float lastPressure ForecastDisplay : +ForecastDisplay(weatherstation) ForecastDisplay : update() ForecastDisplay : display() I_Display < |.. CurrentConditions I_Display < |.. StatisticsDisplay I_Display < |.. ForecastDisplay WeatherStation --* CurrentConditions WeatherStation --* StatisticsDisplay WeatherStation --* ForecastDisplay I_Display --* WeatherStation","title":"Walk Through Lab Code"},{"location":"oct11_lesson.html","text":"Windows Installation \u00b6 Plan \u00b6 Choose the Edition, License and Version \u00b6 OEM License: Only on a new computer Allows hardware upgrades, but not motherboard Costs Less Retail License: Direct Microsoft support Transferable between hardware Pick Architecture \u00b6 32 bit RAM limited to 4GB 64 bit Requires 64 bit device drivers Verifying that System Qualifies \u00b6 Typically Windows will be backward compatible with processors < 10 years old Microsoft will typically indicate which processor features are required. MBR or GPT GPT required for drives larger than 2.2 TB 64 bit windows required BIOS/UEFI UEFI is required for drives larger than 2.2 TB 64 bit windows required Secure boot only enabled with UEFI CSM mode only recommended to support legacy hard drives Boot priority must be set to allow installation media to boot first Application and Hardware Compatibility Make sure Device Drivers will work for Windows 10 or that older drivers still work Make sure you can upgrade your necessary applications For legacy applications consider dual or multi-boot Installation Type \u00b6 In-Place Upgrade: Must be a supportable Upgrade path, find these tables online. Clean Install: Necessary to migrate from 32bit OS to 64bit, assuming you hardware supports it. If you choose not to format and erase, data will be preserved. Windows.old folder will be created. Dual/Multi Boot: Needs a second partition Understanding the Install Choices \u00b6 If you choose dual boot, always install older OS first. Consider the applications that will run on system when partitioning Data Volume for Database What partition sizes are relevant Network considerations Will this be part of a domain? What type of network am I installing system on? Download speeds Proxy access DHCP/DNS? Final Checklist \u00b6 Make sure you have a valid product/activation key or a domain to grab one from.","title":"Windows Installation"},{"location":"oct11_lesson.html#windows-installation","text":"","title":"Windows Installation"},{"location":"oct11_lesson.html#plan","text":"","title":"Plan"},{"location":"oct11_lesson.html#choose-the-edition-license-and-version","text":"OEM License: Only on a new computer Allows hardware upgrades, but not motherboard Costs Less Retail License: Direct Microsoft support Transferable between hardware","title":"Choose the Edition, License and Version"},{"location":"oct11_lesson.html#pick-architecture","text":"32 bit RAM limited to 4GB 64 bit Requires 64 bit device drivers","title":"Pick Architecture"},{"location":"oct11_lesson.html#verifying-that-system-qualifies","text":"Typically Windows will be backward compatible with processors < 10 years old Microsoft will typically indicate which processor features are required. MBR or GPT GPT required for drives larger than 2.2 TB 64 bit windows required BIOS/UEFI UEFI is required for drives larger than 2.2 TB 64 bit windows required Secure boot only enabled with UEFI CSM mode only recommended to support legacy hard drives Boot priority must be set to allow installation media to boot first Application and Hardware Compatibility Make sure Device Drivers will work for Windows 10 or that older drivers still work Make sure you can upgrade your necessary applications For legacy applications consider dual or multi-boot","title":"Verifying that System Qualifies"},{"location":"oct11_lesson.html#installation-type","text":"In-Place Upgrade: Must be a supportable Upgrade path, find these tables online. Clean Install: Necessary to migrate from 32bit OS to 64bit, assuming you hardware supports it. If you choose not to format and erase, data will be preserved. Windows.old folder will be created. Dual/Multi Boot: Needs a second partition","title":"Installation Type"},{"location":"oct11_lesson.html#understanding-the-install-choices","text":"If you choose dual boot, always install older OS first. Consider the applications that will run on system when partitioning Data Volume for Database What partition sizes are relevant Network considerations Will this be part of a domain? What type of network am I installing system on? Download speeds Proxy access DHCP/DNS?","title":"Understanding the Install Choices"},{"location":"oct11_lesson.html#final-checklist","text":"Make sure you have a valid product/activation key or a domain to grab one from.","title":"Final Checklist"},{"location":"oct17_lesson.html","text":"Maintaining Windows \u00b6 Verifying Critical Windows Settings \u00b6 Windows Updates Antivrus Software Network Secuirty Private VS Public Firewall enabled Proper level of Backups User Data VS Windows Volume VS System files Uninstall unnecessary software and features Regularly clean HD At least 15% free space scheduled defrag on non-SSD Patches / Drivers \u00b6 x86 VS x64 VS x86_64 64 bit updates/drivers on 64bit OS Backups \u00b6 Disaster Recovery Planning \u00b6 Decide the type of backup file-level-backup granular control over user data Not great for system or application content image-level-backup Restores everything Doesn\u2019t allow partial/selective restore critical-applications cloud solutions for backing up these critical applications Decide Backup Destination Cloud Easiest and most reliable Also most costly Local Easy to access at your location Danger of data loss in catastrophic event unless also shipped off-site. Decide Backup Software Consider what it backs up and how full/incremental Is it on separate bootable media for easy restore in case of HD crash Is it schedulable Does it allow for off-site backups Decide Backup Strategy What is acceptable data loss, 4-6 hours? Are partial restores necessary Are speed, network, and/or cost factors? Is documentation necessary for audits? Is off-site necessary? Decide how to ensure business continuity UPS, generator, etc. Regularily test recovery process/media Regularily rotate and replace backup media if local. Where are backups stored and how is integrity guranteed. Backup User Data \u00b6 File History File-Level-Backup: Documents, Music, Pictures, Videos and Desktop folders to External HD, network share, and OneDrive Offered in 11, 10, and 8 Access via Control Panel Items >> File History Restore via Control Panel Items >> File History >> Restore personal files or right clicking a file you want to restore. Backup and Restore Image-Level-Backup: Initial full backup of select folders and volume, then incremental changes backup up to External HD or network share Offered in 11, 10, and 7 Access via Control Panel Items >> Backup and Restore Restore via this Can be used to recover a failed HD Should Backup: AppData Favorites or all User Profiles C:\\Users recimg Image-Level-Backup Offered in 8 System Protection Creates snapshots, called restore points, of changed system files Access via Control Panel >> System >> System Protection or rstrui.exe Restore via Control Panel >> System >> System Protection or rstrui.exe This can\u2019t restore from a HD failure Files, Folder, and Sorage Devices \u00b6 Partitions and File Systems \u00b6 MBR Partitions Required for 32bit OS or when using legacy BIOS Max of 4 partitions per drive 3 Primary partitions 4th extended partition of one or mor logical drives Boots off single active partition, which BIOS/UEFI searches for OS on GPT Partitions Requires 64bit OS and UEFI firmware Supports 128 partitions Required for drives over 2.2TB and to use Secure Boot 1 sector is Protective MBR: Legacy info GPT Header tracks all partitions and immediately follows Protective MBR Partition Table in header, but also backed up at end of disk Boots from ESP which holds a boot loader which knows how to find and start the OS Windows FS Overall structure an OS uses to name, store, and organize files and folders on a HD High-Level-Formatting Asigns Drive Letter Creates Root Directory Create FS on a volume NTFS Replaced Fat32 more reliable, efficient, and secure (admin pass required) Supports encryption, disk quotas, and compression ReFS Improves upon NTFS with better performance and fault tolerance (protects sectors upon HD failure) Better compatibility with virtualization and RAID NFS, exFAT, FAT32, CDFS and UDF Disk Mgmt \u00b6 We\u2019ve coverd this and will cover it again in the lab, so I\u2019m not going to chat about this except to mention Dynamic Disks Dynamic Disks \u00b6 Several disks work together to present a single dynamic volume (Linux calls these Volume Groups and Logical Volumes). Extended volume across dynamic disks is called spanning Can improve performance and aid fault tolerance (i.e. to provide software RAID) Storage Spaces \u00b6 Replacement for traditional software RAID Uses storage pools from a mixture of technologies SAS, STA, USB, etc. Options for Storage Spaces Simple: like RAID 0 Two-Way Mirror: like RAID 1+0 Three-Way Mirror: like RAID 5 Parity: like RAID 6 Access via Control Panel >> Storage Spaces","title":"Maintaining Windows"},{"location":"oct17_lesson.html#maintaining-windows","text":"","title":"Maintaining Windows"},{"location":"oct17_lesson.html#verifying-critical-windows-settings","text":"Windows Updates Antivrus Software Network Secuirty Private VS Public Firewall enabled Proper level of Backups User Data VS Windows Volume VS System files Uninstall unnecessary software and features Regularly clean HD At least 15% free space scheduled defrag on non-SSD","title":"Verifying Critical Windows Settings"},{"location":"oct17_lesson.html#patches--drivers","text":"x86 VS x64 VS x86_64 64 bit updates/drivers on 64bit OS","title":"Patches / Drivers"},{"location":"oct17_lesson.html#backups","text":"","title":"Backups"},{"location":"oct17_lesson.html#disaster-recovery-planning","text":"Decide the type of backup file-level-backup granular control over user data Not great for system or application content image-level-backup Restores everything Doesn\u2019t allow partial/selective restore critical-applications cloud solutions for backing up these critical applications Decide Backup Destination Cloud Easiest and most reliable Also most costly Local Easy to access at your location Danger of data loss in catastrophic event unless also shipped off-site. Decide Backup Software Consider what it backs up and how full/incremental Is it on separate bootable media for easy restore in case of HD crash Is it schedulable Does it allow for off-site backups Decide Backup Strategy What is acceptable data loss, 4-6 hours? Are partial restores necessary Are speed, network, and/or cost factors? Is documentation necessary for audits? Is off-site necessary? Decide how to ensure business continuity UPS, generator, etc. Regularily test recovery process/media Regularily rotate and replace backup media if local. Where are backups stored and how is integrity guranteed.","title":"Disaster Recovery Planning"},{"location":"oct17_lesson.html#backup-user-data","text":"File History File-Level-Backup: Documents, Music, Pictures, Videos and Desktop folders to External HD, network share, and OneDrive Offered in 11, 10, and 8 Access via Control Panel Items >> File History Restore via Control Panel Items >> File History >> Restore personal files or right clicking a file you want to restore. Backup and Restore Image-Level-Backup: Initial full backup of select folders and volume, then incremental changes backup up to External HD or network share Offered in 11, 10, and 7 Access via Control Panel Items >> Backup and Restore Restore via this Can be used to recover a failed HD Should Backup: AppData Favorites or all User Profiles C:\\Users recimg Image-Level-Backup Offered in 8 System Protection Creates snapshots, called restore points, of changed system files Access via Control Panel >> System >> System Protection or rstrui.exe Restore via Control Panel >> System >> System Protection or rstrui.exe This can\u2019t restore from a HD failure","title":"Backup User Data"},{"location":"oct17_lesson.html#files-folder-and-sorage-devices","text":"","title":"Files, Folder, and Sorage Devices"},{"location":"oct17_lesson.html#partitions-and-file-systems","text":"MBR Partitions Required for 32bit OS or when using legacy BIOS Max of 4 partitions per drive 3 Primary partitions 4th extended partition of one or mor logical drives Boots off single active partition, which BIOS/UEFI searches for OS on GPT Partitions Requires 64bit OS and UEFI firmware Supports 128 partitions Required for drives over 2.2TB and to use Secure Boot 1 sector is Protective MBR: Legacy info GPT Header tracks all partitions and immediately follows Protective MBR Partition Table in header, but also backed up at end of disk Boots from ESP which holds a boot loader which knows how to find and start the OS Windows FS Overall structure an OS uses to name, store, and organize files and folders on a HD High-Level-Formatting Asigns Drive Letter Creates Root Directory Create FS on a volume NTFS Replaced Fat32 more reliable, efficient, and secure (admin pass required) Supports encryption, disk quotas, and compression ReFS Improves upon NTFS with better performance and fault tolerance (protects sectors upon HD failure) Better compatibility with virtualization and RAID NFS, exFAT, FAT32, CDFS and UDF","title":"Partitions and File Systems"},{"location":"oct17_lesson.html#disk-mgmt","text":"We\u2019ve coverd this and will cover it again in the lab, so I\u2019m not going to chat about this except to mention Dynamic Disks","title":"Disk Mgmt"},{"location":"oct17_lesson.html#dynamic-disks","text":"Several disks work together to present a single dynamic volume (Linux calls these Volume Groups and Logical Volumes). Extended volume across dynamic disks is called spanning Can improve performance and aid fault tolerance (i.e. to provide software RAID)","title":"Dynamic Disks"},{"location":"oct17_lesson.html#storage-spaces","text":"Replacement for traditional software RAID Uses storage pools from a mixture of technologies SAS, STA, USB, etc. Options for Storage Spaces Simple: like RAID 0 Two-Way Mirror: like RAID 1+0 Three-Way Mirror: like RAID 5 Parity: like RAID 6 Access via Control Panel >> Storage Spaces","title":"Storage Spaces"},{"location":"oct25_lesson.html","text":"Troubleshooting Windows After Startup \u00b6 Solving Problems with Windows Apps \u00b6 What is the Shell and Kernel \u00b6 Shell: portion of the os that relates to user applications User Mode: so limited access to system information Win32 security: sign-in, file ACLs, application access Kernel: portion of the os responsible for interacting with hardware Kernel Mode: direct access to hardware, and segmented off from user. Components HAL Executive services: ntoskrnl.exe Features Memory management Device management File System Resource management (sharing CPU and hardware between processes) Access to hardware (CPU, I/O, etc.) Important Directories \u00b6 User Profile: Important user data after sign-in Profile Path: C:\\Users\\ NTUSER.DAT: User settings copied to the registry Startup Programs: C:\\User\\ \\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup Program Files: Where the programs are Path: C:\\Program Files OR C:\\Program Files (x86) Startup Programs: C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup Windows Data: Registry Path: C:\\Windows\\System32\\config folder. Backup registry: C:\\Windows\\System32\\config\\RegBack Fonts: C:\\Windows\\Fonts Temporary files: C:\\Windows\\Temp Offline files: C:\\Windows\\CSC Windows App Mgmt \u00b6 Process: program in shell Process resource request to Win32 subsystem: Thread (single task in kernel) Tools \u00b6 Solve Windows problems using these tools: \u00b6 tool description System File Checker (sfc.exe) use System File Checker (SFC) to verify and replace Windows system files. It keeps a cache of current system files in case it needs to refresh a damaged file. dISm (dism.exe) use dISm (deployment Image Servicing and management) to repair corrupted Windows system files when SFC cannot do the job or Windows update is corrupted. Windows updates use Windows updates to download and apply the latest Windows updates to solve problems with Windows, applications, and hardware. In Windows 10, open Windows updates in the Settings app. For Windows 8/7, use the System window to find Windows updates. Clean boot a clean boot disables all third-party software that has been added to the Windows startup process. to clean boot, use System Configuration and task manager to disable all but microsoft services launched at startup. you learn how to do this later in the chapter. Safe mode, aka Safe boot Safe mode goes beyond a clean boot; it not only eliminates third-party software from Windows startup, it also reduces startup to only the Windows minimum configuration necessary to start the oS. It can create a stable environment when the Windows system or device drivers become corrupted. First try a clean boot. If that doesn\u2019t resolve a problem, try Safe mode. to do so, use System Configuration to restart the computer in Safe boot. System restore (rstrui.exe) use System restore to revert the system back to a previously saved restore point before a problem started. Solve application errors or crashes with these tools: \u00b6 programs and Features (appwiz.cpl) use the programs and Features tool in Control panel to repair and uninstall applications and enable and disable Windows features. tasklist the tasklist command reports the process identifier (pId), which is a number that identifies each running process. taskkill the taskkill command uses the process Id to kill the task or process. use taskkill to end a process when task manager is unable to do so. Component Services use Component Services (also called Com+) in the administrative tools group to register components in the Windows registry so that an application can access the component. this resolves a problem that happens when a component is not correctly registered to the application when it is first installed or the connection between the two gets broken. Secondary logon use a secondary logon to run an application using administrator privileges that refused to run under the authority of a standard user. use the properties dialog box of the application program file to perform a secondary logon. Compatibility mode to solve an incompatibility problem with the oS, try running the application in compatibility mode by using the properties dialog box of the application program file. digital signature a digital signature verifies that the application is not a rogue application and that it is certified as Windows-compatible by microsoft. verify a digital signature using the properties dialog box of the application program file. data Sources use data Sources, also called odBC data Sources (open database Connectivity data Sources), to create a connection between a local application and a remote database so that the application can manage the database. data Sources can be accessed in the administrative tools group. task Scheduler (taskschd.msc) use task Scheduler in the administrative tools group to schedule a program to run at a future time, including at startup. Manage and solve problems with hardware using these tools: \u00b6 device manager (devmgmt.msc) recall device manager in Control panel is the go-to tool to make sure Windows has correctly installed a hardware device and to solve problems with a device. print management (printmanagement.msc) use print management in the administrative tools group to monitor and manage printer queues for all printers on the network. display applet (desk.cpl) use the display applet to manage display settings. In Windows 10, access display settings in the Settings app. For Windows 8/7, use Control panel. dxdiag (dxdiag.exe) use the dxdiag (directX diagnostic tool) command to diagnose problems with directX. directX is microsoft\u2019s interface between video and sound hardware and the applications that use these devices. Some gaming applications or other apps that rely heavily on graphics and sound require the latest version of directX. dxdiag can tell you which version of directX is installed; you can download the latest version from microsoft.com. memory diagnostics (mdsched.exe) use memory diagnostics in administrative tools to test memory before or after Windows is launched. chkdsk the chkdsk command checks the hard drive for a corrupted file system and bad sectors on the drive. use this command to check drive C: and recover data: chkdsk c: /r disk defragmenter (defrag.exe) defrag a magnetic hard drive to improve drive performance. (defrag.exe)","title":"Troubleshooting Windows After Startup"},{"location":"oct25_lesson.html#troubleshooting-windows-after-startup","text":"","title":"Troubleshooting Windows After Startup"},{"location":"oct25_lesson.html#solving-problems-with-windows-apps","text":"","title":"Solving Problems with Windows Apps"},{"location":"oct25_lesson.html#what-is-the-shell-and-kernel","text":"Shell: portion of the os that relates to user applications User Mode: so limited access to system information Win32 security: sign-in, file ACLs, application access Kernel: portion of the os responsible for interacting with hardware Kernel Mode: direct access to hardware, and segmented off from user. Components HAL Executive services: ntoskrnl.exe Features Memory management Device management File System Resource management (sharing CPU and hardware between processes) Access to hardware (CPU, I/O, etc.)","title":"What is the Shell and Kernel"},{"location":"oct25_lesson.html#important-directories","text":"User Profile: Important user data after sign-in Profile Path: C:\\Users\\ NTUSER.DAT: User settings copied to the registry Startup Programs: C:\\User\\ \\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup Program Files: Where the programs are Path: C:\\Program Files OR C:\\Program Files (x86) Startup Programs: C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup Windows Data: Registry Path: C:\\Windows\\System32\\config folder. Backup registry: C:\\Windows\\System32\\config\\RegBack Fonts: C:\\Windows\\Fonts Temporary files: C:\\Windows\\Temp Offline files: C:\\Windows\\CSC","title":"Important Directories"},{"location":"oct25_lesson.html#windows-app-mgmt","text":"Process: program in shell Process resource request to Win32 subsystem: Thread (single task in kernel)","title":"Windows App Mgmt"},{"location":"oct25_lesson.html#tools","text":"","title":"Tools"},{"location":"oct25_lesson.html#solve-windows-problems-using-these-tools","text":"tool description System File Checker (sfc.exe) use System File Checker (SFC) to verify and replace Windows system files. It keeps a cache of current system files in case it needs to refresh a damaged file. dISm (dism.exe) use dISm (deployment Image Servicing and management) to repair corrupted Windows system files when SFC cannot do the job or Windows update is corrupted. Windows updates use Windows updates to download and apply the latest Windows updates to solve problems with Windows, applications, and hardware. In Windows 10, open Windows updates in the Settings app. For Windows 8/7, use the System window to find Windows updates. Clean boot a clean boot disables all third-party software that has been added to the Windows startup process. to clean boot, use System Configuration and task manager to disable all but microsoft services launched at startup. you learn how to do this later in the chapter. Safe mode, aka Safe boot Safe mode goes beyond a clean boot; it not only eliminates third-party software from Windows startup, it also reduces startup to only the Windows minimum configuration necessary to start the oS. It can create a stable environment when the Windows system or device drivers become corrupted. First try a clean boot. If that doesn\u2019t resolve a problem, try Safe mode. to do so, use System Configuration to restart the computer in Safe boot. System restore (rstrui.exe) use System restore to revert the system back to a previously saved restore point before a problem started.","title":"Solve Windows problems using these tools:"},{"location":"oct25_lesson.html#solve-application-errors-or-crashes-with-these-tools","text":"programs and Features (appwiz.cpl) use the programs and Features tool in Control panel to repair and uninstall applications and enable and disable Windows features. tasklist the tasklist command reports the process identifier (pId), which is a number that identifies each running process. taskkill the taskkill command uses the process Id to kill the task or process. use taskkill to end a process when task manager is unable to do so. Component Services use Component Services (also called Com+) in the administrative tools group to register components in the Windows registry so that an application can access the component. this resolves a problem that happens when a component is not correctly registered to the application when it is first installed or the connection between the two gets broken. Secondary logon use a secondary logon to run an application using administrator privileges that refused to run under the authority of a standard user. use the properties dialog box of the application program file to perform a secondary logon. Compatibility mode to solve an incompatibility problem with the oS, try running the application in compatibility mode by using the properties dialog box of the application program file. digital signature a digital signature verifies that the application is not a rogue application and that it is certified as Windows-compatible by microsoft. verify a digital signature using the properties dialog box of the application program file. data Sources use data Sources, also called odBC data Sources (open database Connectivity data Sources), to create a connection between a local application and a remote database so that the application can manage the database. data Sources can be accessed in the administrative tools group. task Scheduler (taskschd.msc) use task Scheduler in the administrative tools group to schedule a program to run at a future time, including at startup.","title":"Solve application errors or crashes with these tools:"},{"location":"oct25_lesson.html#manage-and-solve-problems-with-hardware-using-these-tools","text":"device manager (devmgmt.msc) recall device manager in Control panel is the go-to tool to make sure Windows has correctly installed a hardware device and to solve problems with a device. print management (printmanagement.msc) use print management in the administrative tools group to monitor and manage printer queues for all printers on the network. display applet (desk.cpl) use the display applet to manage display settings. In Windows 10, access display settings in the Settings app. For Windows 8/7, use Control panel. dxdiag (dxdiag.exe) use the dxdiag (directX diagnostic tool) command to diagnose problems with directX. directX is microsoft\u2019s interface between video and sound hardware and the applications that use these devices. Some gaming applications or other apps that rely heavily on graphics and sound require the latest version of directX. dxdiag can tell you which version of directX is installed; you can download the latest version from microsoft.com. memory diagnostics (mdsched.exe) use memory diagnostics in administrative tools to test memory before or after Windows is launched. chkdsk the chkdsk command checks the hard drive for a corrupted file system and bad sectors on the drive. use this command to check drive C: and recover data: chkdsk c: /r disk defragmenter (defrag.exe) defrag a magnetic hard drive to improve drive performance. (defrag.exe)","title":"Manage and solve problems with hardware using these tools:"},{"location":"oct26_lesson.html","text":"Arrays \u00b6 Review - What Things do You Need More Help With? \u00b6 Input / Output sout, scanner, input streams Comments javadoc single line or multi-line comments Variables Declaration and data-type Assignment Naming conventions Access Modifier Data Types type casting Basic types: int, double, float, long Special types: Strings Object types Operators Arithmetic Assignment Comparison Logical Bitwise Packages and Imports Math Scanner Package VS Class VS Object Conditionals if/else if/else switch ternary Loops While loop For loop do while break / continue Methods Static VS Public: Class accessible VS Object accessible Acessing / Calling a Method: dot notation or . Access Modifier: public, protected, private, determines if can be accessed outside class and inherited and overloaded. Method Parameters: Between ( ), preceeded by Data-Type, follows variable naming conventions Return types: After access and optional static modifier, is a Data-Type Overloading: Same method name, different parameter signature. Constructors: Same name as class it constructs, always public, no return type. Scope: Containment in brackets: { } Class Naming, File Naming, and Packaging Declaration Attributes / Instance variables Array Declaration \u00b6 Method 1 - Long way \u00b6 1 2 3 4 5 6 7 String [] companies = new String [ 5 ] ; companies [ 0 ] = \"Apple\" ; companies [ 1 ] = \"Microsoft\" ; companies [ 2 ] = \"Oracle\" ; companies [ 3 ] = \"VMWare\" ; companies [ 4 ] = \"Raspberry Pi Foundation\" ; Method 2 - Short way \u00b6 1 String [] companies = { \"Apple\" , \"Microsoft\" , \"Oracle\" , \"VMWare\" , \"Raspberry Pi Foundation\" }; Access the Elements of an Array \u00b6 1 System . out . println ( companies [ 2 ] ); // Expected output would be \"Oracle\" Change Elements of an Array \u00b6 1 2 companies [ 2 ] = \"College of the Redwoods\" ; System . out . println ( companies [ 2 ] ); // Expected output would be \"Ciollege of the Redwoods\" Array Length and Accessing the Last Element \u00b6 1 String lastElement = companies [ companies . length - 1 ] ; // -1 because remember computer scientist start counting at \"0\" Array Looping \u00b6 Basic Loop \u00b6 1 2 3 for ( int i = 0 ; i < companies . length ; i ++ ) { System . out . println ( companies [ i ] ); } Enhanced OR foreach Loop \u00b6 1 2 3 for ( String e : companies ) { System . out . println ( e ); } Multidimensional Arrays \u00b6 Declaring \u00b6 1 String [][] myCompanies = { { \"Apple\" , \"Microsoft\" }, { \"Facebook\" , \"Twitter\" } }; Accessing \u00b6 1 System . out . println ( myCompanies [ 1 ][ 0 ] ); // Expected output \"Facebook\" Looping! \u00b6 1 2 3 4 5 for ( int i = 0 ; i < myCompanies . length ; ++ i ) { for ( int j = 0 ; j < myCompanies [ i ] . length ; ++ j ) { System . out . println ( myCompanies [ i ][ j ] ); } }","title":"Arrays"},{"location":"oct26_lesson.html#arrays","text":"","title":"Arrays"},{"location":"oct26_lesson.html#review---what-things-do-you-need-more-help-with","text":"Input / Output sout, scanner, input streams Comments javadoc single line or multi-line comments Variables Declaration and data-type Assignment Naming conventions Access Modifier Data Types type casting Basic types: int, double, float, long Special types: Strings Object types Operators Arithmetic Assignment Comparison Logical Bitwise Packages and Imports Math Scanner Package VS Class VS Object Conditionals if/else if/else switch ternary Loops While loop For loop do while break / continue Methods Static VS Public: Class accessible VS Object accessible Acessing / Calling a Method: dot notation or . Access Modifier: public, protected, private, determines if can be accessed outside class and inherited and overloaded. Method Parameters: Between ( ), preceeded by Data-Type, follows variable naming conventions Return types: After access and optional static modifier, is a Data-Type Overloading: Same method name, different parameter signature. Constructors: Same name as class it constructs, always public, no return type. Scope: Containment in brackets: { } Class Naming, File Naming, and Packaging Declaration Attributes / Instance variables","title":"Review - What Things do You Need More Help With?"},{"location":"oct26_lesson.html#array-declaration","text":"","title":"Array Declaration"},{"location":"oct26_lesson.html#method-1---long-way","text":"1 2 3 4 5 6 7 String [] companies = new String [ 5 ] ; companies [ 0 ] = \"Apple\" ; companies [ 1 ] = \"Microsoft\" ; companies [ 2 ] = \"Oracle\" ; companies [ 3 ] = \"VMWare\" ; companies [ 4 ] = \"Raspberry Pi Foundation\" ;","title":"Method 1 - Long way"},{"location":"oct26_lesson.html#method-2---short-way","text":"1 String [] companies = { \"Apple\" , \"Microsoft\" , \"Oracle\" , \"VMWare\" , \"Raspberry Pi Foundation\" };","title":"Method 2 - Short way"},{"location":"oct26_lesson.html#access-the-elements-of-an-array","text":"1 System . out . println ( companies [ 2 ] ); // Expected output would be \"Oracle\"","title":"Access the Elements of an Array"},{"location":"oct26_lesson.html#change-elements-of-an-array","text":"1 2 companies [ 2 ] = \"College of the Redwoods\" ; System . out . println ( companies [ 2 ] ); // Expected output would be \"Ciollege of the Redwoods\"","title":"Change Elements of an Array"},{"location":"oct26_lesson.html#array-length-and-accessing-the-last-element","text":"1 String lastElement = companies [ companies . length - 1 ] ; // -1 because remember computer scientist start counting at \"0\"","title":"Array Length and Accessing the Last Element"},{"location":"oct26_lesson.html#array-looping","text":"","title":"Array Looping"},{"location":"oct26_lesson.html#basic-loop","text":"1 2 3 for ( int i = 0 ; i < companies . length ; i ++ ) { System . out . println ( companies [ i ] ); }","title":"Basic Loop"},{"location":"oct26_lesson.html#enhanced-or-foreach-loop","text":"1 2 3 for ( String e : companies ) { System . out . println ( e ); }","title":"Enhanced OR foreach Loop"},{"location":"oct26_lesson.html#multidimensional-arrays","text":"","title":"Multidimensional Arrays"},{"location":"oct26_lesson.html#declaring","text":"1 String [][] myCompanies = { { \"Apple\" , \"Microsoft\" }, { \"Facebook\" , \"Twitter\" } };","title":"Declaring"},{"location":"oct26_lesson.html#accessing","text":"1 System . out . println ( myCompanies [ 1 ][ 0 ] ); // Expected output \"Facebook\"","title":"Accessing"},{"location":"oct26_lesson.html#looping","text":"1 2 3 4 5 for ( int i = 0 ; i < myCompanies . length ; ++ i ) { for ( int j = 0 ; j < myCompanies [ i ] . length ; ++ j ) { System . out . println ( myCompanies [ i ][ j ] ); } }","title":"Looping!"},{"location":"oct5_lesson.html","text":"Methods Take 2 \u00b6 Why We Create Methods \u00b6 Methods directly related to the ACTIONS performed on our OBJECTS Object: car Method: turn Methods allow us to re-use code. e.g. Scanner let\u2019s us get input of different Data Types (int, double, String), without us having to re-write the data-type conversions or the code to read from stdin Methods encapsulate complex algorithms so we can ignore the details and just trust the method to do its job. e.g Math.toRadians, Math.pow, Math.toDegrees: we trust these to do what they say even though we may not know how to implememnt them ourselves. Methods allow us to break up bigger problems into smaller, more understandable units. functional decomposition Think about our car action of turn. We could implment it all in 1 method that says: Driver places hands on wheels Drive turns steering wheel 25 degrees to the left Hydraulic assist system in rack and pinion mechanism takes rotational motion energy and converts it into linear motion energy Linear motion energy is transfered to the wheels wheels turn at an angle proportional to that of the 25 degree turn of the steering wheel OOORRR, we could acknowledge that each one of these statements is housed within its own Objects (Driver, Steering Wheel, Rack and Pinion, Wheels), and we could divide the actions into methods in each of those classes allowing us to functionally decompose the process of turning. Driver: movesHands(Position p) rotatesWheel(SteeringWheel s, Force f, Direction v) SteeringWheel: rotate(Direction rl, Degree d) Review Method Signature / Static VS Public \u00b6 Method Signature Criteria for Static ) Method Parameters \u00b6 Information passed to methods 1 2 3 public void rotateWheel(Direction rl, Degrees d) { .... } Comes between the open and close parenthesis Multiple parameters are separated by commas Can be basic types, objects, or arrays (think list) of these things Return Types \u00b6 How we get data back out of our methods. 1 2 3 4 public Position rotateWheel(Direction rl, Degrees d) { .... return new Position(x, y, z); } Must return the same datatype noted in the return type of the method signature Return type can be basic types, objects, or arrays of these things You can return null Scope \u00b6 Class scope Variables and methods in the class scope will persist as long as the class and or objects of that class persist The can be masked by Method scoped variables. Method scope Once you return from a method, any variables locally declared in that method disappear. Overloading Methods \u00b6 We saw this last week with constructors Overloading by w3schools","title":"Methods Take 2"},{"location":"oct5_lesson.html#methods-take-2","text":"","title":"Methods Take 2"},{"location":"oct5_lesson.html#why-we-create-methods","text":"Methods directly related to the ACTIONS performed on our OBJECTS Object: car Method: turn Methods allow us to re-use code. e.g. Scanner let\u2019s us get input of different Data Types (int, double, String), without us having to re-write the data-type conversions or the code to read from stdin Methods encapsulate complex algorithms so we can ignore the details and just trust the method to do its job. e.g Math.toRadians, Math.pow, Math.toDegrees: we trust these to do what they say even though we may not know how to implememnt them ourselves. Methods allow us to break up bigger problems into smaller, more understandable units. functional decomposition Think about our car action of turn. We could implment it all in 1 method that says: Driver places hands on wheels Drive turns steering wheel 25 degrees to the left Hydraulic assist system in rack and pinion mechanism takes rotational motion energy and converts it into linear motion energy Linear motion energy is transfered to the wheels wheels turn at an angle proportional to that of the 25 degree turn of the steering wheel OOORRR, we could acknowledge that each one of these statements is housed within its own Objects (Driver, Steering Wheel, Rack and Pinion, Wheels), and we could divide the actions into methods in each of those classes allowing us to functionally decompose the process of turning. Driver: movesHands(Position p) rotatesWheel(SteeringWheel s, Force f, Direction v) SteeringWheel: rotate(Direction rl, Degree d)","title":"Why We Create Methods"},{"location":"oct5_lesson.html#review-method-signature--static-vs-public","text":"Method Signature Criteria for Static )","title":"Review Method Signature / Static VS Public"},{"location":"oct5_lesson.html#method-parameters","text":"Information passed to methods 1 2 3 public void rotateWheel(Direction rl, Degrees d) { .... } Comes between the open and close parenthesis Multiple parameters are separated by commas Can be basic types, objects, or arrays (think list) of these things","title":"Method Parameters"},{"location":"oct5_lesson.html#return-types","text":"How we get data back out of our methods. 1 2 3 4 public Position rotateWheel(Direction rl, Degrees d) { .... return new Position(x, y, z); } Must return the same datatype noted in the return type of the method signature Return type can be basic types, objects, or arrays of these things You can return null","title":"Return Types"},{"location":"oct5_lesson.html#scope","text":"Class scope Variables and methods in the class scope will persist as long as the class and or objects of that class persist The can be masked by Method scoped variables. Method scope Once you return from a method, any variables locally declared in that method disappear.","title":"Scope"},{"location":"oct5_lesson.html#overloading-methods","text":"We saw this last week with constructors Overloading by w3schools","title":"Overloading Methods"},{"location":"sep13_lesson.html","text":"Week 4 CIS-98 Notes \u00b6 Features of Processors \u00b6 Processor freq: Speed of operation Lithography: Space between transistors Socket & Chipset: Must match the processor Multiprocessing: Multiple Cores/ALUs in use Multithreading: Multiple threads per Core/ALU Multi-Core: Multiple processors on the same housing Dual Processor: 2 Separate chips in separates housings Cache: Memory included in processor package L1: on the processor die L2: in the same package GPU: may be integreated in processor Major Manufacturers \u00b6 Intel AMD Should know how to determine family, generation, and features like unlocked. Memory Features \u00b6 DIMM: dual inline memory module SO-DIMM: Small Outline, dual inline memory module Used in laptops and some All-In-One machines DDR: Double Data Rate, 2x as fast as SIMM DDR2: 4x SIMM DDR3 & DDR4: 8x SIMM CAS or CL: Column Access Strobe, measureing access timing Lower numbers == faster ECC: Error Correcting Code, find and fix errors Parity: Older mem error checking Buffered & Registered: Amplify signal before written","title":"Week 4 CIS-98 Notes"},{"location":"sep13_lesson.html#week-4-cis-98-notes","text":"","title":"Week 4 CIS-98 Notes"},{"location":"sep13_lesson.html#features-of-processors","text":"Processor freq: Speed of operation Lithography: Space between transistors Socket & Chipset: Must match the processor Multiprocessing: Multiple Cores/ALUs in use Multithreading: Multiple threads per Core/ALU Multi-Core: Multiple processors on the same housing Dual Processor: 2 Separate chips in separates housings Cache: Memory included in processor package L1: on the processor die L2: in the same package GPU: may be integreated in processor","title":"Features of Processors"},{"location":"sep13_lesson.html#major-manufacturers","text":"Intel AMD Should know how to determine family, generation, and features like unlocked.","title":"Major Manufacturers"},{"location":"sep13_lesson.html#memory-features","text":"DIMM: dual inline memory module SO-DIMM: Small Outline, dual inline memory module Used in laptops and some All-In-One machines DDR: Double Data Rate, 2x as fast as SIMM DDR2: 4x SIMM DDR3 & DDR4: 8x SIMM CAS or CL: Column Access Strobe, measureing access timing Lower numbers == faster ECC: Error Correcting Code, find and fix errors Parity: Older mem error checking Buffered & Registered: Amplify signal before written","title":"Memory Features"},{"location":"sep14_lesson.html","text":"Methods \u00b6 Signature \u00b6 Access Modifer (public, protected, private), Optional [static] modifier, Return Type (void, double, String, Object, etc) Method Name (Anything you want following nameing convention) Method Parameters (Comma separated list of DataType parameterName) Example of a static or class method (i.e. belongs to the class) 1 2 3 4 5 public class MyClass { public static void main(String args[]) { // Method block statments go here... } } Example of a public or object/instance method (i.e. can only be called from an object instance) 1 2 3 4 5 public class MyClass { public String sayHello(String firstName, String lastName) { return \"Hello %s %s!\".format(firstName, lastName); } } Example calling the static/class method 1 MyClass.main(new String[]); Example calling the public/object/instance method 1 2 MyClass myClass = new MyClass(); myClass.sayHello(\"Trevor\", \"Hartman\"); ???WHY??? \u00b6 Static Methods criteria for use static methods can\u2019t modify the state of an object. 4 wheels of a car, but all 4 are independent or have independent state. static methods mostly operate on arguments passed into it, commonly Utility Methods. java.lang.Math or StringUtils both only really perform action on arguments. StringUtils.isEmpty(String text) if you need a method to act on the entire class hierarchy equals() method for Ojbects is a good example Other Examples Factory design pattern (i.e. a method to CREATE other objects) Utility methods like Array (provides methods that only work on array arguments) valueOf functions that convert types Every other type of method should be a public/object/instance method \u00b6","title":"Methods"},{"location":"sep14_lesson.html#methods","text":"","title":"Methods"},{"location":"sep14_lesson.html#signature","text":"Access Modifer (public, protected, private), Optional [static] modifier, Return Type (void, double, String, Object, etc) Method Name (Anything you want following nameing convention) Method Parameters (Comma separated list of DataType parameterName) Example of a static or class method (i.e. belongs to the class) 1 2 3 4 5 public class MyClass { public static void main(String args[]) { // Method block statments go here... } } Example of a public or object/instance method (i.e. can only be called from an object instance) 1 2 3 4 5 public class MyClass { public String sayHello(String firstName, String lastName) { return \"Hello %s %s!\".format(firstName, lastName); } } Example calling the static/class method 1 MyClass.main(new String[]); Example calling the public/object/instance method 1 2 MyClass myClass = new MyClass(); myClass.sayHello(\"Trevor\", \"Hartman\");","title":"Signature"},{"location":"sep14_lesson.html#why","text":"Static Methods criteria for use static methods can\u2019t modify the state of an object. 4 wheels of a car, but all 4 are independent or have independent state. static methods mostly operate on arguments passed into it, commonly Utility Methods. java.lang.Math or StringUtils both only really perform action on arguments. StringUtils.isEmpty(String text) if you need a method to act on the entire class hierarchy equals() method for Ojbects is a good example Other Examples Factory design pattern (i.e. a method to CREATE other objects) Utility methods like Array (provides methods that only work on array arguments) valueOf functions that convert types","title":"???WHY???"},{"location":"sep14_lesson.html#every-other-type-of-method-should-be-a-publicobjectinstance-method","text":"","title":"Every other type of method should be a public/object/instance method"},{"location":"sep20_lesson.html","text":"Drives \u00b6 Magnetic Drives \u00b6 Stacked, spinning platters with read/write head between each Platters spin at 5400, 7200, 10000, and 15000 RPM Data is organized in tracks (one loop) and sectors (segment of track) Low-Level-Formatting, or sector markings are written before leaving factory 3.5\u201d and 2.5\u201d form factor SSD or Solid State \u00b6 No moving parts NAND, or Not And, pair of transistor gates holds data in rows and columns Lifespan based of writes to drive because of limited transistor re-programming Currently a tiny bit more expensive than magnetic Sata, M.2 sata, M.2 NVME, PCI Express NVME Uses wear leveling to ensure LBA does not always refere to the same block Reserves blocks to use when other blocks approach re-programming limits Usually 2.5\u201d form factor S.M.A.R.T or Self Monitoring Analysis and Reporting Technology \u00b6 Used to predict drive failures and warn you before the failure takes place. Usually turned on/off in BIOS/UEFI SSDs Report # of writes. Interfaces \u00b6 IDE: Integrated Drive Electronics (No longer used) SCSI: Small Computer System Interface (No longer used) supported up to 15 drives per cable. SATA: Serial ATA, 7-pin data with 15 pin power connectors Sata 1: 1.5 Gb/s Sata 2: 3 Gb/s Sata 3: 6 Gb/s Sata Express: 18 Gb/s NVMe: Non-Volatile Memory Express, PCIex4, M.2, or U.2 Only SSD PCIex4 required 32Gb/s or 5x Sata 3 RAID \u00b6 RAID 0: Striping RAID 1: Mirroring RAID 5: Stripes with Parity info Requires 3 or more drives No data duplication, so better space utilization RAID 10: Stiping and Mirroring Raid 6","title":"Drives"},{"location":"sep20_lesson.html#drives","text":"","title":"Drives"},{"location":"sep20_lesson.html#magnetic-drives","text":"Stacked, spinning platters with read/write head between each Platters spin at 5400, 7200, 10000, and 15000 RPM Data is organized in tracks (one loop) and sectors (segment of track) Low-Level-Formatting, or sector markings are written before leaving factory 3.5\u201d and 2.5\u201d form factor","title":"Magnetic Drives"},{"location":"sep20_lesson.html#ssd-or-solid-state","text":"No moving parts NAND, or Not And, pair of transistor gates holds data in rows and columns Lifespan based of writes to drive because of limited transistor re-programming Currently a tiny bit more expensive than magnetic Sata, M.2 sata, M.2 NVME, PCI Express NVME Uses wear leveling to ensure LBA does not always refere to the same block Reserves blocks to use when other blocks approach re-programming limits Usually 2.5\u201d form factor","title":"SSD or Solid State"},{"location":"sep20_lesson.html#smart-or-self-monitoring-analysis-and-reporting-technology","text":"Used to predict drive failures and warn you before the failure takes place. Usually turned on/off in BIOS/UEFI SSDs Report # of writes.","title":"S.M.A.R.T or Self Monitoring Analysis and Reporting Technology"},{"location":"sep20_lesson.html#interfaces","text":"IDE: Integrated Drive Electronics (No longer used) SCSI: Small Computer System Interface (No longer used) supported up to 15 drives per cable. SATA: Serial ATA, 7-pin data with 15 pin power connectors Sata 1: 1.5 Gb/s Sata 2: 3 Gb/s Sata 3: 6 Gb/s Sata Express: 18 Gb/s NVMe: Non-Volatile Memory Express, PCIex4, M.2, or U.2 Only SSD PCIex4 required 32Gb/s or 5x Sata 3","title":"Interfaces"},{"location":"sep20_lesson.html#raid","text":"RAID 0: Striping RAID 1: Mirroring RAID 5: Stripes with Parity info Requires 3 or more drives No data duplication, so better space utilization RAID 10: Stiping and Mirroring Raid 6","title":"RAID"},{"location":"sep28_lesson.html","text":"Conditionals \u00b6 You Will Understand Why We Need Conditions \u00b6 To make decisions based off different inputs. Perform different actions in the same program. Basics \u00b6 if, switch, else if boolean expression, boolean variable, boolean method call executes or bypasses statements in block 1 2 3 4 5 6 7 8 9 10 if (x > 0) { System.out.println(\"x is positive\"); } else if(x == 0) { System.out.println(\"x is 0\"); } else { if( x > -10 ) { System.out.println(\"x is negative, but barely\"); } System.out.println(\"x is negative\"); } Relational operators OR Comparison Operators \u00b6 1 2 3 4 5 6 7 8 x == y // x is equal to y x != y // x is not equal to y x > y // x is greater than y x < y // x is less than y x >= y // x is greater than or equal to y x <= y // x is less than or equal to y // Strings are different because they are special/immutable objects aStr.equals(\"abc\"); Logical operators \u00b6 1 2 3 && Logical and Returns true if both statements are true x < 5 && x < 10 || Logical or Returns true if one of the statements is true x < 5 || x < 4 ! Logical not Reverse the result, returns false if the result is true !(x < 5 && x < 10) Short Circuit Evaluation \u00b6 The first condition that satisfies the condition stops evaluation DeMorgan\u2019s Law \u00b6 1 2 !(A && B) isthesameas !A || !B !(A || B) isthesameas !A && !B Recursion is Important \u00b6 But we\u2019re not going to cover that much in this class Review \u00b6 Modulus Variables in methods Why we use methods class/static vs public/object/instance","title":"Conditionals"},{"location":"sep28_lesson.html#conditionals","text":"","title":"Conditionals"},{"location":"sep28_lesson.html#you-will-understand-why-we-need-conditions","text":"To make decisions based off different inputs. Perform different actions in the same program.","title":"You Will Understand Why We Need Conditions"},{"location":"sep28_lesson.html#basics","text":"if, switch, else if boolean expression, boolean variable, boolean method call executes or bypasses statements in block 1 2 3 4 5 6 7 8 9 10 if (x > 0) { System.out.println(\"x is positive\"); } else if(x == 0) { System.out.println(\"x is 0\"); } else { if( x > -10 ) { System.out.println(\"x is negative, but barely\"); } System.out.println(\"x is negative\"); }","title":"Basics"},{"location":"sep28_lesson.html#relational-operators-or-comparison-operators","text":"1 2 3 4 5 6 7 8 x == y // x is equal to y x != y // x is not equal to y x > y // x is greater than y x < y // x is less than y x >= y // x is greater than or equal to y x <= y // x is less than or equal to y // Strings are different because they are special/immutable objects aStr.equals(\"abc\");","title":"Relational operators OR Comparison Operators"},{"location":"sep28_lesson.html#logical-operators","text":"1 2 3 && Logical and Returns true if both statements are true x < 5 && x < 10 || Logical or Returns true if one of the statements is true x < 5 || x < 4 ! Logical not Reverse the result, returns false if the result is true !(x < 5 && x < 10)","title":"Logical operators"},{"location":"sep28_lesson.html#short-circuit-evaluation","text":"The first condition that satisfies the condition stops evaluation","title":"Short Circuit Evaluation"},{"location":"sep28_lesson.html#demorgans-law","text":"1 2 !(A && B) isthesameas !A || !B !(A || B) isthesameas !A && !B","title":"DeMorgan's Law"},{"location":"sep28_lesson.html#recursion-is-important","text":"But we\u2019re not going to cover that much in this class","title":"Recursion is Important"},{"location":"sep28_lesson.html#review","text":"Modulus Variables in methods Why we use methods class/static vs public/object/instance","title":"Review"},{"location":"sep6_lesson.html","text":"Most Important Part of Motherboard Selection \u00b6 Chipset! \u00b6 Prior to 2008 used to be divided into 2 chips Northbridge: CPU pathway to RAM Southbridge: CPU communication to PCI and Storage Intel moved most of the Northbridge into the CPU, and some of it to the Chipset 9th/10th Gen 11th/12th Gen","title":"Most Important Part of Motherboard Selection"},{"location":"sep6_lesson.html#most-important-part-of-motherboard-selection","text":"","title":"Most Important Part of Motherboard Selection"},{"location":"sep6_lesson.html#chipset","text":"Prior to 2008 used to be divided into 2 chips Northbridge: CPU pathway to RAM Southbridge: CPU communication to PCI and Storage Intel moved most of the Northbridge into the CPU, and some of it to the Chipset 9th/10th Gen 11th/12th Gen","title":"Chipset!"},{"location":"CIS-50/Chapter_1.html","text":"Database Systems \u00b6 Data Vs Information \u00b6 Data is raw facts, the building blocks of info Information is processing raw data for meaning Accurate, contextual, and timely information is key to good decision making. Other Relevant terms: knowledge: The body of information and facts about a specific subject. Knowledge implies familiarity, awareness, and understanding of information as it applies to an environment. A key characteristic is that new knowledge can be derived from old knowledge. data management: A process that focuses on data collection, storage, and retrieval. Common data management functions include addition, deletion, modification, and listing. What is a Database \u00b6 database: A shared, integrated computer structure that houses a collection of related data. A database contains two types of data: end-user data (raw facts) and metadata. metadata: Data about data. Relationships Data characteristics (names, types, null, etc.) Database management system (DBMS): The collection of programs that manages the database structure and controls access to the data stored in the database. A database provides: Improved data sharing Improved data security Better data integration Minimized data inconsistency Improved data access Improved decision making Increased end-user productivity DB Types and Classifications User Classification Single User/Desktop: 1 user on a dekstop Multiuser/Workgroup: 50 or less users supported Enterprise: Supports hundreds of thousands of users Location Classification Centralized: single site, multi-user Distributed: 2 or more independent sites with related data, multi-user Cloud Database: Maintained by cloud providers, unknown hardware, but known performance Data Classification (i.e. type of data stored) General-Purpose: wide variety of data used by multiple disciplines Discipline-Specific: Focused on specific subjects. Data Structure Classification Unstructured data: original raw data structured data: formatted, and stored to aid storage and retrieval Semi-Structured data: Partially structured. XML Database: an example of a semi-structured DB. Usage Classification (Most common today) Operational: Designed to support day-to-day operations OLTP: Same as Operational Transactional: Same as Operational Production: Same as Operational Analytical: Tactical / Strategic decision usage Data warehouse: historical data optimized for decision support Warehouse data from Operational DB + Other Sources OLAP: Frontend tools used to model data on warehouse BI: Comprehensive set of tools used to make business decisions on warehouse NoSQL (Not Just SQL) Not a traditional RDBMS built to handle: volume, variety, and velocity of data of new business demands from social medai Why Design a Database \u00b6 To make data atomic Avoid repetetive data Optimize storage, avoid unnecessary nulls Optimize retrieval via indexing and views Database Evolution \u00b6 DP Problems: data inconsistency, data anomaly, data dependence, and structural dependence Lengthy development times Difficulty getting quick answers Complex to manage and administrate - Data Redundancy, islands of info, no data integrity Lacked security and data sharing Difficult to change - Structural dependence Data type change leads to program change - Data dependence Database Components \u00b6 Hardware: servers, workstations, switches, physical storage devices Software: Operating System: Linux, MacOS Unix, Windows DBMS Software: MySQL, SQL Server, Oracle, DB2, PostgreSQL Applications: DBBeaver, SQL Studio People: Sys Admins, DBAs, DB Architects, Developers, End Users Procedures: Audits, monitoring, standards of business. Data: set of facts enetered into DB. Main Functions of RDBMS \u00b6 Data Dictionary Mgmt: schema, metadata, removes structural and data dependence from DBMS Data Storage Mgmt: Manages complex structures required for storage and retrieval. Important for DB Perf. Tuning. Data Transformation and Presentation: Coerces data into required formats. Relieves you from chore of distinguishing between logical data and physical data format (think date formatting VS how its stored). Security Mgmt: User level security, CRUD ACLs, query and report access Multiuser access control: Multi-CRUD operations without violating DB integrity Backup and recovery Mgmt: Just what it sounds like Data Integrity Mgmt: Integrity rules to reduce redundancy and maximize data consistency. Relationships are used to enforce data integrity Database Acess Languages and APIs: query lang (SQL), APIs to Java, C, C#, Python, etc. Database Comm Interface: Direct connect to websites, email apps, etc.","title":"Database Systems"},{"location":"CIS-50/Chapter_1.html#database-systems","text":"","title":"Database Systems"},{"location":"CIS-50/Chapter_1.html#data-vs-information","text":"Data is raw facts, the building blocks of info Information is processing raw data for meaning Accurate, contextual, and timely information is key to good decision making. Other Relevant terms: knowledge: The body of information and facts about a specific subject. Knowledge implies familiarity, awareness, and understanding of information as it applies to an environment. A key characteristic is that new knowledge can be derived from old knowledge. data management: A process that focuses on data collection, storage, and retrieval. Common data management functions include addition, deletion, modification, and listing.","title":"Data Vs Information"},{"location":"CIS-50/Chapter_1.html#what-is-a-database","text":"database: A shared, integrated computer structure that houses a collection of related data. A database contains two types of data: end-user data (raw facts) and metadata. metadata: Data about data. Relationships Data characteristics (names, types, null, etc.) Database management system (DBMS): The collection of programs that manages the database structure and controls access to the data stored in the database. A database provides: Improved data sharing Improved data security Better data integration Minimized data inconsistency Improved data access Improved decision making Increased end-user productivity DB Types and Classifications User Classification Single User/Desktop: 1 user on a dekstop Multiuser/Workgroup: 50 or less users supported Enterprise: Supports hundreds of thousands of users Location Classification Centralized: single site, multi-user Distributed: 2 or more independent sites with related data, multi-user Cloud Database: Maintained by cloud providers, unknown hardware, but known performance Data Classification (i.e. type of data stored) General-Purpose: wide variety of data used by multiple disciplines Discipline-Specific: Focused on specific subjects. Data Structure Classification Unstructured data: original raw data structured data: formatted, and stored to aid storage and retrieval Semi-Structured data: Partially structured. XML Database: an example of a semi-structured DB. Usage Classification (Most common today) Operational: Designed to support day-to-day operations OLTP: Same as Operational Transactional: Same as Operational Production: Same as Operational Analytical: Tactical / Strategic decision usage Data warehouse: historical data optimized for decision support Warehouse data from Operational DB + Other Sources OLAP: Frontend tools used to model data on warehouse BI: Comprehensive set of tools used to make business decisions on warehouse NoSQL (Not Just SQL) Not a traditional RDBMS built to handle: volume, variety, and velocity of data of new business demands from social medai","title":"What is a Database"},{"location":"CIS-50/Chapter_1.html#why-design-a-database","text":"To make data atomic Avoid repetetive data Optimize storage, avoid unnecessary nulls Optimize retrieval via indexing and views","title":"Why Design a Database"},{"location":"CIS-50/Chapter_1.html#database-evolution","text":"DP Problems: data inconsistency, data anomaly, data dependence, and structural dependence Lengthy development times Difficulty getting quick answers Complex to manage and administrate - Data Redundancy, islands of info, no data integrity Lacked security and data sharing Difficult to change - Structural dependence Data type change leads to program change - Data dependence","title":"Database Evolution"},{"location":"CIS-50/Chapter_1.html#database-components","text":"Hardware: servers, workstations, switches, physical storage devices Software: Operating System: Linux, MacOS Unix, Windows DBMS Software: MySQL, SQL Server, Oracle, DB2, PostgreSQL Applications: DBBeaver, SQL Studio People: Sys Admins, DBAs, DB Architects, Developers, End Users Procedures: Audits, monitoring, standards of business. Data: set of facts enetered into DB.","title":"Database Components"},{"location":"CIS-50/Chapter_1.html#main-functions-of-rdbms","text":"Data Dictionary Mgmt: schema, metadata, removes structural and data dependence from DBMS Data Storage Mgmt: Manages complex structures required for storage and retrieval. Important for DB Perf. Tuning. Data Transformation and Presentation: Coerces data into required formats. Relieves you from chore of distinguishing between logical data and physical data format (think date formatting VS how its stored). Security Mgmt: User level security, CRUD ACLs, query and report access Multiuser access control: Multi-CRUD operations without violating DB integrity Backup and recovery Mgmt: Just what it sounds like Data Integrity Mgmt: Integrity rules to reduce redundancy and maximize data consistency. Relationships are used to enforce data integrity Database Acess Languages and APIs: query lang (SQL), APIs to Java, C, C#, Python, etc. Database Comm Interface: Direct connect to websites, email apps, etc.","title":"Main Functions of RDBMS"},{"location":"CIS-50/Chapter_2.html","text":"Data Models \u00b6 Importance of Data Modeling \u00b6 Helps clarify how all the pieces of a business fit together, but can drill down into details. (High Level and Detailed views). A good Data Model (Blueprint) means different end-user views of the data won\u2019t matter. Data Modeling Foundation \u00b6 Data Modeling: The process of creating a specific data model for a problem domain. Starts with simple problem and understanding Increases detail as understanding increases When complete Data Model is a blueprint for: Instructions to build a database Meets all end-user requirements Will clearly be defined in text and diagrams Should meet at least these 3 criteria Description of the data structures Enforcable data integrity rules Method for manipulating and transforming data. Data Model: Represents data structures and their characteristics relations, constraints, transformations, and other constructs with the purpose of supporting a specific problem domain. Building Blocks: \u00b6 Entities: Nouns Attributes: Characteristic of Entity Relationships: How Entities are associated (usually linking verbs) 1:M, 1..*: One to many M:N or .. : Many to many 1:1 or 1..1: One to one Constraints: Data restrictions Ensure data integrity Expressed as rules: Business Rules & Database Design \u00b6 Business Rules are policies, procedures, and principles of organizations. They are also the first step in identifying and creating the aforementioned building blocks Rules for Business Rules: Should be easy to understand Should be widely disseminated Business Rule Discovery \u00b6 Direct Interviews with End-Users (managers, policy makers) Verify end-user perceptions, however Verify end-user perceptions, however Documentation Note Document identified business rules to: * Standardize the company\u2019s view of data * Facilitate communication between users and designers * Abets understanding scope of data * Clarifies business process and perceptions * Allows developing and re-visting correct relationships and constraints. Translating Business Rules into a Data Model \u00b6 Nouns often translate into an Entities. Verbs often translate into relationships between entities. From business rule, determine cardinality by assuming bi-directional relationships and asking: How many instances of entity B are related to entity A How many instances of entity A are related to entity B Attributes can also be nouns or adverbs, but generally are characteristics of the entities. Naming conventions should be followed: CUS_CREDIT_LIMIT: e.g. field/attribute name: All upper case, proceeded by Entity Abbrev, underscores for spaces. Evolution of Major Models \u00b6 Hierarchical model: Appendix K Upside-down tree Parent can have many children, but children only have a single parent. Composed of segments, which are like file-system records Network model: Appendix L DB is a collection of records with 1:M relationships, but children can have many parents. Defined: Schema (Org of DB as seen by DBA, tables, indexes, views, and queries), SubSchema (Org of DB as seen by Applications), DML (Defines how to manipulate DB i.e. SQL), DDL (Allows DBA to define Schema Structure) Limited Ad-Hoc queryability Heavy demand on application developers Structural changes lead to application massive changes (dats dependence) Relational model (Solves general Data Problems): Based on mathematical relation concept (But think of it as a TABLE of ROWS and COLUMNS) COLUMNS are attributes, and ROWS are called tuples TABLES: complete data and structural independence because it is a logical structure. How a table is stored is of no concern to a user or designer. RDBMS sophisticated mathematical data manipulation constructs, but they are hidden from the end-user!!! Queries are intuitive and logical (SQL, specifies what must be done without expressing HOW). Tables are releated via a common attribute Easy to diagrame with Relational Diagrams 3 Simple Parts User Interface: DBBeaver, Sql Studio, etc. Helps generate SQL Collection of Tables: Pesents data in an easy to unserstand fashion. SQL Engine: Translate SQL user requests into complex mathematical data manipulations. Due to robust mathematical foundation RDBMs can easily be extended with new capabilities like XML and Objects. Entity relationship model: Graphical way of representing the relational model with ERDs Entities: Rectangles Name: Noun in center of rectangle. Attributes: Circles branched from entities in ERD Characteristics of Entity Relationships: Diamond, Crows Foot, or UML/Class notation. OO Model (Solves specific needs): Appendix G Popular in CAD, GIS markets, which require complex objects. Data and relationships contained in single structure known as an object. Contains all operations that can be performed on an object. Components: Object: Single instance of a real world entity Attributes: Properties of an object Class: Collection of similar objects with shared structure. Methods: Behaviors you can run on objects. Class Hierarchy: upside-down tree with single parent relationship Inheritance: Can inherit attributes and methods of parent. Depicted with UML Object/Relational and XML ERDM adds OO features into simpler RDM structure. Encapsulated data and methods Extensible Data Types based on Classes XML Databases emerged to manage unstructured data like e-mail, web-pages, diagrams, etc. Emerging Data Models \u00b6 Exponential data growth Getting actionable BI data from Petabytes of collected data has become paramount. Browsing patterns, purchasing histories, customer preference, customer behaviors, social connections. Mobile data, GPS, RFID, sensors, IoT, sound, pictures, etc. Big Data: Find better ways to manage large data, get valuable business insights, but reduce costs. 3Vs: Volume: Petabytes of data Velocity: Exponential growth, and need to mine it quickly (Response time is expected to be nearly instant). Variety: Many different data formats not suitable to traditional RDBMS. BigData Technologies \u00b6 hadoop: java based, distributed, with thousands of nodes. Componenets are HDFS and MapReduce HDFS: Write once, read-many model Name Node: Stores all FS metadata Data Node: Stores fixed data-blocks that gets replicated Client Node: User interface to HDFS MapReduce: API that works with structured and unstructured data Uses many nodes to perform 2 functions Map and Reduce Map divides a job, Reduce reduces it into a filtered result set. NoSQL: Large distributed DB System that stores structured and unstructured data. They are not based on RDBMS Model They are highly distributed They are highly scalable, fault tolerant, and available Support data with large number of attributes but sparse entity types Built for performance and not data consistency Examples: Key/Value stores: Memcached, Redis Document DBs: Mongo, ElasticSearch Graph DBs: Neo4J Classification of Data Models \u00b6 Classified by ANSI/SPARC defined Levels of Abstraction (External, Conceptual, Internal, Physical) External: Subset of the Data Model necessary for the application developer or report writers. Conceptual: The global (Bird\u2019s Eye) view of the data model. A Macro picture of the organization\u2019s data. Internal: Map of conceptual model to a specific DBMS Entities of Conceptual model are mapped to Tables Attributes to columns, data-types, constraints, etc. Physical: The actual hardware (SSDs, SAN, etc.) the data is stored on.","title":"Data Models"},{"location":"CIS-50/Chapter_2.html#data-models","text":"","title":"Data Models"},{"location":"CIS-50/Chapter_2.html#importance-of-data-modeling","text":"Helps clarify how all the pieces of a business fit together, but can drill down into details. (High Level and Detailed views). A good Data Model (Blueprint) means different end-user views of the data won\u2019t matter.","title":"Importance of Data Modeling"},{"location":"CIS-50/Chapter_2.html#data-modeling-foundation","text":"Data Modeling: The process of creating a specific data model for a problem domain. Starts with simple problem and understanding Increases detail as understanding increases When complete Data Model is a blueprint for: Instructions to build a database Meets all end-user requirements Will clearly be defined in text and diagrams Should meet at least these 3 criteria Description of the data structures Enforcable data integrity rules Method for manipulating and transforming data. Data Model: Represents data structures and their characteristics relations, constraints, transformations, and other constructs with the purpose of supporting a specific problem domain.","title":"Data Modeling Foundation"},{"location":"CIS-50/Chapter_2.html#building-blocks","text":"Entities: Nouns Attributes: Characteristic of Entity Relationships: How Entities are associated (usually linking verbs) 1:M, 1..*: One to many M:N or .. : Many to many 1:1 or 1..1: One to one Constraints: Data restrictions Ensure data integrity Expressed as rules:","title":"Building Blocks:"},{"location":"CIS-50/Chapter_2.html#business-rules--database-design","text":"Business Rules are policies, procedures, and principles of organizations. They are also the first step in identifying and creating the aforementioned building blocks Rules for Business Rules: Should be easy to understand Should be widely disseminated","title":"Business Rules &amp; Database Design"},{"location":"CIS-50/Chapter_2.html#business-rule-discovery","text":"Direct Interviews with End-Users (managers, policy makers) Verify end-user perceptions, however Verify end-user perceptions, however Documentation Note Document identified business rules to: * Standardize the company\u2019s view of data * Facilitate communication between users and designers * Abets understanding scope of data * Clarifies business process and perceptions * Allows developing and re-visting correct relationships and constraints.","title":"Business Rule Discovery"},{"location":"CIS-50/Chapter_2.html#translating-business-rules-into-a-data-model","text":"Nouns often translate into an Entities. Verbs often translate into relationships between entities. From business rule, determine cardinality by assuming bi-directional relationships and asking: How many instances of entity B are related to entity A How many instances of entity A are related to entity B Attributes can also be nouns or adverbs, but generally are characteristics of the entities. Naming conventions should be followed: CUS_CREDIT_LIMIT: e.g. field/attribute name: All upper case, proceeded by Entity Abbrev, underscores for spaces.","title":"Translating Business Rules into a Data Model"},{"location":"CIS-50/Chapter_2.html#evolution-of-major-models","text":"Hierarchical model: Appendix K Upside-down tree Parent can have many children, but children only have a single parent. Composed of segments, which are like file-system records Network model: Appendix L DB is a collection of records with 1:M relationships, but children can have many parents. Defined: Schema (Org of DB as seen by DBA, tables, indexes, views, and queries), SubSchema (Org of DB as seen by Applications), DML (Defines how to manipulate DB i.e. SQL), DDL (Allows DBA to define Schema Structure) Limited Ad-Hoc queryability Heavy demand on application developers Structural changes lead to application massive changes (dats dependence) Relational model (Solves general Data Problems): Based on mathematical relation concept (But think of it as a TABLE of ROWS and COLUMNS) COLUMNS are attributes, and ROWS are called tuples TABLES: complete data and structural independence because it is a logical structure. How a table is stored is of no concern to a user or designer. RDBMS sophisticated mathematical data manipulation constructs, but they are hidden from the end-user!!! Queries are intuitive and logical (SQL, specifies what must be done without expressing HOW). Tables are releated via a common attribute Easy to diagrame with Relational Diagrams 3 Simple Parts User Interface: DBBeaver, Sql Studio, etc. Helps generate SQL Collection of Tables: Pesents data in an easy to unserstand fashion. SQL Engine: Translate SQL user requests into complex mathematical data manipulations. Due to robust mathematical foundation RDBMs can easily be extended with new capabilities like XML and Objects. Entity relationship model: Graphical way of representing the relational model with ERDs Entities: Rectangles Name: Noun in center of rectangle. Attributes: Circles branched from entities in ERD Characteristics of Entity Relationships: Diamond, Crows Foot, or UML/Class notation. OO Model (Solves specific needs): Appendix G Popular in CAD, GIS markets, which require complex objects. Data and relationships contained in single structure known as an object. Contains all operations that can be performed on an object. Components: Object: Single instance of a real world entity Attributes: Properties of an object Class: Collection of similar objects with shared structure. Methods: Behaviors you can run on objects. Class Hierarchy: upside-down tree with single parent relationship Inheritance: Can inherit attributes and methods of parent. Depicted with UML Object/Relational and XML ERDM adds OO features into simpler RDM structure. Encapsulated data and methods Extensible Data Types based on Classes XML Databases emerged to manage unstructured data like e-mail, web-pages, diagrams, etc.","title":"Evolution of Major Models"},{"location":"CIS-50/Chapter_2.html#emerging-data-models","text":"Exponential data growth Getting actionable BI data from Petabytes of collected data has become paramount. Browsing patterns, purchasing histories, customer preference, customer behaviors, social connections. Mobile data, GPS, RFID, sensors, IoT, sound, pictures, etc. Big Data: Find better ways to manage large data, get valuable business insights, but reduce costs. 3Vs: Volume: Petabytes of data Velocity: Exponential growth, and need to mine it quickly (Response time is expected to be nearly instant). Variety: Many different data formats not suitable to traditional RDBMS.","title":"Emerging Data Models"},{"location":"CIS-50/Chapter_2.html#bigdata-technologies","text":"hadoop: java based, distributed, with thousands of nodes. Componenets are HDFS and MapReduce HDFS: Write once, read-many model Name Node: Stores all FS metadata Data Node: Stores fixed data-blocks that gets replicated Client Node: User interface to HDFS MapReduce: API that works with structured and unstructured data Uses many nodes to perform 2 functions Map and Reduce Map divides a job, Reduce reduces it into a filtered result set. NoSQL: Large distributed DB System that stores structured and unstructured data. They are not based on RDBMS Model They are highly distributed They are highly scalable, fault tolerant, and available Support data with large number of attributes but sparse entity types Built for performance and not data consistency Examples: Key/Value stores: Memcached, Redis Document DBs: Mongo, ElasticSearch Graph DBs: Neo4J","title":"BigData Technologies"},{"location":"CIS-50/Chapter_2.html#classification-of-data-models","text":"Classified by ANSI/SPARC defined Levels of Abstraction (External, Conceptual, Internal, Physical) External: Subset of the Data Model necessary for the application developer or report writers. Conceptual: The global (Bird\u2019s Eye) view of the data model. A Macro picture of the organization\u2019s data. Internal: Map of conceptual model to a specific DBMS Entities of Conceptual model are mapped to Tables Attributes to columns, data-types, constraints, etc. Physical: The actual hardware (SSDs, SAN, etc.) the data is stored on.","title":"Classification of Data Models"},{"location":"CIS-50/Chapter_3.html","text":"The Relational Database Model \u00b6 3 Well defined components A logical data structure represented by relations A set of integrity rules to enforce that the data is consistent and remains consistent over time A set of operations that defines how data is manipulated RDM Logical Structure \u00b6 DBMS sits between application and Database and abstracts data and metadata. RDM allows designer to ignore physical data layer by focusing on logical layer. Table/Relation concept leads to structural and data independence. Basic Components & Table Structure \u00b6 Term RDM Term Interpretation Table Relation sometimes mistakenly called a file Row Tuple sometimes mistakenly called a record Columns Attributes sometimes mistakenly called a field Keys Unique Group of Attributes Determiniation: Knowing A -> Knowing B Keys are Full Functional Dependencies , Knowing the Key attribute(s) -> determins the values of other attributes. Full indicates ALL Key Attributes are necessary to determine determinants. e.g. Determinant (Key) determins -> Determinant (Other attributes) STU_NUM -> (STU_LNAME, STU_FNAME, STU_GPA) Composite Keys: keys with more than one key attribute Super Key: Uniquly determins (one and onkly one Row) all other attributes in table (Full Functional Dependency) Candidate Key: Superkey without unnecessary attributes. Primary Key: A candidate key chosen by the designer Ensures Entity Integrity (Rows unique) by ensuring: PK is unique PK can\u2019t be NULL NULL: Absence of value Many NULLS indicates bad design Some can\u2019t be avoided (e.g. middle name) Can cause issues with COUNT, SUM, etc. Can cause issues with JOINs Foreign Key: PK of one table placed in another to create a relationship. Ensures Referential Integrity (Every FK must be NULL or have a valid PK in related table). Secondary Key: Key use to narrow/speed up query results Not guranteed to be unique Some designers use flags instead of NULLS to alert user/application of certain conditions. Relational Operators & Manipulation \u00b6 Relational Algebra: Theoretical ways of manipulating relations with relational operators. Later we\u2019ll learn to use SQL to accomplish relational algebra operations. Minimally Relational: SELECT, PROJECT, JOIN When speaking in terms of Relational Algebra : RelVar (R) == Table: Structure that holds the data, which has 2 parts Heading: Names of attributes Body: Holds the relation Relation (r) == The actual data Set Operators \u00b6 Note Because Set Operators have closure property (i.e. Set Operators on relations ALWAYS produce new relations), you can combine them like so! \u03c0 cus_fname,cus_lname (\u03c3 cus_code=10010 (customer)) SELECT (or RESTRICT): Single table as input (unary), and retrives ALL or horizontal subsection of relation (i.e. rows). \u03c3 cus_code=10010 (customer) PROJECT: Single table as input (unary), and retrieves ALL vertical subsection of relation (i.e. columns) \u03c0 cus_fname,cus_lname (customer) UNION: Combines rows of TWO relations (minus duplicates) with same attributes and domains (i.e. 2 tables with same number of columns and column types in the same order). \u03c0 supplier_name (supplier) \u22c3 \u03c0 vendor_name (vendor) INTERSECT: Yields only rows in common between TWO relations with same attributes and domains \u03c0 supplier_name (supplier) \u22c2 \u03c0 vendor_name (vendor) DIFFERENCE: Yields only rows found in relation 1 that aren\u2019t in relation 2 \u03c0 supplier_name (supplier) \u2013 \u03c0 vendor_name (vendor) PRODUCT: All possible combinations for rows from TWO tabnles. customer \u00d7 agent JOIN: Natural Join: customer \u22c8 agent \u03c0 cus_code,cus_lname,cus_fname,cus_initial,cus_renew_date,agent_code,agent_areacode,agent_phone,agent_lname,agent_ytd_sls (\u03c3 customer.agent_code=agent.agent_code (customer \u00d7 agent)) Left Outer Join: Yields all of the rows in the relation 1, including those that do not have matching values in relation 2 {(a1,\u2026,an)} be the singleton relation on the attributes that are unique to the relation agent customer \u22c8 agent \u22c3 ((customer \u2013 \u03c0 c1,c2,c3,\u2026,cn (customer \u22c8 agent)) \u00d7 {(a1,\u2026,an)}) Right Outer Join: Yields all of the rows in the relation 2, including those that do not have matching values in relation 1 Outer joins are the application of JOIN, DIFFERENCE, UNION, and PRODUCT DIVIDE: Relation 1 is divided by Relation 2 on a common attribute to yield all data in Relation 1 that matches all data in Relation 2. To be included in the result, unshared columns/attributes must have all the common attributes from table 2 associated in its rows. r \u00f7 s Data Dictionary & System Catalog \u00b6 Both are metadata (data about data) Data Dictionary - Designer View \u00b6 Description of all tables in DB, and at a minimum contains: Attributes Relationship types Entities Referential integrity checks and enforcement Index types and components System Catalog - System View \u00b6 Is a detailed, system data dictionary. Data about all objects in the DB, like: Table names Table\u2019s creator and creation date Number of columns in each table Data type corresponding to each column Index filenames Index creators Authorized users Access privileges System created Database, that can be queried using SQL Identifying Entities & Relationships \u00b6 1:M Is normal Easily implemented by putting the primary key of the 1 side in the table of the many side as a foreign key. 1:1 Is rare Typically done by putting the primary key of one of the 1 sides in the other table. If the tables already have a 1:M relationship, the 1:1 relationship should be enforced by moving the primary key of the M side into the table with the 1 side. You can also link on other candidate keys as long as they are non-null and unique as defined. M:N Turns into multiple 1:M\u2019s by introducing a linking table (i.e. composite, bridge, associative entity) Create a linking table with the primary key of the M side and the primary key of the N side becoming the primary key of the linking table . Introduce any other attributes to the linking table you think should be associated with the relationship. Handling Data Redundancy in RDM \u00b6 Note The real test of redundancy is not how many copies of a given attribute are stored, but whether the elimination of an attribute will eliminate information. Therefore, if you delete an attribute and the original information can still be generated through relational algebra, the inclusion of that attribute would be redundant. Given that view of redundancy, proper foreign keys are clearly not redundant in spite of their multiple occurrences in a table. However, even when you use this less restrictive view of redundancy, keep in mind that controlled redundancies are often designed as part of the system to ensure transaction speed and/or information requirements. One such purposeful redundancy is product line price on an Invoice Line Item VS the product\u2019s current price in a product table. Another is the automatic generation of an invoice Line Number , which is redundant but allows for ordering line-items the same way everytime the invoice data is re-constructed. Purpose of Indexing \u00b6 Index: An ordered arrangement of keys and pointers. Each key points to the location of the data identified by the key. Used to locate a needed item quickly via pointers. Can also be used to QUICKLY retrieve data ordered by a specific attribute or attributes (think Customers ordered by name, or Products ordered by Manufacturer). Primary Key is a special index called a Unique Index that can only have a single pointer. Indexes with multiple attributes, i.e. (PROD_CODE, MANUFACTUER_CODE), are called composite indexes . Am I an RDMS? \u00b6 Rule Rule Name Description 1 Information All information in a relational database must be logically represented as column values in rows within tables. 2 Guaranteed access Every value in a table is guaranteed to be accessible through a combination of table name, primary key value, and column name. 3 Systematic treatment of nulls Nulls must be represented and treated in a systematic way, independent of data type. 4 Dynamic online catalog based on the relational model The metadata must be stored and managed as ordinary data\u2014that is, in tables within the database; such data must be available to authorized users using the standard database relational language. 5 Comprehensive data sublanguage The relational database may support many languages; however, it must support one well-defined, declarative language as well as data definition, view definition, data manipulation (interactive and by program), integrity constraints, authorization, and transaction management (begin, commit, and rollback). 6 View updating Any view that is theoretically updatable must be updatable through the system. 7 High-level insert, update, and delete The database must support set-level inserts, updates, and deletes. 8 Physical data independence Application programs and ad hoc facilities are logically unaffected when physical access methods or storage structures are changed. 9 logical data independence Application programs and ad hoc facilities are logically unaffected when changes are made to the table structures that preserve the original table values (changing order of columns or inserting columns). 10 Integrity independence All relational integrity constraints must be definable in the relational language and stored in the system catalog, not at the application level. 11 Distribution independence The end users and application programs are unaware of and unaffected by the data location (distributed vs. local databases). 12 Nonsubversion If the system supports low-level access to the data, users must not be allowed to bypass the integrity rules of the database. 13 Rule zero All preceding rules are based on the notion that to be considered relational, a database must use its relational facilities exclusively for management.","title":"The Relational Database Model"},{"location":"CIS-50/Chapter_3.html#the-relational-database-model","text":"3 Well defined components A logical data structure represented by relations A set of integrity rules to enforce that the data is consistent and remains consistent over time A set of operations that defines how data is manipulated","title":"The Relational Database Model"},{"location":"CIS-50/Chapter_3.html#rdm-logical-structure","text":"DBMS sits between application and Database and abstracts data and metadata. RDM allows designer to ignore physical data layer by focusing on logical layer. Table/Relation concept leads to structural and data independence.","title":"RDM Logical Structure"},{"location":"CIS-50/Chapter_3.html#basic-components--table-structure","text":"Term RDM Term Interpretation Table Relation sometimes mistakenly called a file Row Tuple sometimes mistakenly called a record Columns Attributes sometimes mistakenly called a field Keys Unique Group of Attributes Determiniation: Knowing A -> Knowing B Keys are Full Functional Dependencies , Knowing the Key attribute(s) -> determins the values of other attributes. Full indicates ALL Key Attributes are necessary to determine determinants. e.g. Determinant (Key) determins -> Determinant (Other attributes) STU_NUM -> (STU_LNAME, STU_FNAME, STU_GPA) Composite Keys: keys with more than one key attribute Super Key: Uniquly determins (one and onkly one Row) all other attributes in table (Full Functional Dependency) Candidate Key: Superkey without unnecessary attributes. Primary Key: A candidate key chosen by the designer Ensures Entity Integrity (Rows unique) by ensuring: PK is unique PK can\u2019t be NULL NULL: Absence of value Many NULLS indicates bad design Some can\u2019t be avoided (e.g. middle name) Can cause issues with COUNT, SUM, etc. Can cause issues with JOINs Foreign Key: PK of one table placed in another to create a relationship. Ensures Referential Integrity (Every FK must be NULL or have a valid PK in related table). Secondary Key: Key use to narrow/speed up query results Not guranteed to be unique Some designers use flags instead of NULLS to alert user/application of certain conditions.","title":"Basic Components &amp; Table Structure"},{"location":"CIS-50/Chapter_3.html#relational-operators--manipulation","text":"Relational Algebra: Theoretical ways of manipulating relations with relational operators. Later we\u2019ll learn to use SQL to accomplish relational algebra operations. Minimally Relational: SELECT, PROJECT, JOIN When speaking in terms of Relational Algebra : RelVar (R) == Table: Structure that holds the data, which has 2 parts Heading: Names of attributes Body: Holds the relation Relation (r) == The actual data","title":"Relational Operators &amp; Manipulation"},{"location":"CIS-50/Chapter_3.html#set-operators","text":"Note Because Set Operators have closure property (i.e. Set Operators on relations ALWAYS produce new relations), you can combine them like so! \u03c0 cus_fname,cus_lname (\u03c3 cus_code=10010 (customer)) SELECT (or RESTRICT): Single table as input (unary), and retrives ALL or horizontal subsection of relation (i.e. rows). \u03c3 cus_code=10010 (customer) PROJECT: Single table as input (unary), and retrieves ALL vertical subsection of relation (i.e. columns) \u03c0 cus_fname,cus_lname (customer) UNION: Combines rows of TWO relations (minus duplicates) with same attributes and domains (i.e. 2 tables with same number of columns and column types in the same order). \u03c0 supplier_name (supplier) \u22c3 \u03c0 vendor_name (vendor) INTERSECT: Yields only rows in common between TWO relations with same attributes and domains \u03c0 supplier_name (supplier) \u22c2 \u03c0 vendor_name (vendor) DIFFERENCE: Yields only rows found in relation 1 that aren\u2019t in relation 2 \u03c0 supplier_name (supplier) \u2013 \u03c0 vendor_name (vendor) PRODUCT: All possible combinations for rows from TWO tabnles. customer \u00d7 agent JOIN: Natural Join: customer \u22c8 agent \u03c0 cus_code,cus_lname,cus_fname,cus_initial,cus_renew_date,agent_code,agent_areacode,agent_phone,agent_lname,agent_ytd_sls (\u03c3 customer.agent_code=agent.agent_code (customer \u00d7 agent)) Left Outer Join: Yields all of the rows in the relation 1, including those that do not have matching values in relation 2 {(a1,\u2026,an)} be the singleton relation on the attributes that are unique to the relation agent customer \u22c8 agent \u22c3 ((customer \u2013 \u03c0 c1,c2,c3,\u2026,cn (customer \u22c8 agent)) \u00d7 {(a1,\u2026,an)}) Right Outer Join: Yields all of the rows in the relation 2, including those that do not have matching values in relation 1 Outer joins are the application of JOIN, DIFFERENCE, UNION, and PRODUCT DIVIDE: Relation 1 is divided by Relation 2 on a common attribute to yield all data in Relation 1 that matches all data in Relation 2. To be included in the result, unshared columns/attributes must have all the common attributes from table 2 associated in its rows. r \u00f7 s","title":"Set Operators"},{"location":"CIS-50/Chapter_3.html#data-dictionary--system-catalog","text":"Both are metadata (data about data)","title":"Data Dictionary &amp; System Catalog"},{"location":"CIS-50/Chapter_3.html#data-dictionary---designer-view","text":"Description of all tables in DB, and at a minimum contains: Attributes Relationship types Entities Referential integrity checks and enforcement Index types and components","title":"Data Dictionary - Designer View"},{"location":"CIS-50/Chapter_3.html#system-catalog---system-view","text":"Is a detailed, system data dictionary. Data about all objects in the DB, like: Table names Table\u2019s creator and creation date Number of columns in each table Data type corresponding to each column Index filenames Index creators Authorized users Access privileges System created Database, that can be queried using SQL","title":"System Catalog - System View"},{"location":"CIS-50/Chapter_3.html#identifying-entities--relationships","text":"1:M Is normal Easily implemented by putting the primary key of the 1 side in the table of the many side as a foreign key. 1:1 Is rare Typically done by putting the primary key of one of the 1 sides in the other table. If the tables already have a 1:M relationship, the 1:1 relationship should be enforced by moving the primary key of the M side into the table with the 1 side. You can also link on other candidate keys as long as they are non-null and unique as defined. M:N Turns into multiple 1:M\u2019s by introducing a linking table (i.e. composite, bridge, associative entity) Create a linking table with the primary key of the M side and the primary key of the N side becoming the primary key of the linking table . Introduce any other attributes to the linking table you think should be associated with the relationship.","title":"Identifying Entities &amp; Relationships"},{"location":"CIS-50/Chapter_3.html#handling-data-redundancy-in-rdm","text":"Note The real test of redundancy is not how many copies of a given attribute are stored, but whether the elimination of an attribute will eliminate information. Therefore, if you delete an attribute and the original information can still be generated through relational algebra, the inclusion of that attribute would be redundant. Given that view of redundancy, proper foreign keys are clearly not redundant in spite of their multiple occurrences in a table. However, even when you use this less restrictive view of redundancy, keep in mind that controlled redundancies are often designed as part of the system to ensure transaction speed and/or information requirements. One such purposeful redundancy is product line price on an Invoice Line Item VS the product\u2019s current price in a product table. Another is the automatic generation of an invoice Line Number , which is redundant but allows for ordering line-items the same way everytime the invoice data is re-constructed.","title":"Handling Data Redundancy in RDM"},{"location":"CIS-50/Chapter_3.html#purpose-of-indexing","text":"Index: An ordered arrangement of keys and pointers. Each key points to the location of the data identified by the key. Used to locate a needed item quickly via pointers. Can also be used to QUICKLY retrieve data ordered by a specific attribute or attributes (think Customers ordered by name, or Products ordered by Manufacturer). Primary Key is a special index called a Unique Index that can only have a single pointer. Indexes with multiple attributes, i.e. (PROD_CODE, MANUFACTUER_CODE), are called composite indexes .","title":"Purpose of Indexing"},{"location":"CIS-50/Chapter_3.html#am-i-an-rdms","text":"Rule Rule Name Description 1 Information All information in a relational database must be logically represented as column values in rows within tables. 2 Guaranteed access Every value in a table is guaranteed to be accessible through a combination of table name, primary key value, and column name. 3 Systematic treatment of nulls Nulls must be represented and treated in a systematic way, independent of data type. 4 Dynamic online catalog based on the relational model The metadata must be stored and managed as ordinary data\u2014that is, in tables within the database; such data must be available to authorized users using the standard database relational language. 5 Comprehensive data sublanguage The relational database may support many languages; however, it must support one well-defined, declarative language as well as data definition, view definition, data manipulation (interactive and by program), integrity constraints, authorization, and transaction management (begin, commit, and rollback). 6 View updating Any view that is theoretically updatable must be updatable through the system. 7 High-level insert, update, and delete The database must support set-level inserts, updates, and deletes. 8 Physical data independence Application programs and ad hoc facilities are logically unaffected when physical access methods or storage structures are changed. 9 logical data independence Application programs and ad hoc facilities are logically unaffected when changes are made to the table structures that preserve the original table values (changing order of columns or inserting columns). 10 Integrity independence All relational integrity constraints must be definable in the relational language and stored in the system catalog, not at the application level. 11 Distribution independence The end users and application programs are unaware of and unaffected by the data location (distributed vs. local databases). 12 Nonsubversion If the system supports low-level access to the data, users must not be allowed to bypass the integrity rules of the database. 13 Rule zero All preceding rules are based on the notion that to be considered relational, a database must use its relational facilities exclusively for management.","title":"Am I an RDMS?"},{"location":"CIS-50/Chapter_4.html","text":"Entity Relationship Modeling \u00b6 Note ERM is a Conceptual Model and is therefore independent of Database type and can be used to model an organization\u2019s data requirments. ER Models are used in logical design, but for the purposes of this class, the conceptural model will be directly related to ER Components. Identify ER Components \u00b6 ERM forms basis of ERD (Conceptual End-User View) ERD comprises of: entities, attributes, and relationships and can take 3 forms: Chen notation: Favors conceptual modeling. Chen Notation Crow\u2019s Foot notation: Favors implementation modeling. UML notation: Can be used for both conceptual or implementation modeling. ERM Parts \u00b6 Entities: Entity referes to Entity set and not individual occurances (i.e. in ERM think table not row) \u00b6 In all 3 notations it is a rectangle usually with an UPPERCASE noun NAME Attributes: Characteristics of Entities \u00b6 Chen\u2019s notation: Ovals with UPPERCASE attribute name, connected via a line to entity rectangle UML and Crow\u2019s Foot: In a separate box below the entity rectangle. Required Attributes : Values are required Name/Label are usually BOLD Optional Attributes : can be left empty. Name/Label are normal Domain Attributes : restricted range of values (GPA, gender, address, etc.) Identifier Attributes : These are synonymous with Primary keys Underlined in most notations. Composite Identifier : More than 1 attribute makes up the Primary Key Usually just multiple underlined attributes. Composite Attributes : An attribute that can be sub-divided (e.g. Address) Chen notation is attribute bubbles stemmed from main attribute bubble. UML and Crow\u2019s Foot usually decompose these into individual simple attributes , but how that is done is left to the designer. Single Valued Attribute : Attributes with just a single value (Part No., SSN, etc.) Could still be a Composite Attribute Multivalued Attribute : Attributes that can have multiple values (Car: Top, Body, Trim Color, etc.) Implementing in ERD: Method 1: Ceate new attributes for each value type (i.e. CAR_TOPCOLOR, CAR_BODYCOLOR, CAR_TRIMCOLOR), but this is only OK if : Every instance will have the same number of values for the multivalued attribute No instance will ever have more values Method 2: Create a new Entity with a 1:M relationship back to the Entity the Multivalued attribute was attached to. Derived Attributes : Attributes derived from other attributes (e.g. Age from DoB). Chen Notation: Dashed line UML/Crow\u2019s Foot Notation: None Storing these in the DB depend on Application constraints and computational complexity. Most modern RDBMs\u2019 include features to support calculated attributes. Define, Refine, and Incorporate Relationships Between Entities \u00b6 Active or Passiver VERB association between 2 or more entities (AKA participants). Connectivity & Cardinality \u00b6 Relationships are always bi-directional connectivity , so when deciding on relationship classification ask yourself how the entities are connected going in both directions (e.g. Person -> Dept and Dept -> Person). Relationship connectivity can have minimum and maximum limits dubbed cardinality Cardinality is usually indicated in parenthesis like: (min, max), and are established by business rules. Cardinality is enforced either at the application level or by databadse triggers Existence and Independence \u00b6 An entity that can\u2019t exist without a dependent entity is existence-dependent entity (e.g. Dependent and Employee) An entity that can exist on its own, even though relationships exist are existence independent entities (e.g. Parts and Vendor, since a part might not have a Vendor). Relationship Strength \u00b6 Weak/Strong relationships are new to ERM and therefore not part of the conceptual Chen notation. A Weak or Non-Identifying relationship is one where the primary key of the related entity does NOT contain the primary key from the other related entity. The typical 1:M relationship where the primary key from the 1 side becomes a foreign key on the M side is a weak relationship . A Dashed connecting line in a Crow\u2019s Foot diagram indicates a weak relationship. A Strong or Identifying relationship is one where the primary key of the related entity IS in the primary key of the other related entity. A Solid connecting line in a Crow\u2019s Foot diagram indicates a strong relationship. The DB Designer must consider transactions, efficiency, and information requirements to decide the type of strength relationship to use. Entity Strength \u00b6 Strong/Regular Entity simple need to satisfy existence independence A Weak Entity must be existence-dependent and have a Strong relationship Relationship Participation \u00b6 Optional Participation : A row on the :M optional side of the relationship doesn\u2019t have to exist. Designated with an O indicating optional participation in a Crow\u2019s Foot diagram. Cardinality minimum has to be 0 Mandatory Participation : A row on the :M side MUST exist. Cardinality minimum has to be at least 1 Note The relationship strength depends on how the PK of the related entity is formulated, while the relationship participation depends on how the business rule is written. Below is a great connectivity example showing how Class is optional to Professors (i.e. professors may do research only), while every Class has to have 1 and only 1 Professor. Relationship Degree \u00b6 Recursive Relationships \u00b6 Method 1: Unary, add an attribute column that matches PK of table (e.g. Employee has a Manager). This is a 1:1 relationship where each entry will only have a single manager. Method 2: Binary, add a table with a 1:M relactionship where the :M side gets the PK from the 1: side. This allows for 1:M recursive relationships (e.g. PARTS composed of PARTS) Developing an ER Diagram \u00b6 Iterative Process \u00b6 Create a detailed narrative of the organization\u2019s description of operations. Identify the business rules based on the description of operations. Identify the main entities and relationships from the business rules. Develop the initial ERD. Identify the attributes and primary keys that adequately describe the entities. Revise and review the ERD. DB Design Tradeoffs, Reconciling Conflicting Goals \u00b6 The 3 things always to consider \u00b6 Design standards: Normalization, reduce nulls Processing speed: performance, security, shared access, and data integrity Information requirements","title":"Entity Relationship Modeling"},{"location":"CIS-50/Chapter_4.html#entity-relationship-modeling","text":"Note ERM is a Conceptual Model and is therefore independent of Database type and can be used to model an organization\u2019s data requirments. ER Models are used in logical design, but for the purposes of this class, the conceptural model will be directly related to ER Components.","title":"Entity Relationship Modeling"},{"location":"CIS-50/Chapter_4.html#identify-er-components","text":"ERM forms basis of ERD (Conceptual End-User View) ERD comprises of: entities, attributes, and relationships and can take 3 forms: Chen notation: Favors conceptual modeling. Chen Notation Crow\u2019s Foot notation: Favors implementation modeling. UML notation: Can be used for both conceptual or implementation modeling.","title":"Identify ER Components"},{"location":"CIS-50/Chapter_4.html#erm-parts","text":"","title":"ERM Parts"},{"location":"CIS-50/Chapter_4.html#entities-entity-referes-to-entity-set-and-not-individual-occurances-ie-in-erm-think-table-not-row","text":"In all 3 notations it is a rectangle usually with an UPPERCASE noun NAME","title":"Entities: Entity referes to Entity set and not individual occurances (i.e. in ERM think table not row)"},{"location":"CIS-50/Chapter_4.html#attributes-characteristics-of-entities","text":"Chen\u2019s notation: Ovals with UPPERCASE attribute name, connected via a line to entity rectangle UML and Crow\u2019s Foot: In a separate box below the entity rectangle. Required Attributes : Values are required Name/Label are usually BOLD Optional Attributes : can be left empty. Name/Label are normal Domain Attributes : restricted range of values (GPA, gender, address, etc.) Identifier Attributes : These are synonymous with Primary keys Underlined in most notations. Composite Identifier : More than 1 attribute makes up the Primary Key Usually just multiple underlined attributes. Composite Attributes : An attribute that can be sub-divided (e.g. Address) Chen notation is attribute bubbles stemmed from main attribute bubble. UML and Crow\u2019s Foot usually decompose these into individual simple attributes , but how that is done is left to the designer. Single Valued Attribute : Attributes with just a single value (Part No., SSN, etc.) Could still be a Composite Attribute Multivalued Attribute : Attributes that can have multiple values (Car: Top, Body, Trim Color, etc.) Implementing in ERD: Method 1: Ceate new attributes for each value type (i.e. CAR_TOPCOLOR, CAR_BODYCOLOR, CAR_TRIMCOLOR), but this is only OK if : Every instance will have the same number of values for the multivalued attribute No instance will ever have more values Method 2: Create a new Entity with a 1:M relationship back to the Entity the Multivalued attribute was attached to. Derived Attributes : Attributes derived from other attributes (e.g. Age from DoB). Chen Notation: Dashed line UML/Crow\u2019s Foot Notation: None Storing these in the DB depend on Application constraints and computational complexity. Most modern RDBMs\u2019 include features to support calculated attributes.","title":"Attributes: Characteristics of Entities"},{"location":"CIS-50/Chapter_4.html#define-refine-and-incorporate-relationships-between-entities","text":"Active or Passiver VERB association between 2 or more entities (AKA participants).","title":"Define, Refine, and Incorporate Relationships Between Entities"},{"location":"CIS-50/Chapter_4.html#connectivity--cardinality","text":"Relationships are always bi-directional connectivity , so when deciding on relationship classification ask yourself how the entities are connected going in both directions (e.g. Person -> Dept and Dept -> Person). Relationship connectivity can have minimum and maximum limits dubbed cardinality Cardinality is usually indicated in parenthesis like: (min, max), and are established by business rules. Cardinality is enforced either at the application level or by databadse triggers","title":"Connectivity &amp; Cardinality"},{"location":"CIS-50/Chapter_4.html#existence-and-independence","text":"An entity that can\u2019t exist without a dependent entity is existence-dependent entity (e.g. Dependent and Employee) An entity that can exist on its own, even though relationships exist are existence independent entities (e.g. Parts and Vendor, since a part might not have a Vendor).","title":"Existence and Independence"},{"location":"CIS-50/Chapter_4.html#relationship-strength","text":"Weak/Strong relationships are new to ERM and therefore not part of the conceptual Chen notation. A Weak or Non-Identifying relationship is one where the primary key of the related entity does NOT contain the primary key from the other related entity. The typical 1:M relationship where the primary key from the 1 side becomes a foreign key on the M side is a weak relationship . A Dashed connecting line in a Crow\u2019s Foot diagram indicates a weak relationship. A Strong or Identifying relationship is one where the primary key of the related entity IS in the primary key of the other related entity. A Solid connecting line in a Crow\u2019s Foot diagram indicates a strong relationship. The DB Designer must consider transactions, efficiency, and information requirements to decide the type of strength relationship to use.","title":"Relationship Strength"},{"location":"CIS-50/Chapter_4.html#entity-strength","text":"Strong/Regular Entity simple need to satisfy existence independence A Weak Entity must be existence-dependent and have a Strong relationship","title":"Entity Strength"},{"location":"CIS-50/Chapter_4.html#relationship-participation","text":"Optional Participation : A row on the :M optional side of the relationship doesn\u2019t have to exist. Designated with an O indicating optional participation in a Crow\u2019s Foot diagram. Cardinality minimum has to be 0 Mandatory Participation : A row on the :M side MUST exist. Cardinality minimum has to be at least 1 Note The relationship strength depends on how the PK of the related entity is formulated, while the relationship participation depends on how the business rule is written. Below is a great connectivity example showing how Class is optional to Professors (i.e. professors may do research only), while every Class has to have 1 and only 1 Professor.","title":"Relationship Participation"},{"location":"CIS-50/Chapter_4.html#relationship-degree","text":"","title":"Relationship Degree"},{"location":"CIS-50/Chapter_4.html#recursive-relationships","text":"Method 1: Unary, add an attribute column that matches PK of table (e.g. Employee has a Manager). This is a 1:1 relationship where each entry will only have a single manager. Method 2: Binary, add a table with a 1:M relactionship where the :M side gets the PK from the 1: side. This allows for 1:M recursive relationships (e.g. PARTS composed of PARTS)","title":"Recursive Relationships"},{"location":"CIS-50/Chapter_4.html#developing-an-er-diagram","text":"","title":"Developing an ER Diagram"},{"location":"CIS-50/Chapter_4.html#iterative-process","text":"Create a detailed narrative of the organization\u2019s description of operations. Identify the business rules based on the description of operations. Identify the main entities and relationships from the business rules. Develop the initial ERD. Identify the attributes and primary keys that adequately describe the entities. Revise and review the ERD.","title":"Iterative Process"},{"location":"CIS-50/Chapter_4.html#db-design-tradeoffs-reconciling-conflicting-goals","text":"","title":"DB Design Tradeoffs, Reconciling Conflicting Goals"},{"location":"CIS-50/Chapter_4.html#the-3-things-always-to-consider","text":"Design standards: Normalization, reduce nulls Processing speed: performance, security, shared access, and data integrity Information requirements","title":"The 3 things always to consider"},{"location":"CIS-50/Chapter_6.html","text":"Normalization \u00b6 Normalization Good table structures Controls data redundancies Avoids data anomalies What is Database Normalization \u00b6 Definition \u00b6 Normalization: Finding and fixing table structure errors, which eliminates redundancy and reduces data anomalies. With normalization key attributes are called prime attributes and nonkey attributes are called non-prime attributes Normalization Goals \u00b6 Each Table/Relation represents a single subject. Each attribute (row/column intersection) contains only a single value (not a group of values). Controlled and minimum data redundancy, a value is not unnecessairily duplicated in other tables. All non-prime / nonkey attributes are dependent on the primary key (ensures data is unique to PK). There is no Table/Relation where a Insert, Update, or Delete can cause a data anomaly (ensures data integrity) Basic Process \u00b6 Assign table attributes based on determination and functional dependency discussed in Chapter 3 to build ERD. Identifying business rules Identifying and defining business and data constraints Defining functional dependencies Identifying entities and relationships Eliminating multivalued attributes Normalization is then applied to analyze ERD and determine if structure can be improved. The process is applied in steps from 1NF to 3NF, which is usually good enough. 1NF Steps 2NF Steps 3NF Steps Additional Steps There are legitimate reasons to violate 3NF and higher forms, however. So 3NF is not always optimal. 3NF engenders the need for more tables, therefore more joins and more Compute/Memory resources. Performance / Anomaly-Redundancy trade off is often a concern. Designers denormalize and compromise anomalies for performance. Most of the time designers are asked to use normalization process to anaylze and rectify existing files, spreadsheets and data structures. Normal Forms, Low to High Transforms \u00b6 Partial Dependency: (A, B) (C, D), B C, and (A, B) is the PK then B C is a partial dependency since its only partially dependent on the PK. Transitive Dependency: X Y, Y Z, and X is the PK then X Z is a transitive dependency because X has a path directly to Z. Transitive dependencies occur only when a functional dependence exists among nonprime attributes (i.e. Y -> Z because Y is non-prime). Unnormalized/Raw data \u00b6 Will often contain redundant data, multivalued data, and other data anomalies like data integrity and data inconsistency 1NF \u00b6 All of the key attributes are defined. There are no repeating groups in the table. In other words, each row/column intersec- tion contains one and only one value, not a set of values. All attributes are dependent on the primary key. 1NF Steps: \u00b6 Split grouped attributes into there own rows (i.e. for a row with grouped column of EmpIDs 1,2,3,\u2026 the row would be duplicated for each ID in the column EmpIDs. A Primary Key should be identified (i.e. for raw data it must be a set of attributes that combined identifies each row uniquely). Identify ALL dependencies using a dependency diagram like below: Dependency PK is Bold, Underline, and Colored Top arrows are dependencies based off PK Bottom arrows indicate Partial and Transitive dependencies 2NF \u00b6 If 1NF has non-Composite PK , Table/Relation is already in 2NF It is in 1NF. It includes no partial dependencies; no attribute is dependent on only a portion of PK. Transitive dependencies may still exist. 2NF Steps: \u00b6 Eliminate Partial Dependencies Create new Tables/Relations from each parital PK (partial PK becomes PK of new table) Leave partial PK/determinant attribute in original table as FK. Use 1NF dependency diagram to reassign dependent attributes of Partial PK Dependent attributes are moved to corresponding new table. 3NF \u00b6 It is in 2NF It includes no transitive dependencies. 3NF Steps: \u00b6 Make new Tables/Relations to eliminate transitive dependencies. Create new Tables/Relations from each Transitive determinant (determinant becomes PK of new table) Leave determinant attribute in original table as FK. Use 2NF dependency diagram to reassign dependent attributes of Transitive determinant. Dependent attributes are moved to corresponding new table. Multiple The steps above are slightly complicated when a table has multiple candidate keys because the designer will need to pick one to become the PK. Identifying the candidate keys is still essential, however because composite candidate keys will still indicate partial dependencies, and likewise candidate keys are a sign that transitive dependencies may NOT exist since a transitive dependency requires the determinant attribute to be non-prime (i.e. not a part of any key and determined by a key). Additional Steps \u00b6 Evaluate PK Assignments: Make sure the primary keys for each table make sense (e.g. use IDs/Codes instead of data entry items like Names for PKs Evaluate Naming Conventions: Make sure all attributes follow the DB naming conventions like Table prefix, all caps, and column names that clearly identify the purpose of the attribute. Refine Attribute Atomicity: Decompose attributes like Name into FIRST_NAME and LAST_NAME to abet query flexibility. Identify New Attributes: Add attributes that may be missing but necessary for fulfilling business rules. Identify New Relationships: If business rules ask for Table A to be related to Table B (i.e. Manager to Project, etc.), make sure such relationships exist. Refine Primary Keys as Required for Data Granularity: E.G. Make sure attributes like HOURS are defined within a timeframe and determine if multiple HOURS row entries should be allowed. If so, a surrogate key or posibly even another Table/Relation may be needed. Maintain Historical Accuracy: Make sure attributes like LINE_PRICE and ITEM_PRICE exist in appropriate tables if historical accuracy is necessary. In the example, LINE_PRICE would never change, but ITEM_PRICE might. Evaluate Using Derived Attributes: Make sure to add columns for derived attributes based on compute and performance needs. Clean up Composite Keys: Composite keys can become cumbersome by making foreign keys difficult or searches by PK more difficult, thus clean them up with surrogate keys, but make sure to: Replace composite key with a surrogate and add any unique indexes to ensure data integrity. Boyce-Codd Normal Form (BCNF) \u00b6 A table is in Boyce-Codd normal form (BCNF) when every determinant in the table is a candidate key. A 3NF Table/Relation only violates BCNF if it has multiple candidate keys. Example below is in 3NF because what looks like a transitive dependency is actually a dependency between candidate keys. Thus, it violates BCNF, but not 3NF. 4NF \u00b6 A table is in fourth normal form (4NF) when it is in 3NF and has no multivalued dependencies. 4NF may be necessary if you have a table with 2 or more multivalue dependencies/attributes, independent from eachother, but dependent on what would be a single key. E.g. An EMPLOYEE with multiple ORG_CODE and multiple ASSIGNMENTS, but ASSIGNMENTS are or can be separate from ORG_CODE. You can avoid 4NF by building your tables with 2 rules: All attributes must be dependent on the primary key, but they must be independent of each other. *No row may contain two or more multivalued facts about an entity. Denormalization \u00b6 Problems with Denormalization \u00b6 Data Anomalies like: Update Anomaly: e.g. Updating CLASS HOURS but multiple rows have a reference to the HOURS attribute, so many updated rows are necessary. Delete Anomaly: e.g. delete last STUDENT in table associated with a CLASS also deletes historical knowledge of class. Insert Anomaly: e.g. Insert of STUDENT in a table requiring CLASS assignment requires a DUMMY class or a NULL Data updates are less efficient because programs that read and update tables must deal with larger tables. Indexing is more cumbersome. It is simply not practical to build all of the indexes required for the many attributes that might be located in a single unnormalized table. Unnormalized tables yield no simple strategies for creating virtual tables known as views. You will learn how to create and use views in Chapter 8, Advanced SQL. Minimum ERD Data-Modeling Checklist \u00b6 Help yourself, follow the process.","title":"Normalization"},{"location":"CIS-50/Chapter_6.html#normalization","text":"Normalization Good table structures Controls data redundancies Avoids data anomalies","title":"Normalization"},{"location":"CIS-50/Chapter_6.html#what-is-database-normalization","text":"","title":"What is Database Normalization"},{"location":"CIS-50/Chapter_6.html#definition","text":"Normalization: Finding and fixing table structure errors, which eliminates redundancy and reduces data anomalies. With normalization key attributes are called prime attributes and nonkey attributes are called non-prime attributes","title":"Definition"},{"location":"CIS-50/Chapter_6.html#normalization-goals","text":"Each Table/Relation represents a single subject. Each attribute (row/column intersection) contains only a single value (not a group of values). Controlled and minimum data redundancy, a value is not unnecessairily duplicated in other tables. All non-prime / nonkey attributes are dependent on the primary key (ensures data is unique to PK). There is no Table/Relation where a Insert, Update, or Delete can cause a data anomaly (ensures data integrity)","title":"Normalization Goals"},{"location":"CIS-50/Chapter_6.html#basic-process","text":"Assign table attributes based on determination and functional dependency discussed in Chapter 3 to build ERD. Identifying business rules Identifying and defining business and data constraints Defining functional dependencies Identifying entities and relationships Eliminating multivalued attributes Normalization is then applied to analyze ERD and determine if structure can be improved. The process is applied in steps from 1NF to 3NF, which is usually good enough. 1NF Steps 2NF Steps 3NF Steps Additional Steps There are legitimate reasons to violate 3NF and higher forms, however. So 3NF is not always optimal. 3NF engenders the need for more tables, therefore more joins and more Compute/Memory resources. Performance / Anomaly-Redundancy trade off is often a concern. Designers denormalize and compromise anomalies for performance. Most of the time designers are asked to use normalization process to anaylze and rectify existing files, spreadsheets and data structures.","title":"Basic Process"},{"location":"CIS-50/Chapter_6.html#normal-forms-low-to-high-transforms","text":"Partial Dependency: (A, B) (C, D), B C, and (A, B) is the PK then B C is a partial dependency since its only partially dependent on the PK. Transitive Dependency: X Y, Y Z, and X is the PK then X Z is a transitive dependency because X has a path directly to Z. Transitive dependencies occur only when a functional dependence exists among nonprime attributes (i.e. Y -> Z because Y is non-prime).","title":"Normal Forms, Low to High Transforms"},{"location":"CIS-50/Chapter_6.html#unnormalizedraw-data","text":"Will often contain redundant data, multivalued data, and other data anomalies like data integrity and data inconsistency","title":"Unnormalized/Raw data"},{"location":"CIS-50/Chapter_6.html#1nf","text":"All of the key attributes are defined. There are no repeating groups in the table. In other words, each row/column intersec- tion contains one and only one value, not a set of values. All attributes are dependent on the primary key.","title":"1NF"},{"location":"CIS-50/Chapter_6.html#1nf-steps","text":"Split grouped attributes into there own rows (i.e. for a row with grouped column of EmpIDs 1,2,3,\u2026 the row would be duplicated for each ID in the column EmpIDs. A Primary Key should be identified (i.e. for raw data it must be a set of attributes that combined identifies each row uniquely). Identify ALL dependencies using a dependency diagram like below: Dependency PK is Bold, Underline, and Colored Top arrows are dependencies based off PK Bottom arrows indicate Partial and Transitive dependencies","title":"1NF Steps:"},{"location":"CIS-50/Chapter_6.html#2nf","text":"If 1NF has non-Composite PK , Table/Relation is already in 2NF It is in 1NF. It includes no partial dependencies; no attribute is dependent on only a portion of PK. Transitive dependencies may still exist.","title":"2NF"},{"location":"CIS-50/Chapter_6.html#2nf-steps","text":"Eliminate Partial Dependencies Create new Tables/Relations from each parital PK (partial PK becomes PK of new table) Leave partial PK/determinant attribute in original table as FK. Use 1NF dependency diagram to reassign dependent attributes of Partial PK Dependent attributes are moved to corresponding new table.","title":"2NF Steps:"},{"location":"CIS-50/Chapter_6.html#3nf","text":"It is in 2NF It includes no transitive dependencies.","title":"3NF"},{"location":"CIS-50/Chapter_6.html#3nf-steps","text":"Make new Tables/Relations to eliminate transitive dependencies. Create new Tables/Relations from each Transitive determinant (determinant becomes PK of new table) Leave determinant attribute in original table as FK. Use 2NF dependency diagram to reassign dependent attributes of Transitive determinant. Dependent attributes are moved to corresponding new table. Multiple The steps above are slightly complicated when a table has multiple candidate keys because the designer will need to pick one to become the PK. Identifying the candidate keys is still essential, however because composite candidate keys will still indicate partial dependencies, and likewise candidate keys are a sign that transitive dependencies may NOT exist since a transitive dependency requires the determinant attribute to be non-prime (i.e. not a part of any key and determined by a key).","title":"3NF Steps:"},{"location":"CIS-50/Chapter_6.html#additional-steps","text":"Evaluate PK Assignments: Make sure the primary keys for each table make sense (e.g. use IDs/Codes instead of data entry items like Names for PKs Evaluate Naming Conventions: Make sure all attributes follow the DB naming conventions like Table prefix, all caps, and column names that clearly identify the purpose of the attribute. Refine Attribute Atomicity: Decompose attributes like Name into FIRST_NAME and LAST_NAME to abet query flexibility. Identify New Attributes: Add attributes that may be missing but necessary for fulfilling business rules. Identify New Relationships: If business rules ask for Table A to be related to Table B (i.e. Manager to Project, etc.), make sure such relationships exist. Refine Primary Keys as Required for Data Granularity: E.G. Make sure attributes like HOURS are defined within a timeframe and determine if multiple HOURS row entries should be allowed. If so, a surrogate key or posibly even another Table/Relation may be needed. Maintain Historical Accuracy: Make sure attributes like LINE_PRICE and ITEM_PRICE exist in appropriate tables if historical accuracy is necessary. In the example, LINE_PRICE would never change, but ITEM_PRICE might. Evaluate Using Derived Attributes: Make sure to add columns for derived attributes based on compute and performance needs. Clean up Composite Keys: Composite keys can become cumbersome by making foreign keys difficult or searches by PK more difficult, thus clean them up with surrogate keys, but make sure to: Replace composite key with a surrogate and add any unique indexes to ensure data integrity.","title":"Additional Steps"},{"location":"CIS-50/Chapter_6.html#boyce-codd-normal-form-bcnf","text":"A table is in Boyce-Codd normal form (BCNF) when every determinant in the table is a candidate key. A 3NF Table/Relation only violates BCNF if it has multiple candidate keys. Example below is in 3NF because what looks like a transitive dependency is actually a dependency between candidate keys. Thus, it violates BCNF, but not 3NF.","title":"Boyce-Codd Normal Form (BCNF)"},{"location":"CIS-50/Chapter_6.html#4nf","text":"A table is in fourth normal form (4NF) when it is in 3NF and has no multivalued dependencies. 4NF may be necessary if you have a table with 2 or more multivalue dependencies/attributes, independent from eachother, but dependent on what would be a single key. E.g. An EMPLOYEE with multiple ORG_CODE and multiple ASSIGNMENTS, but ASSIGNMENTS are or can be separate from ORG_CODE. You can avoid 4NF by building your tables with 2 rules: All attributes must be dependent on the primary key, but they must be independent of each other. *No row may contain two or more multivalued facts about an entity.","title":"4NF"},{"location":"CIS-50/Chapter_6.html#denormalization","text":"","title":"Denormalization"},{"location":"CIS-50/Chapter_6.html#problems-with-denormalization","text":"Data Anomalies like: Update Anomaly: e.g. Updating CLASS HOURS but multiple rows have a reference to the HOURS attribute, so many updated rows are necessary. Delete Anomaly: e.g. delete last STUDENT in table associated with a CLASS also deletes historical knowledge of class. Insert Anomaly: e.g. Insert of STUDENT in a table requiring CLASS assignment requires a DUMMY class or a NULL Data updates are less efficient because programs that read and update tables must deal with larger tables. Indexing is more cumbersome. It is simply not practical to build all of the indexes required for the many attributes that might be located in a single unnormalized table. Unnormalized tables yield no simple strategies for creating virtual tables known as views. You will learn how to create and use views in Chapter 8, Advanced SQL.","title":"Problems with Denormalization"},{"location":"CIS-50/Chapter_6.html#minimum-erd-data-modeling-checklist","text":"Help yourself, follow the process.","title":"Minimum ERD Data-Modeling Checklist"},{"location":"CIS-50/Chapter_7.html","text":"Structured Query Language (SQL) \u00b6 Criteria for an ideal DB Language, which SQL is! \u00b6 Create database and table structures, perform basic data management chores (CRUD) Perform complex queries designed to transform raw data into useful information. Require minimal user effort Easy to learn Fewer than 100 words in command set Declarative, NOT Procedural (i.e. you just declare what you want in SQL and the RDBMS figures out how to get/do your command). Portable ANSI/ISO SQL standard exist, so only minor dialect differences between competing DB Software manufacturers. Categories of SQL \u00b6 Data Manipulation Language (DML): Manipulates data INSERT, SELECT, UPDATE, DELETE Data Definition Language (DDL): Creates or alters schema and structure CREATE, DROP, ALTER, TRUNCATE, RENAME Transaction Control Language (TCL): Manages multiple DML commands from Bus. Rules in transactions . A transaction is a logical unit of work of set of DML commands. COMMIT, ROLLBACK, SAVEPOINT Data Control Language (DCL): Access Control, security and permissions. GRANT, REVOKE Queries and Operations \u00b6 Important Most SQL data manipulation commands operate over an entire table/relation, which is why SQL commands are said to be set-oriented commands. This is important because it allows users to treat SQL commands like building blocks. Once you know the building blocks, you can put them together to declare more complex sets you want. Intro to Data Types \u00b6 Data Type is basically the KIND of data that an attribute represents. Different RDBMs have similar and different data types, but all DB types fall under 3 categories: 3 Fundamental Types of Data \u00b6 Character data: Any printable characters such as alphabetic values, digits, punctuation, and special characters. Numeric data: digits, such that the data has a specific numeric value. Date data: DATES and Times ;-) Retrieval (SELECT Query) \u00b6 Basic Terms \u00b6 SELECT: specifies the attributes to be returned by the query FROM: specifies the table(s) from which the data will be retrieved WHERE: filters the rows of data based on provided criteria GROUP BY: groups the rows of data into collections based on sharing the same values in one or more attributes HAVING: filters the groups formed in the GROUP BY clause based on provided criteria ORDER BY: sorts the final query result rows in ascending or descending order based on the values of one or more attributes. Basic Structure \u00b6 1 SELECT [wildcard | column-list] FROM [table-list]; Column-list: Relational projection of attributes to return. Table-list: Relations to be joined in query. Wildcard: \u201c*\u201d characters used to designate ALL columns in the relations. Examples \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Get all rows and columns from product table. SELECT * FROM Product; # Get all rows but only columns P_CODE, P_DESCRIPT, P_PRICE, and P_QOH from product table. SELECT P_CODE, P_DESCRIPT, P_PRICE, P_QOH FROM Product; # Get all rows but only columns P_CODE, P_DESCRIPT, P_PRICE, and P_QOH from product table. # Alias/Rename the resulting columns in the relation to: Id, Description, Price, and Qty. SELECT P_CODE AS Id, P_DESCRIPT AS Description, P_PRICE AS Price, P_QOH AS Qty FROM Product; # Get all rows but only columns P_DESCRIPT, P_QOH, P_PRICE, and derived/calculated column INV_VAL from product table. SELECT P_DESCRIPT, P_QOH, P_PRICE, P_QOH * P_PRICE AS INV_VAL FROM PRODUCT; # Get a list of products and the warranty cutoff date for products # Swap out Date function as needed based on RDBMS Access: DATE(), SQL Server: GETDATE(), MySQL: CURDATE(), Oracle: SYSDATE SELECT P_CODE, P_INDATE, SYSDATE \u2013 90 AS CUTOFF FROM PRODUCT; # Select all the UNIQUE vendors that have products (i.e. DISTINCT removes repeats). SELECT DISTINCT V_CODE FROM PRODUCT; Other Notes \u00b6 When using Arithmetic Operators in derived/calculated columns PEMDAS applies. Dates are typically stored as a number in RDBMs as the number of days since a specific date in history. Thus Date arithmetic is + or - the number of days. Joining \u00b6 Basic Terms \u00b6 FROM: specifies the table(s) from which the data will be retrieved. Tables joined by PK/FK pairs or a auto selected common attribute.. NATURAL JOIN: returns all rows with matching values in the matching columns and eliminates duplicate columns. Joins on attributes with identical names and data-types Joins only common values in chosen attribute(s) Eliminates duplicate common attribute If no common attributes, returns relational product of 2 tables (i.e. each row from table1 duplicated with each row of table2). Usage is discouraged becuase table changes can affect common attribute joins JOIN USING: returns only the rows with matching values in the column indicated in the USING clause. The column must exist in both tables. Eliminates duplicate common attribute Only in MySQL and Oracle Oracle doesn\u2019t allow usage of table qualifiers can\u2019t be used with the common attribute. JOIN ON: joins tables with no common attribute based on equality condition. Attributes equality condition must have the same data-type. Preferred Join method because its the most widely supported. Does NOT eliminate duplicate common attribute(s) table qualifier must be used to referr to duplicate common attributes. OUTER JOINS: LEFT: returns not only the rows matching the join condition, but also the rows in the left table with unmatched values in the right table. RIGHT: returns not only the rows matching the join condition, but also the rows in the right table with unmatched values in the left table. FULL: returns not only the rows matching the join condition, but also the rows with unmatched values in the table on eithr side. Only supported by Oracle and SqlServer CROSS JOIN: Cartesian/Relational Product, joins all rows from table1 to all rows in table2 Not supported in Access TABLE ALIAS: A way of renaming a table in a query for 3 common purposes: Shortening names Improving query human readability. Recursive Joins (table joined to itself) Basic Structure \u00b6 NATURAL JOIN: SELECT [column-list] FROM [table1] NATURAL JOIN [table2] JOIN USING: SELECT [column-list] FROM [table1] JOIN [table2] USING ([common-column]) JOIN ON: SELECT [column-list] FROM [table1] JOIN [table2] ON [join-condition] LEFT OUTER JOIN: SELECT [column-list] FROM [table1] LEFT OUTER JOIN [table2] ON [join-condition] RIGHT OUTER JOIN: SELECT [column-list] FROM [table1] RIGHT OUTER JOIN [table2] ON [join-condition] FULL OUTER JOIN: SELECT [column-list] FROM [table1] FULL OUTER JOIN [table2] ON [join-condition] CROSS JOIN: SELECT [column-list] FROM [table1] CROSS JOIN [table2] Examples \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # Natural join to get all customers and their invoices joined on some auto selected common attribute. SELECT CUS_CODE, CUS_LNAME, INV_NUMBER, INV_DATE FROM CUSTOMER NATURAL JOIN INVOICE; # Join Using to get product to vendor relation USING V_CODE. SELECT P_CODE, P_DESCRIPT, V_CODE, V_NAME, V_AREACODE, V_PHONE FROM PRODUCT JOIN VENDOR USING (V_CODE); # Joins Invoice and Line tables utilizing ON equality clause. SELECT INVOICE.INV_NUMBER, PRODUCT.P_CODE, P_DESCRIPT, LINE_UNITS, LINE_PRICE FROM INVOICE JOIN LINE ON INVOICE.INV_NUMBER = LINE.INV_NUMBER JOIN PRODUCT ON LINE.P_CODE = PRODUCT.P_CODE; # Demonstrating using table qualifiers to project duplicate common attributes. SELECT P_CODE, VENDOR.V_CODE, V_NAME FROM PRODUCT JOIN VENDOR ON PRODUCT.V_CODE = VENDOR.V_CODE; # Result includes all product rows without matching vendors as well as all vendor rows without matching products SELECT P_CODE, VENDOR.V_CODE, V_NAME FROM VENDOR FULL JOIN PRODUCT ON VENDOR. V_CODE = PRODUCT.V_CODE; # Combines all invoices with all invoice lines. SELECT * FROM INVOICE CROSS JOIN LINE; # Example of a table alias to handle a recursive joining an employee to their manager SELECT E.EMP_NUM, E.EMP_LNAME, E.EMP_MGR, M.EMP_LNAME FROM EMP E JOIN EMP M ON E.EMP_MGR = M.EMP_NUM; Sort, Search/Restriction Criteria \u00b6 Basic Terms \u00b6 ORDER BY: Sorts result rows by list of columns in order from first to last in list. NULLS in order by column list results either come first or last depending on the RDBMS Oracle allows ordering NULLS with ORDER BY column DESC NULLS LAST; or NULLS FIRST WHERE: Adds conditional restrictions to SELECT or search criteria allowing limits to rows in query results. Comparison Operators can be used on character data to compare alphebetically left-to-right. Numbers or Dates stored incorrectly as character data can produce anomalies when comparison operators are used. Logical Operators (AND, OR, and NOT): Allow to test multiple conditions in WHERE condition list AND: Used in WHERE or HAVING clause, and all conditions must be true. OR: Used in WHERE or HAVING clause, and any of the conditions must be true. NOT: negates result of other conditions, turns TRUE to FALSE and vice versa Logical operators can be combined, but must be organized with parenthesis. Old Syle Joins: Joins that have a comma separated list of tables in the FROM clause and the join conditions in the WHERE clause. No longer recommended for 2 major reasons Splits joins between FROM and WHERE clauses making them less human readable. Susceptable to undetected errors because RDBMS can\u2019t determine if JOIN clauses actually exist syntactically. Note Most RDBMS search criteria are case sensitive, so its a good idea to wrap column with UPPER() functions before performing comparisons in the following Special Operators. Special Operators: BETWEEN: Used to check if value is in a range (Always list LOW test value first to avoid Empty results). IN: Used to check if value is in a list. Used heavily in sub-queries as a subquery can return the list of things to compare to. LIKE: Used to match a character pattern Like can use multiple wild-cards in its matches. \u2019%\u2019 is a wild-card strings to match anything before, between, or after its appearance. \u2018_\u2019 is a wild-card to match just a single character wherever it appears. Access uses \u2018*\u2019 and \u2018?\u2019 instead of \u2018%\u2019 and \u2018_\u2019 IS NULL: Used to detect NULL values specifically. This operator is needed because using the = operator to compare to NULL is undefined, meaning it will always be false, thus yeilding empty results.. Basic Structure \u00b6 ORDER By: SELECT [column-list] FROM [table-list] ORDER BY [column-list ASC | DESC]; WHERE: SELECT [columnlist] FROM [tablelist] WHERE [conditionlist] ORDER BY [columnlist ASC | DESC]; BETWEEN: SELECT [columnlist] FROM [tablelist] WHERE [column] (NOT) BETWEEN [min value] AND [max value]; IN: SELECT [columnlist] FROM [tablelist] WHERE [column] (NOT) IN ( [comma-sep-value-list] ); LIKE: SELECT [columnlist] FROM [tablelist] WHERE UPPER( [column] ) (NOT) LIKE [\u2018pattern to match\u2019]; IS NULL: SELECT [columnlist] FROM [tablelist] WHERE [column] IS (NOT) NULL; Examples \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 # Get list of products sorted by Price from High to Low. SELECT P_CODE, P_DESCRIPT, P_QOH, P_PRICE FROM PRODUCT ORDER BY P_PRICE DESC; # Cascading order sequence lname, fname, then middle initial SELECT EMP_LNAME, EMP_FNAME, EMP_INITIAL, EMP_AREACODE, EMP_PHONE FROM EMPLOYEE ORDER BY EMP_LNAME, EMP_FNAME, EMP_INITIAL; # Order by with derived column/attribute SELECT P_CODE, P_DESCRIPT, V_CODE, P_PRICE * P_QOH AS TOTAL FROM PRODUCT ORDER BY V_CODE, TOTAL DESC; # Select product info for all vendors except 21344 SELECT P_DESCRIPT, P_QOH, P_PRICE, V_CODE FROM PRODUCT WHERE V_CODE <> 21344; # Date Query MSSQL SELECT P_DESCRIPT, P_QOH, P_MIN, P_PRICE, P_INDATE FROM PRODUCT WHERE P_INDATE >= '20-Jan-2018'; # Date Query MySQL SELECT P_DESCRIPT, P_QOH, P_MIN, P_PRICE, P_INDATE FROM PRODUCT WHERE P_INDATE >= '2018-01-21'; # Date Query Access SELECT P_DESCRIPT, P_QOH, P_MIN, P_PRICE, P_INDATE FROM PRODUCT WHERE P_INDATE >= #20-Jan-2018#; # Get all the products from Vendor 25595 and 24288 that are over $100 SELECT P_DESCRIPT, P_PRICE, V_CODE FROM PRODUCT WHERE (V_CODE = 25595 OR V_CODE = 24288) AND P_PRICE > 100; # Or with IN operator SELECT * FROM PRODUCT WHERE V_CODE IN ('25595', '24288') AND P_PRICE > 100; # Get vendors with a contact where the last name contains OS as the 2nd and 3rd characters. SELECT V_NAME, V_CONTACT, V_AREACODE, V_PHONE FROM VENDOR WHERE UPPER(V_CONTACT) LIKE '_OS%'; # Get all products that don't have a vendor (i.e. NULL vendor). SELECT P_CODE, P_DESCRIPT, V_CODE FROM PRODUCT WHERE V_CODE IS NULL; Aggregation \u00b6 Notes \u00b6 COUNT typically doesn\u2019t count NULLs, so you\u2019ll want COUNT(*) if you want a row count. COUNT can be combined with DISTINCT to only count unique values e.g. SELECT COUNT(DISTINCT V_CODE) AS CNT FROM PRODUCT; MAX and MIN are great for getting oldest or newest dates Basic Terms \u00b6 GROUP BY: Groups rows into smaller collections by a column list Treats all NULLs as if they are the same when grouping. Basic Structure \u00b6 GROUP BY: SELECT [columnlist] FROM [tablelist] WHERE [conditionlist] GROUP BY [columnlist] HAVING [group conditionlist] ORDER BY [columnlist ASC | DESC] Examples \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Get a list of all unique vendors you sell products from SELECT COUNT(DISTINCT V_CODE) AS \"COUNT DISTINCT\" FROM PRODUCT; # Get the highest and lowest prices in the product table SELECT MAX(P_PRICE) AS MAXPRICE, MIN(P_PRICE) AS MINPRICE FROM PRODUCT; # Get Total still owed by customers SELECT SUM(CUS_BALANCE) AS TOTBALANCE FROM CUSTOMER; # Get the average price of products in the product table SELECT AVG(P_PRICE) AS AVGPRICE FROM PRODUCT; # Get average price of products by vendor SELECT V_CODE, AVG(P_PRICE) AS AVGPRICE FROM PRODUCT GROUP BY V_CODE; # Get a count of products and averagre prices for each vendor SELECT V_CODE, V_NAME, COUNT(P_CODE) AS NUMPROD, AVG(P_PRICE) AS AVGPRICE FROM PRODUCT JOIN VENDOR ON PRODUCT.V_CODE = VENDOR.V_CODE GROUP BY V_CODE, V_NAME ORDER BY V_NAME; Subqueries and Preprocessing \u00b6 Data Manipulation Functions \u00b6 Key Query Principles \u00b6","title":"Structured Query Language (SQL)"},{"location":"CIS-50/Chapter_7.html#structured-query-language-sql","text":"","title":"Structured Query Language (SQL)"},{"location":"CIS-50/Chapter_7.html#criteria-for-an-ideal-db-language-which-sql-is","text":"Create database and table structures, perform basic data management chores (CRUD) Perform complex queries designed to transform raw data into useful information. Require minimal user effort Easy to learn Fewer than 100 words in command set Declarative, NOT Procedural (i.e. you just declare what you want in SQL and the RDBMS figures out how to get/do your command). Portable ANSI/ISO SQL standard exist, so only minor dialect differences between competing DB Software manufacturers.","title":"Criteria for an ideal DB Language, which SQL is!"},{"location":"CIS-50/Chapter_7.html#categories-of-sql","text":"Data Manipulation Language (DML): Manipulates data INSERT, SELECT, UPDATE, DELETE Data Definition Language (DDL): Creates or alters schema and structure CREATE, DROP, ALTER, TRUNCATE, RENAME Transaction Control Language (TCL): Manages multiple DML commands from Bus. Rules in transactions . A transaction is a logical unit of work of set of DML commands. COMMIT, ROLLBACK, SAVEPOINT Data Control Language (DCL): Access Control, security and permissions. GRANT, REVOKE","title":"Categories of SQL"},{"location":"CIS-50/Chapter_7.html#queries-and-operations","text":"Important Most SQL data manipulation commands operate over an entire table/relation, which is why SQL commands are said to be set-oriented commands. This is important because it allows users to treat SQL commands like building blocks. Once you know the building blocks, you can put them together to declare more complex sets you want.","title":"Queries and Operations"},{"location":"CIS-50/Chapter_7.html#intro-to-data-types","text":"Data Type is basically the KIND of data that an attribute represents. Different RDBMs have similar and different data types, but all DB types fall under 3 categories:","title":"Intro to Data Types"},{"location":"CIS-50/Chapter_7.html#3-fundamental-types-of-data","text":"Character data: Any printable characters such as alphabetic values, digits, punctuation, and special characters. Numeric data: digits, such that the data has a specific numeric value. Date data: DATES and Times ;-)","title":"3 Fundamental Types of Data"},{"location":"CIS-50/Chapter_7.html#retrieval-select-query","text":"","title":"Retrieval (SELECT Query)"},{"location":"CIS-50/Chapter_7.html#basic-terms","text":"SELECT: specifies the attributes to be returned by the query FROM: specifies the table(s) from which the data will be retrieved WHERE: filters the rows of data based on provided criteria GROUP BY: groups the rows of data into collections based on sharing the same values in one or more attributes HAVING: filters the groups formed in the GROUP BY clause based on provided criteria ORDER BY: sorts the final query result rows in ascending or descending order based on the values of one or more attributes.","title":"Basic Terms"},{"location":"CIS-50/Chapter_7.html#basic-structure","text":"1 SELECT [wildcard | column-list] FROM [table-list]; Column-list: Relational projection of attributes to return. Table-list: Relations to be joined in query. Wildcard: \u201c*\u201d characters used to designate ALL columns in the relations.","title":"Basic Structure"},{"location":"CIS-50/Chapter_7.html#examples","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Get all rows and columns from product table. SELECT * FROM Product; # Get all rows but only columns P_CODE, P_DESCRIPT, P_PRICE, and P_QOH from product table. SELECT P_CODE, P_DESCRIPT, P_PRICE, P_QOH FROM Product; # Get all rows but only columns P_CODE, P_DESCRIPT, P_PRICE, and P_QOH from product table. # Alias/Rename the resulting columns in the relation to: Id, Description, Price, and Qty. SELECT P_CODE AS Id, P_DESCRIPT AS Description, P_PRICE AS Price, P_QOH AS Qty FROM Product; # Get all rows but only columns P_DESCRIPT, P_QOH, P_PRICE, and derived/calculated column INV_VAL from product table. SELECT P_DESCRIPT, P_QOH, P_PRICE, P_QOH * P_PRICE AS INV_VAL FROM PRODUCT; # Get a list of products and the warranty cutoff date for products # Swap out Date function as needed based on RDBMS Access: DATE(), SQL Server: GETDATE(), MySQL: CURDATE(), Oracle: SYSDATE SELECT P_CODE, P_INDATE, SYSDATE \u2013 90 AS CUTOFF FROM PRODUCT; # Select all the UNIQUE vendors that have products (i.e. DISTINCT removes repeats). SELECT DISTINCT V_CODE FROM PRODUCT;","title":"Examples"},{"location":"CIS-50/Chapter_7.html#other-notes","text":"When using Arithmetic Operators in derived/calculated columns PEMDAS applies. Dates are typically stored as a number in RDBMs as the number of days since a specific date in history. Thus Date arithmetic is + or - the number of days.","title":"Other Notes"},{"location":"CIS-50/Chapter_7.html#joining","text":"","title":"Joining"},{"location":"CIS-50/Chapter_7.html#basic-terms_1","text":"FROM: specifies the table(s) from which the data will be retrieved. Tables joined by PK/FK pairs or a auto selected common attribute.. NATURAL JOIN: returns all rows with matching values in the matching columns and eliminates duplicate columns. Joins on attributes with identical names and data-types Joins only common values in chosen attribute(s) Eliminates duplicate common attribute If no common attributes, returns relational product of 2 tables (i.e. each row from table1 duplicated with each row of table2). Usage is discouraged becuase table changes can affect common attribute joins JOIN USING: returns only the rows with matching values in the column indicated in the USING clause. The column must exist in both tables. Eliminates duplicate common attribute Only in MySQL and Oracle Oracle doesn\u2019t allow usage of table qualifiers can\u2019t be used with the common attribute. JOIN ON: joins tables with no common attribute based on equality condition. Attributes equality condition must have the same data-type. Preferred Join method because its the most widely supported. Does NOT eliminate duplicate common attribute(s) table qualifier must be used to referr to duplicate common attributes. OUTER JOINS: LEFT: returns not only the rows matching the join condition, but also the rows in the left table with unmatched values in the right table. RIGHT: returns not only the rows matching the join condition, but also the rows in the right table with unmatched values in the left table. FULL: returns not only the rows matching the join condition, but also the rows with unmatched values in the table on eithr side. Only supported by Oracle and SqlServer CROSS JOIN: Cartesian/Relational Product, joins all rows from table1 to all rows in table2 Not supported in Access TABLE ALIAS: A way of renaming a table in a query for 3 common purposes: Shortening names Improving query human readability. Recursive Joins (table joined to itself)","title":"Basic Terms"},{"location":"CIS-50/Chapter_7.html#basic-structure_1","text":"NATURAL JOIN: SELECT [column-list] FROM [table1] NATURAL JOIN [table2] JOIN USING: SELECT [column-list] FROM [table1] JOIN [table2] USING ([common-column]) JOIN ON: SELECT [column-list] FROM [table1] JOIN [table2] ON [join-condition] LEFT OUTER JOIN: SELECT [column-list] FROM [table1] LEFT OUTER JOIN [table2] ON [join-condition] RIGHT OUTER JOIN: SELECT [column-list] FROM [table1] RIGHT OUTER JOIN [table2] ON [join-condition] FULL OUTER JOIN: SELECT [column-list] FROM [table1] FULL OUTER JOIN [table2] ON [join-condition] CROSS JOIN: SELECT [column-list] FROM [table1] CROSS JOIN [table2]","title":"Basic Structure"},{"location":"CIS-50/Chapter_7.html#examples_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # Natural join to get all customers and their invoices joined on some auto selected common attribute. SELECT CUS_CODE, CUS_LNAME, INV_NUMBER, INV_DATE FROM CUSTOMER NATURAL JOIN INVOICE; # Join Using to get product to vendor relation USING V_CODE. SELECT P_CODE, P_DESCRIPT, V_CODE, V_NAME, V_AREACODE, V_PHONE FROM PRODUCT JOIN VENDOR USING (V_CODE); # Joins Invoice and Line tables utilizing ON equality clause. SELECT INVOICE.INV_NUMBER, PRODUCT.P_CODE, P_DESCRIPT, LINE_UNITS, LINE_PRICE FROM INVOICE JOIN LINE ON INVOICE.INV_NUMBER = LINE.INV_NUMBER JOIN PRODUCT ON LINE.P_CODE = PRODUCT.P_CODE; # Demonstrating using table qualifiers to project duplicate common attributes. SELECT P_CODE, VENDOR.V_CODE, V_NAME FROM PRODUCT JOIN VENDOR ON PRODUCT.V_CODE = VENDOR.V_CODE; # Result includes all product rows without matching vendors as well as all vendor rows without matching products SELECT P_CODE, VENDOR.V_CODE, V_NAME FROM VENDOR FULL JOIN PRODUCT ON VENDOR. V_CODE = PRODUCT.V_CODE; # Combines all invoices with all invoice lines. SELECT * FROM INVOICE CROSS JOIN LINE; # Example of a table alias to handle a recursive joining an employee to their manager SELECT E.EMP_NUM, E.EMP_LNAME, E.EMP_MGR, M.EMP_LNAME FROM EMP E JOIN EMP M ON E.EMP_MGR = M.EMP_NUM;","title":"Examples"},{"location":"CIS-50/Chapter_7.html#sort-searchrestriction-criteria","text":"","title":"Sort, Search/Restriction Criteria"},{"location":"CIS-50/Chapter_7.html#basic-terms_2","text":"ORDER BY: Sorts result rows by list of columns in order from first to last in list. NULLS in order by column list results either come first or last depending on the RDBMS Oracle allows ordering NULLS with ORDER BY column DESC NULLS LAST; or NULLS FIRST WHERE: Adds conditional restrictions to SELECT or search criteria allowing limits to rows in query results. Comparison Operators can be used on character data to compare alphebetically left-to-right. Numbers or Dates stored incorrectly as character data can produce anomalies when comparison operators are used. Logical Operators (AND, OR, and NOT): Allow to test multiple conditions in WHERE condition list AND: Used in WHERE or HAVING clause, and all conditions must be true. OR: Used in WHERE or HAVING clause, and any of the conditions must be true. NOT: negates result of other conditions, turns TRUE to FALSE and vice versa Logical operators can be combined, but must be organized with parenthesis. Old Syle Joins: Joins that have a comma separated list of tables in the FROM clause and the join conditions in the WHERE clause. No longer recommended for 2 major reasons Splits joins between FROM and WHERE clauses making them less human readable. Susceptable to undetected errors because RDBMS can\u2019t determine if JOIN clauses actually exist syntactically. Note Most RDBMS search criteria are case sensitive, so its a good idea to wrap column with UPPER() functions before performing comparisons in the following Special Operators. Special Operators: BETWEEN: Used to check if value is in a range (Always list LOW test value first to avoid Empty results). IN: Used to check if value is in a list. Used heavily in sub-queries as a subquery can return the list of things to compare to. LIKE: Used to match a character pattern Like can use multiple wild-cards in its matches. \u2019%\u2019 is a wild-card strings to match anything before, between, or after its appearance. \u2018_\u2019 is a wild-card to match just a single character wherever it appears. Access uses \u2018*\u2019 and \u2018?\u2019 instead of \u2018%\u2019 and \u2018_\u2019 IS NULL: Used to detect NULL values specifically. This operator is needed because using the = operator to compare to NULL is undefined, meaning it will always be false, thus yeilding empty results..","title":"Basic Terms"},{"location":"CIS-50/Chapter_7.html#basic-structure_2","text":"ORDER By: SELECT [column-list] FROM [table-list] ORDER BY [column-list ASC | DESC]; WHERE: SELECT [columnlist] FROM [tablelist] WHERE [conditionlist] ORDER BY [columnlist ASC | DESC]; BETWEEN: SELECT [columnlist] FROM [tablelist] WHERE [column] (NOT) BETWEEN [min value] AND [max value]; IN: SELECT [columnlist] FROM [tablelist] WHERE [column] (NOT) IN ( [comma-sep-value-list] ); LIKE: SELECT [columnlist] FROM [tablelist] WHERE UPPER( [column] ) (NOT) LIKE [\u2018pattern to match\u2019]; IS NULL: SELECT [columnlist] FROM [tablelist] WHERE [column] IS (NOT) NULL;","title":"Basic Structure"},{"location":"CIS-50/Chapter_7.html#examples_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 # Get list of products sorted by Price from High to Low. SELECT P_CODE, P_DESCRIPT, P_QOH, P_PRICE FROM PRODUCT ORDER BY P_PRICE DESC; # Cascading order sequence lname, fname, then middle initial SELECT EMP_LNAME, EMP_FNAME, EMP_INITIAL, EMP_AREACODE, EMP_PHONE FROM EMPLOYEE ORDER BY EMP_LNAME, EMP_FNAME, EMP_INITIAL; # Order by with derived column/attribute SELECT P_CODE, P_DESCRIPT, V_CODE, P_PRICE * P_QOH AS TOTAL FROM PRODUCT ORDER BY V_CODE, TOTAL DESC; # Select product info for all vendors except 21344 SELECT P_DESCRIPT, P_QOH, P_PRICE, V_CODE FROM PRODUCT WHERE V_CODE <> 21344; # Date Query MSSQL SELECT P_DESCRIPT, P_QOH, P_MIN, P_PRICE, P_INDATE FROM PRODUCT WHERE P_INDATE >= '20-Jan-2018'; # Date Query MySQL SELECT P_DESCRIPT, P_QOH, P_MIN, P_PRICE, P_INDATE FROM PRODUCT WHERE P_INDATE >= '2018-01-21'; # Date Query Access SELECT P_DESCRIPT, P_QOH, P_MIN, P_PRICE, P_INDATE FROM PRODUCT WHERE P_INDATE >= #20-Jan-2018#; # Get all the products from Vendor 25595 and 24288 that are over $100 SELECT P_DESCRIPT, P_PRICE, V_CODE FROM PRODUCT WHERE (V_CODE = 25595 OR V_CODE = 24288) AND P_PRICE > 100; # Or with IN operator SELECT * FROM PRODUCT WHERE V_CODE IN ('25595', '24288') AND P_PRICE > 100; # Get vendors with a contact where the last name contains OS as the 2nd and 3rd characters. SELECT V_NAME, V_CONTACT, V_AREACODE, V_PHONE FROM VENDOR WHERE UPPER(V_CONTACT) LIKE '_OS%'; # Get all products that don't have a vendor (i.e. NULL vendor). SELECT P_CODE, P_DESCRIPT, V_CODE FROM PRODUCT WHERE V_CODE IS NULL;","title":"Examples"},{"location":"CIS-50/Chapter_7.html#aggregation","text":"","title":"Aggregation"},{"location":"CIS-50/Chapter_7.html#notes","text":"COUNT typically doesn\u2019t count NULLs, so you\u2019ll want COUNT(*) if you want a row count. COUNT can be combined with DISTINCT to only count unique values e.g. SELECT COUNT(DISTINCT V_CODE) AS CNT FROM PRODUCT; MAX and MIN are great for getting oldest or newest dates","title":"Notes"},{"location":"CIS-50/Chapter_7.html#basic-terms_3","text":"GROUP BY: Groups rows into smaller collections by a column list Treats all NULLs as if they are the same when grouping.","title":"Basic Terms"},{"location":"CIS-50/Chapter_7.html#basic-structure_3","text":"GROUP BY: SELECT [columnlist] FROM [tablelist] WHERE [conditionlist] GROUP BY [columnlist] HAVING [group conditionlist] ORDER BY [columnlist ASC | DESC]","title":"Basic Structure"},{"location":"CIS-50/Chapter_7.html#examples_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Get a list of all unique vendors you sell products from SELECT COUNT(DISTINCT V_CODE) AS \"COUNT DISTINCT\" FROM PRODUCT; # Get the highest and lowest prices in the product table SELECT MAX(P_PRICE) AS MAXPRICE, MIN(P_PRICE) AS MINPRICE FROM PRODUCT; # Get Total still owed by customers SELECT SUM(CUS_BALANCE) AS TOTBALANCE FROM CUSTOMER; # Get the average price of products in the product table SELECT AVG(P_PRICE) AS AVGPRICE FROM PRODUCT; # Get average price of products by vendor SELECT V_CODE, AVG(P_PRICE) AS AVGPRICE FROM PRODUCT GROUP BY V_CODE; # Get a count of products and averagre prices for each vendor SELECT V_CODE, V_NAME, COUNT(P_CODE) AS NUMPROD, AVG(P_PRICE) AS AVGPRICE FROM PRODUCT JOIN VENDOR ON PRODUCT.V_CODE = VENDOR.V_CODE GROUP BY V_CODE, V_NAME ORDER BY V_NAME;","title":"Examples"},{"location":"CIS-50/Chapter_7.html#subqueries-and-preprocessing","text":"","title":"Subqueries and Preprocessing"},{"location":"CIS-50/Chapter_7.html#data-manipulation-functions","text":"","title":"Data Manipulation Functions"},{"location":"CIS-50/Chapter_7.html#key-query-principles","text":"","title":"Key Query Principles"},{"location":"git/gitflow.html","text":"Git Workflows \u00b6 Forking Workflow \u00b6 Adding an Upstream Repo \u00b6 To add the upstream repo ( the repo you originally forked from ) to your remote repos do the following: Open terminal and navigate to your local git repository 1 cd ~/Development/<CLONED REPO DIR> Run the remote add command 1 git remote add upstream <GitHub HTTP URL TO ORIGINAL REPO> Verify that the upstream was added. 1 git remote -v Updating My Fork (CLI) Version \u00b6 Open terminal and navigate to your local git repository 1 cd ~/Development/<PROJECT DIR> Checkout the feature branch that holds the changes you desire to merge 1 git checkout <BRANCH NAME> Confirm your local repo knows about the upstream repo ( the repo you originally forked from ). If you see only remote repos from your GitHub, you must add the upstream . 1 git remote -v Fetch changes made to the upstream while you were working on your feature. If there were changes, you will see them displayed. 1 git fetch upstream Merge the remote upstream changes into your local branch (remember you already checked out your local feature branch). 1 git merge upstream/master Now upload those changes to YOUR remote origin (i.e. your GitHub fork). 1 git push origin Warning If you\u2019re working with feature branches ( which we are! ) you may need to push your changes from YOUR local feature branch to YOUR remote origin feture branch like so. 1 git push origin <LOCAL BRANCH NAME>:<ORIGIN BRANCH NAME> Now our forked ( origin ) remote repository on GitHub is up to date with the original ( upstream ) repository we forked from! Finally, from GitHub, go to the branch you just pushed in YOUR GitHub account , and issue a Pull Request to the Semester Branch on the upstream! Clone Local \u00b6 Once you have forked the upstream repository to your GitHub account, you will need to clone it to your local computer. 1 git clone <GIT SSH or HTTP URL FOR REPO> GitFlow Workflow \u00b6 Note This workflow is very typical within a large development organization such as Amazon and Google, though there are other workflows! I am not focusing on it because we will be using the forking workflow. Short GitFlow Explanation \u00b6 Master: Stable branch, that deploys direct to production. Develop: Unstable branch, and all feature branches will be pushed here. Feature: Check out from Develop branch , and push changes back to it. Hotfix: Check out from Master , push changes to Master AND Develop . Release: Semi-stable, ready to test and release, following a few bug-fixes. Checkout from Develop and push to both Master and Develop .","title":"Workflows"},{"location":"git/gitflow.html#git-workflows","text":"","title":"Git Workflows"},{"location":"git/gitflow.html#forking-workflow","text":"","title":"Forking Workflow"},{"location":"git/gitflow.html#adding-an-upstream-repo","text":"To add the upstream repo ( the repo you originally forked from ) to your remote repos do the following: Open terminal and navigate to your local git repository 1 cd ~/Development/<CLONED REPO DIR> Run the remote add command 1 git remote add upstream <GitHub HTTP URL TO ORIGINAL REPO> Verify that the upstream was added. 1 git remote -v","title":"Adding an Upstream Repo"},{"location":"git/gitflow.html#updating-my-fork-cli-version","text":"Open terminal and navigate to your local git repository 1 cd ~/Development/<PROJECT DIR> Checkout the feature branch that holds the changes you desire to merge 1 git checkout <BRANCH NAME> Confirm your local repo knows about the upstream repo ( the repo you originally forked from ). If you see only remote repos from your GitHub, you must add the upstream . 1 git remote -v Fetch changes made to the upstream while you were working on your feature. If there were changes, you will see them displayed. 1 git fetch upstream Merge the remote upstream changes into your local branch (remember you already checked out your local feature branch). 1 git merge upstream/master Now upload those changes to YOUR remote origin (i.e. your GitHub fork). 1 git push origin Warning If you\u2019re working with feature branches ( which we are! ) you may need to push your changes from YOUR local feature branch to YOUR remote origin feture branch like so. 1 git push origin <LOCAL BRANCH NAME>:<ORIGIN BRANCH NAME> Now our forked ( origin ) remote repository on GitHub is up to date with the original ( upstream ) repository we forked from! Finally, from GitHub, go to the branch you just pushed in YOUR GitHub account , and issue a Pull Request to the Semester Branch on the upstream!","title":"Updating My Fork (CLI) Version"},{"location":"git/gitflow.html#clone-local","text":"Once you have forked the upstream repository to your GitHub account, you will need to clone it to your local computer. 1 git clone <GIT SSH or HTTP URL FOR REPO>","title":"Clone Local"},{"location":"git/gitflow.html#gitflow-workflow","text":"Note This workflow is very typical within a large development organization such as Amazon and Google, though there are other workflows! I am not focusing on it because we will be using the forking workflow.","title":"GitFlow Workflow"},{"location":"git/gitflow.html#short-gitflow-explanation","text":"Master: Stable branch, that deploys direct to production. Develop: Unstable branch, and all feature branches will be pushed here. Feature: Check out from Develop branch , and push changes back to it. Hotfix: Check out from Master , push changes to Master AND Develop . Release: Semi-stable, ready to test and release, following a few bug-fixes. Checkout from Develop and push to both Master and Develop .","title":"Short GitFlow Explanation"},{"location":"hardware/cables.html","text":"Cables \u00b6 Cat-6 \u00b6 Info 10/100BaseT, Gigabit, Ethernet, 10Gig Ethernet at shorter distances. 250Mhz Frequencey Shielded/Unshielded Plastic core reduces crosstalk Wiring Cat-6 Straight Through Cable \u00b6 Cat-6 Wiring Handout Wire Order \u00b6 Wire Purpose \u00b6","title":"Cables"},{"location":"hardware/cables.html#cables","text":"","title":"Cables"},{"location":"hardware/cables.html#cat-6","text":"Info 10/100BaseT, Gigabit, Ethernet, 10Gig Ethernet at shorter distances. 250Mhz Frequencey Shielded/Unshielded Plastic core reduces crosstalk","title":"Cat-6"},{"location":"hardware/cables.html#wiring-cat-6-straight-through-cable","text":"Cat-6 Wiring Handout","title":"Wiring Cat-6 Straight Through Cable"},{"location":"hardware/cables.html#wire-order","text":"","title":"Wire Order"},{"location":"hardware/cables.html#wire-purpose","text":"","title":"Wire Purpose"},{"location":"java/associativity.html","text":"Associativity \u00b6 Level Operator Description Associativity 16 () [] . parentheses array access member access left-to-right 15 ++ -- unary post-increment unary post-decrement left-to-right 14 + - ! ~ ++ -- unary plus unary minus unary logical NOT unary bitwise NOT unary pre-increment unary pre-decrement right-to-left 13 () new cast object creation right-to-left 12 * / % multiplicative left-to-right 11 + - + additive string concatenation left-to-right 10 << >> >>> shift left-to-right 9 < <= > >= instanceof relational left-to-right 8 == != equality left-to-right 7 & bitwise AND left-to-right 6 ^ bitwise XOR left-to-right 5 bitwise OR 4 && logical AND left-to-right 3 2 ?: ternary right-to-left 1 = += -= *= /= %= &= ^= = <<= >>= >>>= assignment 0 -> lambda expression arrow","title":"Operator Prcedence &amp; Associativity"},{"location":"java/associativity.html#associativity","text":"Level Operator Description Associativity 16 () [] . parentheses array access member access left-to-right 15 ++ -- unary post-increment unary post-decrement left-to-right 14 + - ! ~ ++ -- unary plus unary minus unary logical NOT unary bitwise NOT unary pre-increment unary pre-decrement right-to-left 13 () new cast object creation right-to-left 12 * / % multiplicative left-to-right 11 + - + additive string concatenation left-to-right 10 << >> >>> shift left-to-right 9 < <= > >= instanceof relational left-to-right 8 == != equality left-to-right 7 & bitwise AND left-to-right 6 ^ bitwise XOR left-to-right 5 bitwise OR 4 && logical AND left-to-right 3 2 ?: ternary right-to-left 1 = += -= *= /= %= &= ^= = <<= >>= >>>= assignment 0 -> lambda expression arrow","title":"Associativity"},{"location":"java/format_specifiers.html","text":"Java Format Specifiers \u00b6 Format Specifier Data Type Output %a floating point (except BigDecimal ) Returns Hex output of floating point number. %b Any type \u201ctrue\u201d if non-null, \u201cfalse\u201d if null %c character Unicode character %d integer (incl. byte, short, int, long, bigint) Decimal Integer %e floating point decimal number in scientific notation %f floating point decimal number %g floating point decimal number, possibly in scientific notation depending on the precision and value. %h any type Hex String of value from hashCode() method. %n none Platform-specific line separator. %o integer (incl. byte, short, int, long, bigint) Octal number %s any type String value %t Date/Time (incl. long, Calendar, Date and TemporalAccessor) %t is the prefix for Date/Time conversions. More formatting flags are needed after this. See Date/Time conversion below. %x integer (incl. byte, short, int, long, bigint) Hex string.","title":"Format Specifiers"},{"location":"java/format_specifiers.html#java-format-specifiers","text":"Format Specifier Data Type Output %a floating point (except BigDecimal ) Returns Hex output of floating point number. %b Any type \u201ctrue\u201d if non-null, \u201cfalse\u201d if null %c character Unicode character %d integer (incl. byte, short, int, long, bigint) Decimal Integer %e floating point decimal number in scientific notation %f floating point decimal number %g floating point decimal number, possibly in scientific notation depending on the precision and value. %h any type Hex String of value from hashCode() method. %n none Platform-specific line separator. %o integer (incl. byte, short, int, long, bigint) Octal number %s any type String value %t Date/Time (incl. long, Calendar, Date and TemporalAccessor) %t is the prefix for Date/Time conversions. More formatting flags are needed after this. See Date/Time conversion below. %x integer (incl. byte, short, int, long, bigint) Hex string.","title":"Java Format Specifiers"},{"location":"java/operators.html","text":"Java Operators \u00b6 Arithmetic Operators \u00b6 Operator Name Description Example + Addition Adds together two values x + y - Subtraction Subtracts one value from another x - y * Multiplication Multiplies two values x * y / Division Divides one value by another x / y % Modulus Returns the division remainder x % y ++ Increment Increases the value of a variable by 1 ++x \u2013 Decrement Decreases the value of a variable by 1 \u2013x Assignment Operators \u00b6 Operator Example Same As = x = 5 x = 5 += x += 3 x = x + 3 -= x -= 3 x = x - 3 *= x *= 3 x = x * 3 /= x /= 3 x = x / 3 %= x %= 3 x = x % 3 &= x &= 3 x = x & 3 = x ^= x ^= 3 x = x ^ 3 >>= x >>= 3 x = x >> 3 <<= x <<= 3 x = x << 3 Comparison Operators \u00b6 Operator Name Example == Equal to x == y != Not equal x != y > Greater than x > y < Less than x < y >= Greater than or equal to x >= y <= Less than or equal to x <= y Logical Operators \u00b6 Operator Name Description Example && Logical and Returns true if both statements are true x < 5 && x < 10 Logical or ! Logical not Reverse the result, returns false if the result is true !(x < 5 && x < 10)","title":"Operators"},{"location":"java/operators.html#java-operators","text":"","title":"Java Operators"},{"location":"java/operators.html#arithmetic-operators","text":"Operator Name Description Example + Addition Adds together two values x + y - Subtraction Subtracts one value from another x - y * Multiplication Multiplies two values x * y / Division Divides one value by another x / y % Modulus Returns the division remainder x % y ++ Increment Increases the value of a variable by 1 ++x \u2013 Decrement Decreases the value of a variable by 1 \u2013x","title":"Arithmetic Operators"},{"location":"java/operators.html#assignment-operators","text":"Operator Example Same As = x = 5 x = 5 += x += 3 x = x + 3 -= x -= 3 x = x - 3 *= x *= 3 x = x * 3 /= x /= 3 x = x / 3 %= x %= 3 x = x % 3 &= x &= 3 x = x & 3 = x ^= x ^= 3 x = x ^ 3 >>= x >>= 3 x = x >> 3 <<= x <<= 3 x = x << 3","title":"Assignment Operators"},{"location":"java/operators.html#comparison-operators","text":"Operator Name Example == Equal to x == y != Not equal x != y > Greater than x > y < Less than x < y >= Greater than or equal to x >= y <= Less than or equal to x <= y","title":"Comparison Operators"},{"location":"java/operators.html#logical-operators","text":"Operator Name Description Example && Logical and Returns true if both statements are true x < 5 && x < 10 Logical or ! Logical not Reverse the result, returns false if the result is true !(x < 5 && x < 10)","title":"Logical Operators"},{"location":"tomcat/install.html","text":"Installing Tomcat on MacOS \u00b6 Prerequisite \u00b6 Tomcat 10 requires Java version 8 or later and since OS X 10.7 Java is not (pre-)installed anymore. 1 java --version Once java is installed add the JAVA_HOME variable to your shell\u2019s startup profile 1 export JAVA_HOME=<Path to Java Home Dir> Install Tomcat \u00b6 Download latest .tar.gz Core binary from Tomcat Download Page Unarchive ~/Downloads/apache-tomcat-10.0.23.tar.gz 1 2 cd ~/Downloads/ tar -xzf ~/Downloads/apache-tomcat-10.0.23.tar.gz Open the Terminal app to move the unarchived distribution to /usr/local like so: 1 2 sudo mkdir -p /usr/local sudo mv ~/Downloads/apache-tomcat-10.0.23 /usr/local To make it easy to replace this release with future releases, we are going to create a symbolic link that we are going to use when referring to Tomcat (after removing the old link, you might have from installing a previous version): 1 2 sudo rm -f /Library/Tomcat sudo ln -s /usr/local/apache-tomcat-10.0.23 /Library/Tomcat Change ownership of the /usr/local/apache-tomcat-10.0.23 folder hierarchy: 1 sudo chown -R <your_username> /usr/local/apache-tomcat-10.0.23 Make all scripts in Tomcat\u2019s ./bin folder executable: 1 sudo chmod +x /usr/local/apache-tomcat-10.0.23/bin/*.sh Running Tomcat \u00b6 Starting Tomcat by executing the provided scripts, like so: 1 /Library/Tomcat/bin/startup.sh Stopping Tomcat by executing the provided scripts, like so: 1 /Library/Tomcat/bin/shutdown.sh","title":"Install"},{"location":"tomcat/install.html#installing-tomcat-on-macos","text":"","title":"Installing Tomcat on MacOS"},{"location":"tomcat/install.html#prerequisite","text":"Tomcat 10 requires Java version 8 or later and since OS X 10.7 Java is not (pre-)installed anymore. 1 java --version Once java is installed add the JAVA_HOME variable to your shell\u2019s startup profile 1 export JAVA_HOME=<Path to Java Home Dir>","title":"Prerequisite"},{"location":"tomcat/install.html#install-tomcat","text":"Download latest .tar.gz Core binary from Tomcat Download Page Unarchive ~/Downloads/apache-tomcat-10.0.23.tar.gz 1 2 cd ~/Downloads/ tar -xzf ~/Downloads/apache-tomcat-10.0.23.tar.gz Open the Terminal app to move the unarchived distribution to /usr/local like so: 1 2 sudo mkdir -p /usr/local sudo mv ~/Downloads/apache-tomcat-10.0.23 /usr/local To make it easy to replace this release with future releases, we are going to create a symbolic link that we are going to use when referring to Tomcat (after removing the old link, you might have from installing a previous version): 1 2 sudo rm -f /Library/Tomcat sudo ln -s /usr/local/apache-tomcat-10.0.23 /Library/Tomcat Change ownership of the /usr/local/apache-tomcat-10.0.23 folder hierarchy: 1 sudo chown -R <your_username> /usr/local/apache-tomcat-10.0.23 Make all scripts in Tomcat\u2019s ./bin folder executable: 1 sudo chmod +x /usr/local/apache-tomcat-10.0.23/bin/*.sh","title":"Install Tomcat"},{"location":"tomcat/install.html#running-tomcat","text":"Starting Tomcat by executing the provided scripts, like so: 1 /Library/Tomcat/bin/startup.sh Stopping Tomcat by executing the provided scripts, like so: 1 /Library/Tomcat/bin/shutdown.sh","title":"Running Tomcat"},{"location":"tux/imagemagick.html","text":"How to Batch Crop Images With Imagemagick \u00b6 Crop a Single Image \u00b6 We\u2019ll start by looking at how to crop a single image using Imagemagick. Open a command window in the folder containing the image(s) you want to crop. Then open one of the images in Gimp or Photoshop to determine the x_size, y_size, x_offset, and y_offset as depicted Finally use convert to test 1 image and confirm your crop settings 1 2 3 convert -crop x_sizexy_size+x_offset+y_offset inputfile outputfile convert -crop 1000x1000+38+278 Image.jpg CroppedImage.jpg Batch Crop \u00b6 Note Now we could just loop over the images and crop, but we won\u2019t thanks to Imagemagick\u2019s batch processor mogrify . The command to crop a folder of images is very similar to cropping just 1. First make a new folder called cropped to output cropped images to. Next run the command as follows: 1 mogrify -crop 1000x1000+38+278 -path ./cropped *.jpg That\u2019s it, you\u2019ve batch cropped your images.","title":"ImageMagick"},{"location":"tux/imagemagick.html#how-to-batch-crop-images-with-imagemagick","text":"","title":"How to Batch Crop Images With Imagemagick"},{"location":"tux/imagemagick.html#crop-a-single-image","text":"We\u2019ll start by looking at how to crop a single image using Imagemagick. Open a command window in the folder containing the image(s) you want to crop. Then open one of the images in Gimp or Photoshop to determine the x_size, y_size, x_offset, and y_offset as depicted Finally use convert to test 1 image and confirm your crop settings 1 2 3 convert -crop x_sizexy_size+x_offset+y_offset inputfile outputfile convert -crop 1000x1000+38+278 Image.jpg CroppedImage.jpg","title":"Crop a Single Image"},{"location":"tux/imagemagick.html#batch-crop","text":"Note Now we could just loop over the images and crop, but we won\u2019t thanks to Imagemagick\u2019s batch processor mogrify . The command to crop a folder of images is very similar to cropping just 1. First make a new folder called cropped to output cropped images to. Next run the command as follows: 1 mogrify -crop 1000x1000+38+278 -path ./cropped *.jpg That\u2019s it, you\u2019ve batch cropped your images.","title":"Batch Crop"},{"location":"tux/os_command_map.html","text":"Windows VS Linux Command Cheatsheet \u00b6 Cmd Window Mapping \u00b6 Windows Linux Description dir ls -l Directory listing ren mv Rename a file copy cp Copying a file move mv Moving a file cls clear Clear Screen del rm Delete file fc diff Compare contents of files find grep Search for a string in a file command /? man command Display the manual/help details of the command chdir pwd Returns your current directory location time date Displays the time cd cd Change the current directory md mkdir To create a new directory/folder echo echo To print something on the screen edit vim(depends on editor) To write in to files. exit exit To leave the terminal/command window. format mke2fs or mformat To format a drive/partition. free mem To display free space. rmdir rm -rf/rmdir To delete a directory. taskkill kill To kill a task. tasklist ps x To list running tasks. set var=value export var=value To set environment variables. attrib chown/chmod To change file permissions. tracert traceroute To print the route packets trace to network host. at cron daemon to execute scheduled commands. type cat To print contents of a file. ping ping To send ICMP ECHO_REQUEST to network hosts. nslookup nslookup To query Internet name servers interactively. chdisk du -s For disk usage. tree ls -R To list directory recursively. Powershell Command Mapping \u00b6 Windows Powershell Linux Description Get-Content file3.txt -Tail \u201c3\u201d Get-Content file3.txt | Select-Object -last 3 cat file3.txt | tail -3 Extract last 3 lines of file","title":"Command Cheatsheet"},{"location":"tux/os_command_map.html#windows-vs-linux-command-cheatsheet","text":"","title":"Windows VS Linux Command Cheatsheet"},{"location":"tux/os_command_map.html#cmd-window-mapping","text":"Windows Linux Description dir ls -l Directory listing ren mv Rename a file copy cp Copying a file move mv Moving a file cls clear Clear Screen del rm Delete file fc diff Compare contents of files find grep Search for a string in a file command /? man command Display the manual/help details of the command chdir pwd Returns your current directory location time date Displays the time cd cd Change the current directory md mkdir To create a new directory/folder echo echo To print something on the screen edit vim(depends on editor) To write in to files. exit exit To leave the terminal/command window. format mke2fs or mformat To format a drive/partition. free mem To display free space. rmdir rm -rf/rmdir To delete a directory. taskkill kill To kill a task. tasklist ps x To list running tasks. set var=value export var=value To set environment variables. attrib chown/chmod To change file permissions. tracert traceroute To print the route packets trace to network host. at cron daemon to execute scheduled commands. type cat To print contents of a file. ping ping To send ICMP ECHO_REQUEST to network hosts. nslookup nslookup To query Internet name servers interactively. chdisk du -s For disk usage. tree ls -R To list directory recursively.","title":"Cmd Window Mapping"},{"location":"tux/os_command_map.html#powershell-command-mapping","text":"Windows Powershell Linux Description Get-Content file3.txt -Tail \u201c3\u201d Get-Content file3.txt | Select-Object -last 3 cat file3.txt | tail -3 Extract last 3 lines of file","title":"Powershell Command Mapping"},{"location":"tux/pandoc.html","text":"Pandoc Awesomeness \u00b6 Convert HTML to Markdown \u00b6 1 2 3 pandoc -f html -t markdown myfile.html >myfile.md # OR pandoc -f html -t 'markdown_strict+pipe_tables' myfile.html >myfile.md Warning The above commands will only convert simple tables to proper Markdown. Multi-Line or Block tables will just be rendered as HTML, which is still valid in MkDocs!","title":"Pandoc"},{"location":"tux/pandoc.html#pandoc-awesomeness","text":"","title":"Pandoc Awesomeness"},{"location":"tux/pandoc.html#convert-html-to-markdown","text":"1 2 3 pandoc -f html -t markdown myfile.html >myfile.md # OR pandoc -f html -t 'markdown_strict+pipe_tables' myfile.html >myfile.md Warning The above commands will only convert simple tables to proper Markdown. Multi-Line or Block tables will just be rendered as HTML, which is still valid in MkDocs!","title":"Convert HTML to Markdown"},{"location":"tux/parallel.html","text":"Example of Parallels Nmap \u00b6 Info Here I explore the use of several commands to speed up the nmap scanning process. Curl is used to pull down our scanning target, jq is used to parse and partially format the json from the downloaded ip list, awk is then used to generate multiple nmap commands, and finally parallel is used to execute them in parallel. So let\u2019s get started and break this down. The Command \u00b6 1 curl https://ip-ranges.amazonaws.com/ip-ranges.json | jq -r '.prefixes[] | [.region, .ip_prefix, .ip_prefix]|@tsv' | awk -F'\\t' '{gsub(\"/\",\"-\",$2);print(\"nmap -sT -T5 -Pn -p- -oG logs/\"$1\"_\"$2\".gnmap \" $3)}' | parallel --jobs 32 Curl \u00b6 1 curl https://ip-ranges.amazonaws.com/ip-ranges.json Curl makes a GET request to the Amazon URL holding a json object of Amazon AWS IPs The json output looks something like below: 1 2 3 4 5 6 7 8 9 10 11 12 { \"syncToken\": \"1660666986\", \"createDate\": \"2022-08-16-16-23-06\", \"prefixes\": [ { \"ip_prefix\": \"3.5.140.0/22\", \"region\": \"ap-northeast-2\", \"service\": \"AMAZON\", \"network_border_group\": \"ap-northeast-2\" }, ... } Jq \u00b6 1 | jq -r '.prefixes[] | [.region, .ip_prefix, .ip_prefix]|@tsv' jq\u2019s -r option tells the command to output in raw format (i.e. no extra quotes or formatting) .prefixes[] grabs all the elements in the prefixes array as seen in the output. | cycles over the elements in the array. [.region, .ip_prefix, .ip_prefix] captures the region and ip_prefix commands into a new 3 element array |@tsv cycles over the new array elements and outputs them as -r a raw tab separated line. The output will look something like below: 1 2 3 4 5 ap-northeast-2 3.5.140.0/22 3.5.140.0/22 ap-southeast-4 13.34.37.64/27 13.34.37.64/27 il-central-1 13.34.65.64/27 13.34.65.64/27 us-east-1 13.34.66.0/27 13.34.66.0/27 me-south-1 13.34.78.160/27 13.34.78.160/27 Awk \u00b6 1 | awk -F'\\t' '{gsub(\"/\",\"-\",$2);print(\"nmap -sT -T5 -Pn -p- -oG logs/\"$1\"_\"$2\".gnmap \" $3)}' awk -F'\\t' splits the line by line input into 3 variables $1 will equal region $2 will equal the first ip_prefix, and $3 will equal the second ip_prefix column gsub(\"/\",\"-\",$2); this replaces any subnet slashes in the first ip_prefix column with a - print(\"nmap -sT -T5 -Pn -p- -oG logs/\"$1\"_\"$2\".gnmap \" $3) this prints out the nmap command but substitutes $1 (i.e. the region) and $2 (i.e. the gsub-ed ip_prefix) into the option building the log file. $3 remains the unmodified ip_prefix to scan, so the full output will look something like below: 1 2 3 4 5 nmap -sT -T5 -Pn -p- -oG logs/ap-northeast-2_3.5.140.0-22.gnmap 3.5.140.0/22 nmap -sT -T5 -Pn -p- -oG logs/ap-southeast-4_13.34.37.64-27.gnmap 13.34.37.64/27 nmap -sT -T5 -Pn -p- -oG logs/il-central-1_13.34.65.64-27.gnmap 13.34.65.64/27 nmap -sT -T5 -Pn -p- -oG logs/us-east-1_13.34.66.0-27.gnmap 13.34.66.0/27 nmap -sT -T5 -Pn -p- -oG logs/me-south-1_13.34.78.160-27.gnmap 13.34.78.160/27 Parallel \u00b6 1 | parallel --jobs 32 This command takes the numerous lines of nmap jobs generated above and runs 32 of them in parallel. In this way you have increase the speed at which nmap scans to a point that will likely overheat your PC :-) Warning Make sure you set up a logs directory from the folder you run this so you don\u2019t get a file system error. 1 mkdir logs Also, make sure your system can killall in case things get out of hand: 1 killall nmap","title":"Parallel"},{"location":"tux/parallel.html#example-of-parallels-nmap","text":"Info Here I explore the use of several commands to speed up the nmap scanning process. Curl is used to pull down our scanning target, jq is used to parse and partially format the json from the downloaded ip list, awk is then used to generate multiple nmap commands, and finally parallel is used to execute them in parallel. So let\u2019s get started and break this down.","title":"Example of Parallels Nmap"},{"location":"tux/parallel.html#the-command","text":"1 curl https://ip-ranges.amazonaws.com/ip-ranges.json | jq -r '.prefixes[] | [.region, .ip_prefix, .ip_prefix]|@tsv' | awk -F'\\t' '{gsub(\"/\",\"-\",$2);print(\"nmap -sT -T5 -Pn -p- -oG logs/\"$1\"_\"$2\".gnmap \" $3)}' | parallel --jobs 32","title":"The Command"},{"location":"tux/parallel.html#curl","text":"1 curl https://ip-ranges.amazonaws.com/ip-ranges.json Curl makes a GET request to the Amazon URL holding a json object of Amazon AWS IPs The json output looks something like below: 1 2 3 4 5 6 7 8 9 10 11 12 { \"syncToken\": \"1660666986\", \"createDate\": \"2022-08-16-16-23-06\", \"prefixes\": [ { \"ip_prefix\": \"3.5.140.0/22\", \"region\": \"ap-northeast-2\", \"service\": \"AMAZON\", \"network_border_group\": \"ap-northeast-2\" }, ... }","title":"Curl"},{"location":"tux/parallel.html#jq","text":"1 | jq -r '.prefixes[] | [.region, .ip_prefix, .ip_prefix]|@tsv' jq\u2019s -r option tells the command to output in raw format (i.e. no extra quotes or formatting) .prefixes[] grabs all the elements in the prefixes array as seen in the output. | cycles over the elements in the array. [.region, .ip_prefix, .ip_prefix] captures the region and ip_prefix commands into a new 3 element array |@tsv cycles over the new array elements and outputs them as -r a raw tab separated line. The output will look something like below: 1 2 3 4 5 ap-northeast-2 3.5.140.0/22 3.5.140.0/22 ap-southeast-4 13.34.37.64/27 13.34.37.64/27 il-central-1 13.34.65.64/27 13.34.65.64/27 us-east-1 13.34.66.0/27 13.34.66.0/27 me-south-1 13.34.78.160/27 13.34.78.160/27","title":"Jq"},{"location":"tux/parallel.html#awk","text":"1 | awk -F'\\t' '{gsub(\"/\",\"-\",$2);print(\"nmap -sT -T5 -Pn -p- -oG logs/\"$1\"_\"$2\".gnmap \" $3)}' awk -F'\\t' splits the line by line input into 3 variables $1 will equal region $2 will equal the first ip_prefix, and $3 will equal the second ip_prefix column gsub(\"/\",\"-\",$2); this replaces any subnet slashes in the first ip_prefix column with a - print(\"nmap -sT -T5 -Pn -p- -oG logs/\"$1\"_\"$2\".gnmap \" $3) this prints out the nmap command but substitutes $1 (i.e. the region) and $2 (i.e. the gsub-ed ip_prefix) into the option building the log file. $3 remains the unmodified ip_prefix to scan, so the full output will look something like below: 1 2 3 4 5 nmap -sT -T5 -Pn -p- -oG logs/ap-northeast-2_3.5.140.0-22.gnmap 3.5.140.0/22 nmap -sT -T5 -Pn -p- -oG logs/ap-southeast-4_13.34.37.64-27.gnmap 13.34.37.64/27 nmap -sT -T5 -Pn -p- -oG logs/il-central-1_13.34.65.64-27.gnmap 13.34.65.64/27 nmap -sT -T5 -Pn -p- -oG logs/us-east-1_13.34.66.0-27.gnmap 13.34.66.0/27 nmap -sT -T5 -Pn -p- -oG logs/me-south-1_13.34.78.160-27.gnmap 13.34.78.160/27","title":"Awk"},{"location":"tux/parallel.html#parallel","text":"1 | parallel --jobs 32 This command takes the numerous lines of nmap jobs generated above and runs 32 of them in parallel. In this way you have increase the speed at which nmap scans to a point that will likely overheat your PC :-) Warning Make sure you set up a logs directory from the folder you run this so you don\u2019t get a file system error. 1 mkdir logs Also, make sure your system can killall in case things get out of hand: 1 killall nmap","title":"Parallel"},{"location":"tux/tesseract.html","text":"Tesseract \u00b6 Extract Text from an Image \u00b6 Cd to the folder with the image/screenshots you wish to extract text from. Run tesseract on an image to test, here we extract the text of a Screenshot to a file called test.txt using a resolution of 150 dpi 1 tesseract Screenshot_2022-08-16-21-27-12-14_1ce46c7c043b13bd654694576893861e.jpg test --dpi 150 Batch Extract Text \u00b6 If Extracting Text from an Image was successful, you\u2019re ready to batch process it. First cd to the folder with the images/screenshots you wish to extract text from Now run the following command 1 2 3 4 5 6 mkdir text for f in `ls *.jpg` do BN=$(echo ${f%.*}) tesseract $f ./text/${BN} --dpi 150 done The above command loops over all jpegs in the current folder, removes the .jpg extension and stores that to BN, then uses the tesseract command to process the image and output it as ${BN}.txt with a resolution of 150dpi.","title":"Tesseract"},{"location":"tux/tesseract.html#tesseract","text":"","title":"Tesseract"},{"location":"tux/tesseract.html#extract-text-from-an-image","text":"Cd to the folder with the image/screenshots you wish to extract text from. Run tesseract on an image to test, here we extract the text of a Screenshot to a file called test.txt using a resolution of 150 dpi 1 tesseract Screenshot_2022-08-16-21-27-12-14_1ce46c7c043b13bd654694576893861e.jpg test --dpi 150","title":"Extract Text from an Image"},{"location":"tux/tesseract.html#batch-extract-text","text":"If Extracting Text from an Image was successful, you\u2019re ready to batch process it. First cd to the folder with the images/screenshots you wish to extract text from Now run the following command 1 2 3 4 5 6 mkdir text for f in `ls *.jpg` do BN=$(echo ${f%.*}) tesseract $f ./text/${BN} --dpi 150 done The above command loops over all jpegs in the current folder, removes the .jpg extension and stores that to BN, then uses the tesseract command to process the image and output it as ${BN}.txt with a resolution of 150dpi.","title":"Batch Extract Text"},{"location":"vim/cheat-sheet.html","text":"Vim Cheatsheet \u00b6 Comment \u00b6 Go the vim way. Start by only using hjkl to move the cursor. Help \u00b6 1 www.vimdoc.sourceforge.net Starting Up \u00b6 1 2 3 vim {filename} vim {filename} +n Open {filename} and position the cursor on line n. vim *.txt Modes \u00b6 Normal Insert Insert-Normal (Use command, then return to Insert mode.) Operator-Pending Note Below, the dash \u201c-\u201d between buttons signals holding the first button, then pressing the second. Getting Help \u00b6 1 2 vimtutor :help Fundamentals \u00b6 1 2 3 4 5 6 7 8 . Repeat the last command. (Includes text insertion in insert mode.) i Enter insert mode. I Enter insert mode at the beginning of the line. a Enter insert mode one character beyond the cursor. A Enter insert mode at the end of the line. Esc Exit insert mode. s Delete the character under the cursor and enter insert mode. J Moving through text \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 h, j, k, l Move right, down, up, or right (real lines). gj, gk Move down or up display lines. 0, g0 Move to the first character of the real (, display) line. ^, g^ Move to the first non-blank character of the real (, display) line. $, g$ Move to the end of the real (, display) line. w, b Move to the front (, back) of the next (or current/previous) word. e, ge Move to the back of the current/next word (, previous word). W, B Move to the front (, back) of the next (or current/previous) WORD. E, gE Move to the back of the current/next WORD (, previous WORD). :jump Inspect the contents of the jump list (for <ctrl-o>, <ctrl-i>). <ctrl-o> Move back through the breadcrumbs. Will jump through buffers. <ctrl-i> Move forward through the breadcrumbs. <ctrl-b>, <ctrl-u> Page Up. <ctrl-f>, <ctrl-d> Page Down. <number>| Move to column <number>. Jumps (Moving through text and files\u2026) \u00b6 Jumps: Command Effect [count]G Jump to line number. //patern /?pattern /n/N Jump to the next (previous) occurrence of pattern. % Jump from matched brace (),{},[] to another (front-back). (/) Jump to start of previous/next sentence. {/} Jump to start of previous/next paragraph. H/M/L Jump to top/middle/bottom of screen. gf Jump to file name under the cursor. Jump to the definition of keyword under the cursor. (What!?) \u2018{mark}/`{mark} Jump to a mark (more on this elsewhere\u2026) Modify Jump to File \u00b6 1 :set suffixesadd+=.rb Etc. Add the specified extension and vim will try to use them with gf. Changes (Moving through them\u2026) \u00b6 1 2 3 4 5 :changes List the changes. g; / g, Traverse the change list (back / forwards). `. Jumps to the location of the last change (see more under Automatic Marks). `^ Jumps to the last insertion. gi Move to last insertion point and enter insert mode. Searching \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 /{pattern} Search forward in the buffer for {pattern}. ?{pattern} Search backwards in the buffer for pattern. n Repeat the search going \"forward\" (in the expected direction).. N Repeat the search with direction reversed. /<cr> Jump forward to the next match of pattern (don't preserve direction or offset). ?<cr> Jump backward to the next match of pattern (don't preserve direction or offset). f<char> Search for the next instance of character <char>. ; Repeat the last search \"f\" performed. , Reverse the last character search command. F<char> Search backwards through the text for the next instance of <char>. t<char> Search forward to the next character before the next occurrence of <char>. T<char> Search backward to the character after the previous occurrence of <char>. * Place the cursor on the word you want to search for (repeats of). :set ignorecase Turn on case-insensitive search. \\c Ignore case in *this* search (regardless of set setting). (Put anywhere in search term.) \\C Use case in *this* search(regardless of set setting). (Put anywhere in search term.) :set smartcase Ignore case in the search by default unless we include a capital letter in the search. /#\\([0-9a-fA-F]\\{6}\\) Search for six consecutive hexadecimal numbers preceeded by a # sign. (Optionally also escape the closing }). /\\v Active the \"very magic search switch.\" (All characters assume special meaning except _, a-zA-Z0-9. /\\v#([0-9a-fA-F]{6}) Search for six consecutive hexadecimal numbers preceeded by a # sign. /\\v#(\\x{6}|\\x{3}) Search for six or three consecutive hexadecimal numbers (w/ hex character class) preceeded by a # sign. /\\V Activate the \"very nonmagic\" search switch. (All characters except \\ lose special meaning - literal search.) ?\\V Activate the \"very nonmagic\" search switch. (All characters except \\ and ? lose special meaning - literal search.) /\\v<word> Use <> to mark the boundaries of a word (e.g., search for \"the\" and not \"these\", etc.). :nohlsearch Unlike :set nohlsearch or :set hls!, this turns of highlighting until the next search is performed. (:noh) <ctrl-r> <ctrl-w> Autocomplete search field using remainder of highlighted selection (when :set incsearch is active). /{pattern}/e Position the cursor at the end of the pattern when searching (default is the beginning). //e Anchor the next search of a previous pattern to the end (no need to have /e'd initially). Can be used as a motion. <ctrl-r> / Paste the contents of the last search register in place (insert mode, command line mode). :let @/='Pragmatic Vim' Set the last search register to 'Pragmatic Vim'. Substitution \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 :s/{pat1}/{pat2}/ Substitute the first instance of {pat1} with {pat2} on the current line. :s/{pat1}/{pat2}/g Substitute all instances of {pat1} with {pat2} in the current line. :[range]s/{pat1}/{pat2}/g Substitute all instances of {pat1} with {pat2} over the specifiec range of lines. :33,34s/aa/ab/gc Replace aa with ab on lines 33 and 34. g& Repeat the last substitution over the entire file. :%s/{pat1}/{pat2}/gc Search and replace pat1 with pat2 and prompt each time over the whole file. :%s/{pat1}/<ctrl-{register}>/ Search and replace pat1 with the contents of register {register}. :%s/{pat1}/\\=@{register}/ Use the contents of register {register}, passing the contents by value. (e.g. @0 for the yank register, @\" for default) :%s//{string}/gc Search and replace using the last match. :%s///gn Count the number of matches of the last search pattern used, don't do anything (n suppression). :&& Replay the last substitution over the current line. :%&& Repeat the last substitution over the entire file (longer g&). :'<,'>&& Replay the last substitution over the visually selected range (get '<,'> automatically with : from visual mode). Special Characters in Substitution Command Replacement Strings \u00b6 1 2 3 4 5 6 7 8 9 10 11 Symbol Represents ------ ---------- \\r Carriage return. \\t Tab. \\\\ Backslash. \\1 Insert the first submatch. \\2 Insert the second submatch (and so on, up to \\9). \\0 Insert the entire matched pattern. & Insert the entire matched pattern. ~ Use {string} from previous substitute. \\={Vim script} Evaluate {Vim script} expression, use the reult as the replacement {string}. Editing in Replace Mode \u00b6 1 2 3 4 5 6 R Enter replace mode. <insert> Also may use the insert key to enter replace mode (if present). gR Virtual replace mode (treats tab stops as though they were a single space). r{char} Replace a single character. gr{char} Replace a single character in virtual mode. Vr- Select a line and replace all the characters with \"-\" Mark Text \u00b6 1 2 3 m{a-zA-Z} Lower case letters mark only the buffer, uppercase are global (across all buffers). '{mark} Jump to the line where the mark was set. `{mark} Jump to the exact point the mark was set. Automatic Marks \u00b6 1 2 3 4 5 6 7 8 9 Keystrokes Buffer Positions ---------- ---------------- '' Position before the last jump within current file. '. Location of last change (beginning of line). '^ Location of last insertion (beginning of line). '[ Start of last change or yank. '] End of last change or yank. '< Start of last visual selection. '> End of last visual selection. Repeatable and Reversible Actions \u00b6 1 2 3 4 5 6 7 8 9 Intent Act Repeat Reverse ------ --- ------ ------- Make a change. Edit . u Scan line for next. f{char}/t{char} ; , Scan line for previous. F{char}/T{char} ; , Scan document for next. /{pattern}<CR> n N Scan document for previous. ?{pattern}<CR> n N Perform substituion. :s/target/replacement & u Execute a sequence of changes. qx{changes}q @x u Run Commands in the Shell \u00b6 1 2 3 4 5 6 7 8 9 10 11 :! Access the shell. :!ls Run ls in the shell. (Note, :ls shows the contents of the buffer list.) % On vim's command line, this is short hand for the current filename. :!ruby % Runs the current (ruby) file being edited. :shell Start an interactive shell session inside vim. (Use \"exit\" to return to vim.) :read !{cmd} Put the output of cmd into the current buffer. :write !{cmd} Use the current buffer as input for cmd. :write {file} Write the current buffer into {file}. :write! {file} Write the current buffer into {file} and overwrite the contents. Watch the ! placement! :[range]!{cmd} Pass the lines in range to cmd and replace the range with the output of cmd. :!mkdir -p %:h Make all the directories needed to write a file into its current path. Working with Files \u00b6 1 2 3 4 5 6 7 8 9 :cd {path} Change vim's working directory. :pwd Show vim's present working directory. :edit {filename} Open a file into the buffer for editing. :edit! Re-read the current file into the buffer and discard exisitng changes. (:e!) :edit %<tab> % is a short-hand for the active buffer filepath. :edit %:h<tab> The :h modifier removes the filename while preserving the rest of the path. :find {file} Open a file by name without a fully qualified path. (<tab> completion is available.) :set path+={dir}/** Add a directory to the vim \"$PATH\". (** matches all subdirectories below {dir}) :set path? Inspect the value of the path. Write Changes from a Buffer to a File \u00b6 1 2 3 4 :write ZZ will also write and close. :update :saveas :w !sudo tee % > /dev/null Write the current buffer as the super-user. (% expands to the path of the current buffer.) Manipulate File Buffers \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 :ls List the files. :bnext Switch to the next buffer. (:bn) :bprev Switch to the previous buffer. (:bp) :bfirst Move to the first buffer. (:bf) :blast Move to the last buffer. (:bl) :buffer N Move to buffer N (:ls shows the buffer numbers). (:buf N) :buffer {buffname} Move to the buffer with name {buffname} (shown by :ls, no need for \" characters). <ctrl-^> Toggle between the current and alternate buffers. :bufdo Run an Ex command on all the buffers. :bdelete N1 N2 Delete buffers numbered N1 and N2. :N, M bdelete Delete buffers numbered N through M (this has no effect on the associated file). :5,10bd e.g, Delete buffers numbered 5 through 10. :args List of files used to launch vim. (well, more than that actually...) :args {arglist} Populate the arguments list. (e.g., vim, followed by :args {file1} {file2}). Accepts wildcards. :args **/*.* * is a 0 or more character wildcard. So is **, but it can recurse downward into directories below. :args **/*.js **/*.css Just get all the JavaScript and CSS, etc. :args `cat .chapters` Use shell expansion inside the backticks. :next Move through the argument list. :prev Move through the argument list. :argdo Execute the same command on every buffer in the set. :argdo %s//{pat1}/ge Substitute the last search match with {pat1} in all of \"argslist\" across the whole files, suppressing error messages. :argdo update Save every file, but only if it has been changed. Managing Hidden Files \u00b6 1 2 3 4 5 6 7 :ls 1 %a + \"a.txt\" line 17 # <- \"+\" <- Modified. 2 \"b.txt\" line 0 :bn! :ls 1 #h + \"a.txt\" line 17 # <- \"h\" <- Hidden file. 2 %a \"b.txt\" line 1 Working with the Filesystem \u00b6 1 2 3 4 5 6 7 8 9 vim . Open a filesystem browser in the current directory. k,j <cr> Navigate vim's representation of the filesystem, open the selected file. :edit {path - directory name} Open a filesystem browser in the specified directory. (always recall \":edit .\" or \":e.\") :edit %:h Open a filesystem browser in the directory of the current file. :Explore netrw-% Create new files. (% in netrw, etc.) netrw-d Create new directories. netrw-rename Rename a file. netrw-del Delete a file. Split Windows \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <ctrl-w> s Split windows horizontally. <ctrl-w> v Split windows vertically. <ctrl-w> {s/v} :edit {filename} Create a split and edit. :split {filename} Combo - create a split and edit. (Horizontal.) (:sp {file}) :vsplit {filename} Combo - create a split and edit. (Vertical.) (:vsp {file}) <ctrl-w> w Cycle focus between open windows. Also, <ctrl-w> <ctrl-w> (ctrl-\"ww\"). <ctrl-w> h shift focus to the left. <ctrl-w> j shift focus below. <ctrl-w> k shift focus above. <ctrl-w> l shift focus to the right. :close Close the active window. (:cl), Also <ctrl-w> c :only Keep only the active window. (:on), Also <ctrl-w> o <ctrl-w> = Equalize width and height of all windows. <ctrl-w> _ Maximize height of active window. <ctrl-w> | Maximize width of active window. [N]<ctrl-w> Set active window height to N rows. [N]<ctrl-|> Set active window width to N columns. [ Look up more details on window-moving in the help and check Vim-casts.org ] Tabs \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 :lcd {path} Set up the working directory locally for the current window. :windo lcd {path} Set up the working directory locally all windows in a tab. :tabedit {filename} Open a tab with file {filename}. (:tabe {filename}) <ctrl-w> T Move the current window into its own tab. :tabclose Close the current tab and all of its windows. (:tabc) :tabonly Keep only the current tab and all of its windows. [N]gt Go to tab N. :tabnext {N} Switch to tab N. (:tabn {N}) gt Next tab. :tabnext Next tab. (:tabn) gT Previous tab. :tabprevious Previous tab. (:tabp) Switch to Normal Mode from Insert Mode \u00b6 1 2 <esc> <ctrl-[> Switch to Insert-Normal Mode from Insert Mode \u00b6 1 <ctrl-o> Switch to Visual Mode \u00b6 1 2 3 4 5 v Enable character-wise visual mode. (And return to normal mode - toggle.) <ctrl-g> Enter Select Mode from visual mode. V Enter line-wise visual mode. <ctrl-v> Enter block-wise visual mode. o Go to the other end of highlighted text. Selection in Visual Mode \u00b6 1 2 gv Reselect the last visual selection. vit Select inside a tag (e.g., (cursor here->)<a>select me</a>) on a line. Using a Visual Operator \u00b6 1 2 vU Make the selection uppercase. vu Make the selection lowercase. Delimited Text Objects (Begin and end with matching symbols. \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 v<text object> Enter visual mode and use the following to make a selction of... Remember, text objects can be {motion}s. a) or ab A pair of (parentheses). i) or ib Inside of (parentheses). a} or aB A pair of {braces}. i} or iB Inside of {braces}. a] A pair of [brackets]. i] Inside of [brackets]. a> A pair of <angle brackets>. i> Inside of <angle brackets>. a' A pair of 'single quotes'. i' Inside of 'single quotes'. a\" A pair of \"double quotes\". i\" Inside a pair of \"double quotes\". at A pair of <xml>tags</xml>. it Inside a of <xml>tags</xml>. Bounded Text Objects (Defined by boundaries.) \u00b6 1 2 3 4 5 6 7 8 9 Remember, text objects can be {motion}s. iw Current word. aw Current word plus one space. iW Current WORD. aW Current WORD plus one space. is Current sentence. as Current sentence plus one space. ip Current paragraph. ap Current paragraph plus one blank line. Command Line Mode \u00b6 1 2 3 4 5 : Enter the Ex Command mode. / Enter the pattern search mode. <ctrl-r> <ctrl-w> Insert the word under the cursor. * /\\<<ctrl-r> <ctrl-w>\\><cr> /<ctrl-r> <ctrl-w> Search for the word under the cursor. Command Line Window \u00b6 1 2 3 4 5 q: Bring up the window with a history of the Ex commands. k, j Scroll through the command line window. <cr> Execute the contents of the current line. q/ Bring up the window with a history of searches. <ctrl-f> Switch from the command line mode to the command line window. Operators \u00b6 1 2 3 > Shift (the line?) right. < Shift (the line?) left. gUit Select text inside a tag and shift it to uppercase (tip 23). Indentation \u00b6 1 2 3 4 5 > Indent the line (or visually selected text). 2> Indent the line twice (3> for three times, etc.). >G Increase indentation from here to the end of the file. =G Autoindet from here to the end of the file. == Indent current line. Editing \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 s Remove the character under the cursor and enter insert mode. c{motion} Remove text and enter insert mode. $, l, w ciw Remove the current word and enter insert mode. u Undo the last change. U Undo all changes to the line. <ctrl-r> Re-do the last undo. daw Delete a word (cursor may be located anywhere within the word). dap Delete a paragraph. d{motion} Delete. (Power move, especially with / search.) ~ Toggle case of the character under the cursor or all visually selected text. g~ Swap case. (requires motion?) gu Make lower case. (requires motion?) guaw = convert a word, guap = paragraph gU Make upper case. (requires motion?) gUaw = CONVERT a word, gUap = paragraph, gUgU converts a line. Deleting (c instead of d to enter insert after the edit). \u00b6 1 2 3 4 5 6 7 8 9 dh / x Delete one character backwards. dl / X Delete one character forwards. db Delete one word backwards. dw Delete one word forwards. dB Delete one non-blank word backwards. dW Delete one non-blank word forwards. d$ / D Delete to the end of the line. d0 Delete to the beginning of the line. 0d$ / dd Delete the line. Editing In Insert Mode \u00b6 1 2 3 4 5 6 7 8 9 <ctrl-h> Delete back one character. <ctrl-w> Delete back one word. <ctrl-u> Delete back to the start of the line. <ctrl-r> N Paste from register N. (Press and hold ctrl-r, then release, then press the number.) <ctrl-r> <ctrl-p> N Smarter paste from register N. <ctrl-v> Code Enter a unicode character (expect 3 digits). <ctrl-v> u{Code} Enter an arbitrary code (e.g., u00bf = \u00bf). <ctrl-v> {nondigit} Enter a nondigit literally (e.g., a literal tab instead of spaces in case exapandtab is active). <ctrl-k> {char1}{char2} Enter a unicode character via digraph, e.g. <ctrl-k> ?I = \u00bf. View a list of digraphs with :digraphs Using the Expression Register \u00b6 1 <ctrl-r> = In insert mode. Copying, Cutting, and Pasting (Yanking, Deleting, and Putting) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Regisers are [a..z] for overwriting and [A..Z] for appending. The system clipboard is \"+ (X11 at least). \"{register} Prefix to specify the register for holding the yank/delete. Defaults to unnamed (\"). :reg Examine the contents of the registers. :reg \"0 Examine the contents of the yank register. (Also shows the contents of \"\" (unnamed).) y{motion} Copy (? ... $, l, w) into the unnamed register. Also copy into the yank register (\"0)! yiw Copy a word. yi[ Copy everything inside the [] braces (cursor should be inside the []). yy Copy a line. yyp Copy a line and put it (immediately below the current line). yt, Copy to the next comma. y$ Copy to the end of the line. p Paste (removed with x, copied with y, for example) after the cursor position. P Paste (removed with x, copied with y, for example) before the cursor position. puP / Pup Paste the other way when you get it wrong... \"\"p Paste from the unnamed register (\"\"p == p). \"ap Paste from register a. \"0p Paste from the yank register (may also be equivalent to the unnamed or another register). xp Cut and paste a character - effectively transpose two characters. diw Cut a word. dd Cut a line. ddp Cut and paste a line (one below the current line) - effectively transpose two lines. v{selection}p Swap the highlighted portion in visual mode with the contents of (the unnamed) register, and vice versa. \"{register}v{sel}p Swap the highlighted portion in visual mode with the contents of the register, and vice versa. <ctrl-r>{register} Insert Mode: Paste from register {register}. (Recall <ctrl-r\"> to get the unnamed!) Useful with Ex commands too! Default Registers \u00b6 1 2 3 4 5 6 \"= Expression Register \"% Name of current file. \"# Name of alternate file. \". Last inserted text. \": Last Ex command. \"/ Last search pattern (can be set explicitly with :let ). Addition \u00b6 1 2 N <ctrl-a> Add N to the next number on the line, e.g. 10 -> 20 N <ctrl-x> Subtract N from the next number on the line, e.g., 30 -> 20 Compound Commands \u00b6 1 2 3 4 5 6 7 A $a C c$ s cl S ^C I ^i o A<CR> # Leverage undo power by finishing lines with {stop} <esc> o O ko Screen Redraw \u00b6 1 2 3 4 zz Redraw the screen with the cursor position in the vertical center of the page. z. Redraw the screen with the cursor position in the vertical center of the page. zt Redraw the screen with the cursor position at the top of the page. <ctrl-l> Clear and redraw the screen. Ex Commands \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <ctrl-d> Offer autocompletion suggestions. Tab to cycle through them. :colorscheme <ctrl-d> Show all the colorscheme options (tab to cycle through). :help ex-cmd-index See the ex-cmd-index for the full list of commands. :{N} Jump to line N. :$ Go to the end of the file. :print Print the line. (Abbreviate with :p) :2,5p Print lines 2 to 5. (.,$p prints from the current line to EOF). :%p Print all the lines in the file. :/{pattern1}/+1,/{pattern2}/-1p Print all lines between, but not including, those matching patterns 1 & 2. :[range]delete[x] Delete specified lines into register x. (e.g., :3d deletes line 3). :[range]yank[x] Yank specified lines into register x. :[line]put[x] Put the text from reigster x after the specified line. :[range]copy{address} Copy the specified lines to below the line specified by {address}. :6copy. Copy line 6 to below the current line. :6t. Copy line 6 to below the current line. ( t == copy ) :t. Duplicate the current line without using a register (yyp uses a register). :[range]move{address} Move the specified lines to below the line specified by {address}. ( abbrev m ) :[range]join Join the specified lines. :[range]normal{commands} Execute normal mode {commands} on each specified line. :[range]substitute/{pattern}/{string}/[flags] Replace {pattern} with {string} on the specified lines. (:[range]s/{pattern}/{string}/[flags]) :%s/{pattern}/{string}/[flags] Do the substitution over the entire file, looking for pattern, etc. :%s/{pattern}/{string}/[flags={g,c,n,&}] Flags: g=global (all in a line), c=confirm, n=no subs, report number, &=reuse flags from last \"s\" :[range]global/{pattern}/[cmd] Execute Ex [cmd] on all specified lines with a {pattern} match. :qall! Quit and discard all unsaved changes in all open buffers. :wall Write all modified buffers to disk. (:wa) :write :wnext Write, followed by \"next.\" :tabnew :split :prev/:next :bprev/:bnext @: Repeat the last Ex command. :normal <cmd> For each selected line, execute the normal mode command <cmd>. (jVG :normal .) :%normal A; Select all modes and run normal \"A;\" (append a semicolon to every line). :%normal i// Comment out every line (.js or .cpp). :delete {register} Cut the current line into {register} :yank {register} Copy the current line into {register} :put {register} Put the line from {register} :edit! Undo all changes (back to last save?). :sort Sort! Global Commands \u00b6 1 2 3 4 5 6 7 8 :[range]global[!]/{pattern}/[cmd] Execute an Ex command on each line that matches a pattern. :[range]global[!]/{pattern}/[range][cmd] Template is expandable... :g/re/p Print a regular expression globally. ^_^ :g/re/d Delete all lines matching a regular expression globally. :[range] vglobal /{pattern}/ [cmd] Execute an Ex command on each line that doesn't match a pattern. :v/re/d Delete all lines NOT matching a regular expression globally. :g/TODO/yank A Copy all lines with TODO in them into register a (use upper case to append). :g/{/ .+1,/}/-1 sort Sort all items between all braces {} in a bufer. Macros \u00b6 1 2 3 4 5 6 7 8 9 10 11 q{register} Start recording a macro to {register} (e.g. \"q\"). Lower-case to overwrite, upper case to append. qq Start recording into register q. q Stop recording. qQ Append additional commands to the macro in register \"q\". q Stop appending. :reg {register} Examine the macro in {register}. (Useful before appending.) @{register} Execute the macro in {register}. @@ Execute the most recently *invoked* {register}. N@{register} Execute the macro in {register} N times. :normal @{register} Apply the macro to every visually selected line of text (e.g. vG:normal @a) :argdo normal @{register} Apply the macro to all open buffers. (Often lead with :edit! to undo file where we recorded the macro.) Vim Script \u00b6 1 2 3 4 5 :let i=0 Assign 0 to i. :echo i Print i (not to the buffer). :let i += 1 Increment i. <ctrl-r> =i<cr> Insert i into the buffer. :let @a=substitute(@a, '\\~', 'vU', 'g') Substitute text *inside* the register. Tags \u00b6 1 2 3 4 5 6 7 8 9 <ctrl-]> Jump to a definition. <ctrl-t> Jump back through the tag history. g<ctrl-]> See a list of definitions to jump to. (Then, number and <CR>.) :tselect Show the list of definitions to jump to again (need to <ctrl-]> first). :tnext Jump to the next match without showing a prompt. :tprev, :tfirst, :tlast Jump to matches without a prompt. :tag {keyword} Acts like <ctrl-]>. {keyword} features tab completion. :tjump {keyword} Acts like g<ctrl-]>. :pop Acts like <ctrl-t>. Quickfix List \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 :make Run make in the shell where the buffer is. :cnext Jump to the next error from a make (next item in the Quickfix list). :cprev, :cfirst, :clast Jump to an item in the Quickfix list. :cnfile, :cpfile Jump to the first item in the next (previous) file. :cc N Jump to the nth item. :copen, :cclose Open/Close the Quickfix window. :5cnext, :3cprev Jump with a count for the number of items. :colder Look at an older version of the Quickfix list (vim stores up to 10). :cnewer Look at a newer version of the Quickfix list. :setlocal makeprg=gmake\\ acquire_data-lib :setlocal makeprg=cmt\\ make :setglobal errorformat? Check the error format put into the Quickfix list. - %f=filename, %l=line, %m=message :setlocal efm={format} Set the format to handle errors vim doesn't know well. :compiler cmt make Activte the compiler plugin (set makeprg and errorformat). :args $VIMRUNTIME/compiler/*.vim Look at the compiler plugins distributed with vim. Location List \u00b6 1 :lnext, :lprev, ... Grepping Externally \u00b6 1 2 3 4 5 6 :grep {pattern} * Populate the Quickfix list with the search results (-n flag is automatically present). :grepprg=\"grep -n $* /dev/null\" Set what :grep triggers in the external shell. (For example, call ack.) :grepformat=\"%f:%l:%m,%f:%l%m,%f %l%m\" Format the search results from the external grep triggered by :grep. (See errorformat for more.) :vimgrep/{pattern}/[g][j] {file} Use vim's built-in search engine (vim regex syntax). {File} cannot be blank. (* for any file in the directory.) :vimgrep/{pattern}/** Search through all files in subdirectories recursvely. Navigate in quickfix (use :copen). :vimgrep/{<ctrl-r>/}/** Paste the last search from the search register into the pattern for external searching. Autocompletion \u00b6 1 <ctrl-p> / <ctrl-n> From insert mode, to select the \"previous\" and \"next\" items. Autocompletion Method Table \u00b6 1 2 3 4 5 6 7 8 9 <ctrl-n> Generic keywords (built from a partial word list using a document scan). <ctrl-x><ctrl-n> Current buffer keywords. <ctrl-x><ctrl-i> Included file keywords (e.g., #include (c,c++), import (ruby, python), etc.) (Tweak the 'include' setting.) <ctrl-x><ctrl-]> Included file keywords. <ctrl-x><ctrl-]> Tags file keywords. <ctrl-x><ctrl-k> Dictionary lookup - dictionary must be populated (best with :set spell). <ctrl-x><ctrl-l> Whole line completion (duplicate an existing line from elsewhere in the buffer - use a few chars to start). <ctrl-x><ctrl-f> Filename completion (uses :pwd, so :cd {path} to get a different set). <ctrl-x><ctrl-o> Omni completion (we need a plug-in for the language we're using, see compl-omni-filetypes). Autocompletion Pop-up Menu \u00b6 1 2 3 4 5 6 7 8 9 <ctrl-n> Use the next match from the list. <ctrl-p> Use the previous match from the list. <down> Select the next match from the word list. <up> Select the previous match from the word list. <ctrl-y> Adopt the currently selected match. <ctrl-e> Revert to the originally typed text. <ctrl-h> (and <BS>) Delete one character from the current match. <ctrl-l> Add one character from the current match. {char} Stop completion and insert {char}. Autocompletion Source Material \u00b6 1 2 3 4 :ls! Look at the keywords in the buffer list. (???) :set include? Inspect included (e.g. header) files. :set complete Look at the list of \"locations\" included in the complete commands. :set complete+=k Etc. See 'complete' documentation for the include lists and defaults. Spelling \u00b6 1 2 3 4 5 6 7 8 :set spell / :set nospell Show/hide spell checks. [s / ]s Skip back / forward through misspelled words. z= Show suggested spelling replacements. zg Add current word to spell file. zw Remove the current word from the spell file. zug Revert either zg or zw commands for the current word. :set spelllang=en_us Also, en_au, en_ca, en_gb, en_nz (try =fr, will prompt for download, etc.) <ctrl-x>s Fix spelling from insert mode (:set spell must already be active). Programming \u00b6 1 shift-k Open man page for word under the cursor. Recipes - Find & Replace Across Many Files \u00b6 Fully populate the args list (all files). :args **/*.txt Enable navigation w/o saving. :set hidden Set the search pattern. /Pragmatic\\ze Vim Replace with error suppression. :argdo %s//Practical/ge Recipes - Clear a Register \u00b6 Start and finish a macro with no steps. qaq Check the register (here - a). :reg a Recipes - Sort a List \u00b6 Select the block of items. v{motion} Apply the sort (: brings up \u2018<,\u2019>) :sort Recipes - Use Tags \u00b6 Check to see tags options. :set tags? Generate a tags file locally. :!ctags -R Ignore some noise\u2026 (etc.) :!ctags -R --exclude=.git Shortcut to regenerate file. :nnoremap <f5> :!ctags -R<CR> Set autocommand on save. :autocmd BufWritePost * call system(\"ctags -R\") Recipes - Use ack instead of grep for :grep \u00b6 Set a different :grepprg :set grepprg=ack\\ --nogroup\\ --column\\ $* # May need ack-5.12 on my Mac\u2026 Set the format. :set grepformat=%f:%l:%c:%m # %c to go to the column! Recipes - Add a \u201clocal\u201d Dictionary for Project Jargon Spellings \u00b6 Turn on spell checking. :set spell Set a base language (if needed). :setlocal spelllang=en_us Set a local spellfile path. :setlocal spellfile=~/.vim/spell/en.utf-8.add Set a local spellfile addition. :setlocal spellfile+=~/mydir/mysubdir/myfile.utf-8.add Add to the second spell file. :2zg Add to the original spell file. :1zg Recipes - Change Vim on the Fly \u00b6 1 2 3 4 5 6 7 8 :set ignorecase / :set noignorecase / :set ignorecase! (toggle) / :set ignorecase? / :set ignorecase& (restore default) :set tabstop=2 (:set ts=2) :set softtabstop=2 (:set sts=2) :set shiftwidth=2 (:set sw=2) :set expandtab (:set et) :set ts=2 sts=2 sw=2 et :bufdo setlocal ts=4 :windo setlocal number Recipes - Customize with .vim Files \u00b6 Name the file. vim ~/mysettings.vim Source it. :source ~/mysettings.vim Syntax is the same as the .vimrc file. set tabstop=2 set softtabstop=2 set shiftwidth=2 set expandtab Recipes - Filetype Specific Customization \u00b6 Edit customizations file (e.g., ~/.vimrc): 1 2 3 4 5 6 if has(\"autocmd\") filetype on autocmd FileType ruby setlocal ts=2 sts=2 sw=2 et autocmd FileType javascript setlocal ts=4 sts=4 sw=4 noet autocmd FileType javascript compiler nodelint endif Cleaner if we use the ftplugin: 1 2 3 ~/.vim/after/ftplugin/javascript.vim setlocal ts=4 sts=4 sw=4 noet compiler nodelint Reciples - Change Encoding (e.g. fix Excel exports to csv) \u00b6 See: http://stackoverflow.com/questions/64860/best-way-to-convert-text-files-between-character-sets 1 2 3 4 5 $ file Consumer_Complaints_short.csv Consumer_Complaints_short.csv: Non-ISO extended-ASCII English text $ vim +\"set nobomb | set fenc=utf8 |x\" Consumer_Complaints_short.csv $ file Consumer_Complaints_short.csv Consumer_Complaints_short.csv: UTF-8 Unicode English text Recipes - Paste Table/Column Data from Web/Clipboard \u00b6 Copy table from web Go to exec mode and set the clipboard register to block mode 1 call setreg('+', @+, 'b') Insert and paste. Recipes - search for special characters \u00b6 For example, the \u201cnew feed\u201d charcter is \u201c^L\u201d, this can be searched for with: 1 /<ctrl-v><ctrl-l>","title":"Cheatsheet"},{"location":"vim/cheat-sheet.html#vim-cheatsheet","text":"","title":"Vim Cheatsheet"},{"location":"vim/cheat-sheet.html#comment","text":"Go the vim way. Start by only using hjkl to move the cursor.","title":"Comment"},{"location":"vim/cheat-sheet.html#help","text":"1 www.vimdoc.sourceforge.net","title":"Help"},{"location":"vim/cheat-sheet.html#starting-up","text":"1 2 3 vim {filename} vim {filename} +n Open {filename} and position the cursor on line n. vim *.txt","title":"Starting Up"},{"location":"vim/cheat-sheet.html#modes","text":"Normal Insert Insert-Normal (Use command, then return to Insert mode.) Operator-Pending Note Below, the dash \u201c-\u201d between buttons signals holding the first button, then pressing the second.","title":"Modes"},{"location":"vim/cheat-sheet.html#getting-help","text":"1 2 vimtutor :help","title":"Getting Help"},{"location":"vim/cheat-sheet.html#fundamentals","text":"1 2 3 4 5 6 7 8 . Repeat the last command. (Includes text insertion in insert mode.) i Enter insert mode. I Enter insert mode at the beginning of the line. a Enter insert mode one character beyond the cursor. A Enter insert mode at the end of the line. Esc Exit insert mode. s Delete the character under the cursor and enter insert mode. J","title":"Fundamentals"},{"location":"vim/cheat-sheet.html#moving-through-text","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 h, j, k, l Move right, down, up, or right (real lines). gj, gk Move down or up display lines. 0, g0 Move to the first character of the real (, display) line. ^, g^ Move to the first non-blank character of the real (, display) line. $, g$ Move to the end of the real (, display) line. w, b Move to the front (, back) of the next (or current/previous) word. e, ge Move to the back of the current/next word (, previous word). W, B Move to the front (, back) of the next (or current/previous) WORD. E, gE Move to the back of the current/next WORD (, previous WORD). :jump Inspect the contents of the jump list (for <ctrl-o>, <ctrl-i>). <ctrl-o> Move back through the breadcrumbs. Will jump through buffers. <ctrl-i> Move forward through the breadcrumbs. <ctrl-b>, <ctrl-u> Page Up. <ctrl-f>, <ctrl-d> Page Down. <number>| Move to column <number>.","title":"Moving through text"},{"location":"vim/cheat-sheet.html#jumps-moving-through-text-and-files","text":"Jumps: Command Effect [count]G Jump to line number. //patern /?pattern /n/N Jump to the next (previous) occurrence of pattern. % Jump from matched brace (),{},[] to another (front-back). (/) Jump to start of previous/next sentence. {/} Jump to start of previous/next paragraph. H/M/L Jump to top/middle/bottom of screen. gf Jump to file name under the cursor. Jump to the definition of keyword under the cursor. (What!?) \u2018{mark}/`{mark} Jump to a mark (more on this elsewhere\u2026)","title":"Jumps (Moving through text and files...)"},{"location":"vim/cheat-sheet.html#modify-jump-to-file","text":"1 :set suffixesadd+=.rb Etc. Add the specified extension and vim will try to use them with gf.","title":"Modify Jump to File"},{"location":"vim/cheat-sheet.html#changes-moving-through-them","text":"1 2 3 4 5 :changes List the changes. g; / g, Traverse the change list (back / forwards). `. Jumps to the location of the last change (see more under Automatic Marks). `^ Jumps to the last insertion. gi Move to last insertion point and enter insert mode.","title":"Changes (Moving through them...)"},{"location":"vim/cheat-sheet.html#searching","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 /{pattern} Search forward in the buffer for {pattern}. ?{pattern} Search backwards in the buffer for pattern. n Repeat the search going \"forward\" (in the expected direction).. N Repeat the search with direction reversed. /<cr> Jump forward to the next match of pattern (don't preserve direction or offset). ?<cr> Jump backward to the next match of pattern (don't preserve direction or offset). f<char> Search for the next instance of character <char>. ; Repeat the last search \"f\" performed. , Reverse the last character search command. F<char> Search backwards through the text for the next instance of <char>. t<char> Search forward to the next character before the next occurrence of <char>. T<char> Search backward to the character after the previous occurrence of <char>. * Place the cursor on the word you want to search for (repeats of). :set ignorecase Turn on case-insensitive search. \\c Ignore case in *this* search (regardless of set setting). (Put anywhere in search term.) \\C Use case in *this* search(regardless of set setting). (Put anywhere in search term.) :set smartcase Ignore case in the search by default unless we include a capital letter in the search. /#\\([0-9a-fA-F]\\{6}\\) Search for six consecutive hexadecimal numbers preceeded by a # sign. (Optionally also escape the closing }). /\\v Active the \"very magic search switch.\" (All characters assume special meaning except _, a-zA-Z0-9. /\\v#([0-9a-fA-F]{6}) Search for six consecutive hexadecimal numbers preceeded by a # sign. /\\v#(\\x{6}|\\x{3}) Search for six or three consecutive hexadecimal numbers (w/ hex character class) preceeded by a # sign. /\\V Activate the \"very nonmagic\" search switch. (All characters except \\ lose special meaning - literal search.) ?\\V Activate the \"very nonmagic\" search switch. (All characters except \\ and ? lose special meaning - literal search.) /\\v<word> Use <> to mark the boundaries of a word (e.g., search for \"the\" and not \"these\", etc.). :nohlsearch Unlike :set nohlsearch or :set hls!, this turns of highlighting until the next search is performed. (:noh) <ctrl-r> <ctrl-w> Autocomplete search field using remainder of highlighted selection (when :set incsearch is active). /{pattern}/e Position the cursor at the end of the pattern when searching (default is the beginning). //e Anchor the next search of a previous pattern to the end (no need to have /e'd initially). Can be used as a motion. <ctrl-r> / Paste the contents of the last search register in place (insert mode, command line mode). :let @/='Pragmatic Vim' Set the last search register to 'Pragmatic Vim'.","title":"Searching"},{"location":"vim/cheat-sheet.html#substitution","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 :s/{pat1}/{pat2}/ Substitute the first instance of {pat1} with {pat2} on the current line. :s/{pat1}/{pat2}/g Substitute all instances of {pat1} with {pat2} in the current line. :[range]s/{pat1}/{pat2}/g Substitute all instances of {pat1} with {pat2} over the specifiec range of lines. :33,34s/aa/ab/gc Replace aa with ab on lines 33 and 34. g& Repeat the last substitution over the entire file. :%s/{pat1}/{pat2}/gc Search and replace pat1 with pat2 and prompt each time over the whole file. :%s/{pat1}/<ctrl-{register}>/ Search and replace pat1 with the contents of register {register}. :%s/{pat1}/\\=@{register}/ Use the contents of register {register}, passing the contents by value. (e.g. @0 for the yank register, @\" for default) :%s//{string}/gc Search and replace using the last match. :%s///gn Count the number of matches of the last search pattern used, don't do anything (n suppression). :&& Replay the last substitution over the current line. :%&& Repeat the last substitution over the entire file (longer g&). :'<,'>&& Replay the last substitution over the visually selected range (get '<,'> automatically with : from visual mode).","title":"Substitution"},{"location":"vim/cheat-sheet.html#special-characters-in-substitution-command-replacement-strings","text":"1 2 3 4 5 6 7 8 9 10 11 Symbol Represents ------ ---------- \\r Carriage return. \\t Tab. \\\\ Backslash. \\1 Insert the first submatch. \\2 Insert the second submatch (and so on, up to \\9). \\0 Insert the entire matched pattern. & Insert the entire matched pattern. ~ Use {string} from previous substitute. \\={Vim script} Evaluate {Vim script} expression, use the reult as the replacement {string}.","title":"Special Characters in Substitution Command Replacement Strings"},{"location":"vim/cheat-sheet.html#editing-in-replace-mode","text":"1 2 3 4 5 6 R Enter replace mode. <insert> Also may use the insert key to enter replace mode (if present). gR Virtual replace mode (treats tab stops as though they were a single space). r{char} Replace a single character. gr{char} Replace a single character in virtual mode. Vr- Select a line and replace all the characters with \"-\"","title":"Editing in Replace Mode"},{"location":"vim/cheat-sheet.html#mark-text","text":"1 2 3 m{a-zA-Z} Lower case letters mark only the buffer, uppercase are global (across all buffers). '{mark} Jump to the line where the mark was set. `{mark} Jump to the exact point the mark was set.","title":"Mark Text"},{"location":"vim/cheat-sheet.html#automatic-marks","text":"1 2 3 4 5 6 7 8 9 Keystrokes Buffer Positions ---------- ---------------- '' Position before the last jump within current file. '. Location of last change (beginning of line). '^ Location of last insertion (beginning of line). '[ Start of last change or yank. '] End of last change or yank. '< Start of last visual selection. '> End of last visual selection.","title":"Automatic Marks"},{"location":"vim/cheat-sheet.html#repeatable-and-reversible-actions","text":"1 2 3 4 5 6 7 8 9 Intent Act Repeat Reverse ------ --- ------ ------- Make a change. Edit . u Scan line for next. f{char}/t{char} ; , Scan line for previous. F{char}/T{char} ; , Scan document for next. /{pattern}<CR> n N Scan document for previous. ?{pattern}<CR> n N Perform substituion. :s/target/replacement & u Execute a sequence of changes. qx{changes}q @x u","title":"Repeatable and Reversible Actions"},{"location":"vim/cheat-sheet.html#run-commands-in-the-shell","text":"1 2 3 4 5 6 7 8 9 10 11 :! Access the shell. :!ls Run ls in the shell. (Note, :ls shows the contents of the buffer list.) % On vim's command line, this is short hand for the current filename. :!ruby % Runs the current (ruby) file being edited. :shell Start an interactive shell session inside vim. (Use \"exit\" to return to vim.) :read !{cmd} Put the output of cmd into the current buffer. :write !{cmd} Use the current buffer as input for cmd. :write {file} Write the current buffer into {file}. :write! {file} Write the current buffer into {file} and overwrite the contents. Watch the ! placement! :[range]!{cmd} Pass the lines in range to cmd and replace the range with the output of cmd. :!mkdir -p %:h Make all the directories needed to write a file into its current path.","title":"Run Commands in the Shell"},{"location":"vim/cheat-sheet.html#working-with-files","text":"1 2 3 4 5 6 7 8 9 :cd {path} Change vim's working directory. :pwd Show vim's present working directory. :edit {filename} Open a file into the buffer for editing. :edit! Re-read the current file into the buffer and discard exisitng changes. (:e!) :edit %<tab> % is a short-hand for the active buffer filepath. :edit %:h<tab> The :h modifier removes the filename while preserving the rest of the path. :find {file} Open a file by name without a fully qualified path. (<tab> completion is available.) :set path+={dir}/** Add a directory to the vim \"$PATH\". (** matches all subdirectories below {dir}) :set path? Inspect the value of the path.","title":"Working with Files"},{"location":"vim/cheat-sheet.html#write-changes-from-a-buffer-to-a-file","text":"1 2 3 4 :write ZZ will also write and close. :update :saveas :w !sudo tee % > /dev/null Write the current buffer as the super-user. (% expands to the path of the current buffer.)","title":"Write Changes from a Buffer to a File"},{"location":"vim/cheat-sheet.html#manipulate-file-buffers","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 :ls List the files. :bnext Switch to the next buffer. (:bn) :bprev Switch to the previous buffer. (:bp) :bfirst Move to the first buffer. (:bf) :blast Move to the last buffer. (:bl) :buffer N Move to buffer N (:ls shows the buffer numbers). (:buf N) :buffer {buffname} Move to the buffer with name {buffname} (shown by :ls, no need for \" characters). <ctrl-^> Toggle between the current and alternate buffers. :bufdo Run an Ex command on all the buffers. :bdelete N1 N2 Delete buffers numbered N1 and N2. :N, M bdelete Delete buffers numbered N through M (this has no effect on the associated file). :5,10bd e.g, Delete buffers numbered 5 through 10. :args List of files used to launch vim. (well, more than that actually...) :args {arglist} Populate the arguments list. (e.g., vim, followed by :args {file1} {file2}). Accepts wildcards. :args **/*.* * is a 0 or more character wildcard. So is **, but it can recurse downward into directories below. :args **/*.js **/*.css Just get all the JavaScript and CSS, etc. :args `cat .chapters` Use shell expansion inside the backticks. :next Move through the argument list. :prev Move through the argument list. :argdo Execute the same command on every buffer in the set. :argdo %s//{pat1}/ge Substitute the last search match with {pat1} in all of \"argslist\" across the whole files, suppressing error messages. :argdo update Save every file, but only if it has been changed.","title":"Manipulate File Buffers"},{"location":"vim/cheat-sheet.html#managing-hidden-files","text":"1 2 3 4 5 6 7 :ls 1 %a + \"a.txt\" line 17 # <- \"+\" <- Modified. 2 \"b.txt\" line 0 :bn! :ls 1 #h + \"a.txt\" line 17 # <- \"h\" <- Hidden file. 2 %a \"b.txt\" line 1","title":"Managing Hidden Files"},{"location":"vim/cheat-sheet.html#working-with-the-filesystem","text":"1 2 3 4 5 6 7 8 9 vim . Open a filesystem browser in the current directory. k,j <cr> Navigate vim's representation of the filesystem, open the selected file. :edit {path - directory name} Open a filesystem browser in the specified directory. (always recall \":edit .\" or \":e.\") :edit %:h Open a filesystem browser in the directory of the current file. :Explore netrw-% Create new files. (% in netrw, etc.) netrw-d Create new directories. netrw-rename Rename a file. netrw-del Delete a file.","title":"Working with the Filesystem"},{"location":"vim/cheat-sheet.html#split-windows","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <ctrl-w> s Split windows horizontally. <ctrl-w> v Split windows vertically. <ctrl-w> {s/v} :edit {filename} Create a split and edit. :split {filename} Combo - create a split and edit. (Horizontal.) (:sp {file}) :vsplit {filename} Combo - create a split and edit. (Vertical.) (:vsp {file}) <ctrl-w> w Cycle focus between open windows. Also, <ctrl-w> <ctrl-w> (ctrl-\"ww\"). <ctrl-w> h shift focus to the left. <ctrl-w> j shift focus below. <ctrl-w> k shift focus above. <ctrl-w> l shift focus to the right. :close Close the active window. (:cl), Also <ctrl-w> c :only Keep only the active window. (:on), Also <ctrl-w> o <ctrl-w> = Equalize width and height of all windows. <ctrl-w> _ Maximize height of active window. <ctrl-w> | Maximize width of active window. [N]<ctrl-w> Set active window height to N rows. [N]<ctrl-|> Set active window width to N columns. [ Look up more details on window-moving in the help and check Vim-casts.org ]","title":"Split Windows"},{"location":"vim/cheat-sheet.html#tabs","text":"1 2 3 4 5 6 7 8 9 10 11 12 :lcd {path} Set up the working directory locally for the current window. :windo lcd {path} Set up the working directory locally all windows in a tab. :tabedit {filename} Open a tab with file {filename}. (:tabe {filename}) <ctrl-w> T Move the current window into its own tab. :tabclose Close the current tab and all of its windows. (:tabc) :tabonly Keep only the current tab and all of its windows. [N]gt Go to tab N. :tabnext {N} Switch to tab N. (:tabn {N}) gt Next tab. :tabnext Next tab. (:tabn) gT Previous tab. :tabprevious Previous tab. (:tabp)","title":"Tabs"},{"location":"vim/cheat-sheet.html#switch-to-normal-mode-from-insert-mode","text":"1 2 <esc> <ctrl-[>","title":"Switch to Normal Mode from Insert Mode"},{"location":"vim/cheat-sheet.html#switch-to-insert-normal-mode-from-insert-mode","text":"1 <ctrl-o>","title":"Switch to Insert-Normal Mode from Insert Mode"},{"location":"vim/cheat-sheet.html#switch-to-visual-mode","text":"1 2 3 4 5 v Enable character-wise visual mode. (And return to normal mode - toggle.) <ctrl-g> Enter Select Mode from visual mode. V Enter line-wise visual mode. <ctrl-v> Enter block-wise visual mode. o Go to the other end of highlighted text.","title":"Switch to Visual Mode"},{"location":"vim/cheat-sheet.html#selection-in-visual-mode","text":"1 2 gv Reselect the last visual selection. vit Select inside a tag (e.g., (cursor here->)<a>select me</a>) on a line.","title":"Selection in Visual Mode"},{"location":"vim/cheat-sheet.html#using-a-visual-operator","text":"1 2 vU Make the selection uppercase. vu Make the selection lowercase.","title":"Using a Visual Operator"},{"location":"vim/cheat-sheet.html#delimited-text-objects-begin-and-end-with-matching-symbols","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 v<text object> Enter visual mode and use the following to make a selction of... Remember, text objects can be {motion}s. a) or ab A pair of (parentheses). i) or ib Inside of (parentheses). a} or aB A pair of {braces}. i} or iB Inside of {braces}. a] A pair of [brackets]. i] Inside of [brackets]. a> A pair of <angle brackets>. i> Inside of <angle brackets>. a' A pair of 'single quotes'. i' Inside of 'single quotes'. a\" A pair of \"double quotes\". i\" Inside a pair of \"double quotes\". at A pair of <xml>tags</xml>. it Inside a of <xml>tags</xml>.","title":"Delimited Text Objects (Begin and end with matching symbols."},{"location":"vim/cheat-sheet.html#bounded-text-objects-defined-by-boundaries","text":"1 2 3 4 5 6 7 8 9 Remember, text objects can be {motion}s. iw Current word. aw Current word plus one space. iW Current WORD. aW Current WORD plus one space. is Current sentence. as Current sentence plus one space. ip Current paragraph. ap Current paragraph plus one blank line.","title":"Bounded Text Objects (Defined by boundaries.)"},{"location":"vim/cheat-sheet.html#command-line-mode","text":"1 2 3 4 5 : Enter the Ex Command mode. / Enter the pattern search mode. <ctrl-r> <ctrl-w> Insert the word under the cursor. * /\\<<ctrl-r> <ctrl-w>\\><cr> /<ctrl-r> <ctrl-w> Search for the word under the cursor.","title":"Command Line Mode"},{"location":"vim/cheat-sheet.html#command-line-window","text":"1 2 3 4 5 q: Bring up the window with a history of the Ex commands. k, j Scroll through the command line window. <cr> Execute the contents of the current line. q/ Bring up the window with a history of searches. <ctrl-f> Switch from the command line mode to the command line window.","title":"Command Line Window"},{"location":"vim/cheat-sheet.html#operators","text":"1 2 3 > Shift (the line?) right. < Shift (the line?) left. gUit Select text inside a tag and shift it to uppercase (tip 23).","title":"Operators"},{"location":"vim/cheat-sheet.html#indentation","text":"1 2 3 4 5 > Indent the line (or visually selected text). 2> Indent the line twice (3> for three times, etc.). >G Increase indentation from here to the end of the file. =G Autoindet from here to the end of the file. == Indent current line.","title":"Indentation"},{"location":"vim/cheat-sheet.html#editing","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 s Remove the character under the cursor and enter insert mode. c{motion} Remove text and enter insert mode. $, l, w ciw Remove the current word and enter insert mode. u Undo the last change. U Undo all changes to the line. <ctrl-r> Re-do the last undo. daw Delete a word (cursor may be located anywhere within the word). dap Delete a paragraph. d{motion} Delete. (Power move, especially with / search.) ~ Toggle case of the character under the cursor or all visually selected text. g~ Swap case. (requires motion?) gu Make lower case. (requires motion?) guaw = convert a word, guap = paragraph gU Make upper case. (requires motion?) gUaw = CONVERT a word, gUap = paragraph, gUgU converts a line.","title":"Editing"},{"location":"vim/cheat-sheet.html#deleting-c-instead-of-d-to-enter-insert-after-the-edit","text":"1 2 3 4 5 6 7 8 9 dh / x Delete one character backwards. dl / X Delete one character forwards. db Delete one word backwards. dw Delete one word forwards. dB Delete one non-blank word backwards. dW Delete one non-blank word forwards. d$ / D Delete to the end of the line. d0 Delete to the beginning of the line. 0d$ / dd Delete the line.","title":"Deleting (c instead of d to enter insert after the edit)."},{"location":"vim/cheat-sheet.html#editing-in-insert-mode","text":"1 2 3 4 5 6 7 8 9 <ctrl-h> Delete back one character. <ctrl-w> Delete back one word. <ctrl-u> Delete back to the start of the line. <ctrl-r> N Paste from register N. (Press and hold ctrl-r, then release, then press the number.) <ctrl-r> <ctrl-p> N Smarter paste from register N. <ctrl-v> Code Enter a unicode character (expect 3 digits). <ctrl-v> u{Code} Enter an arbitrary code (e.g., u00bf = \u00bf). <ctrl-v> {nondigit} Enter a nondigit literally (e.g., a literal tab instead of spaces in case exapandtab is active). <ctrl-k> {char1}{char2} Enter a unicode character via digraph, e.g. <ctrl-k> ?I = \u00bf. View a list of digraphs with :digraphs","title":"Editing In Insert Mode"},{"location":"vim/cheat-sheet.html#using-the-expression-register","text":"1 <ctrl-r> = In insert mode.","title":"Using the Expression Register"},{"location":"vim/cheat-sheet.html#copying-cutting-and-pasting-yanking-deleting-and-putting","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Regisers are [a..z] for overwriting and [A..Z] for appending. The system clipboard is \"+ (X11 at least). \"{register} Prefix to specify the register for holding the yank/delete. Defaults to unnamed (\"). :reg Examine the contents of the registers. :reg \"0 Examine the contents of the yank register. (Also shows the contents of \"\" (unnamed).) y{motion} Copy (? ... $, l, w) into the unnamed register. Also copy into the yank register (\"0)! yiw Copy a word. yi[ Copy everything inside the [] braces (cursor should be inside the []). yy Copy a line. yyp Copy a line and put it (immediately below the current line). yt, Copy to the next comma. y$ Copy to the end of the line. p Paste (removed with x, copied with y, for example) after the cursor position. P Paste (removed with x, copied with y, for example) before the cursor position. puP / Pup Paste the other way when you get it wrong... \"\"p Paste from the unnamed register (\"\"p == p). \"ap Paste from register a. \"0p Paste from the yank register (may also be equivalent to the unnamed or another register). xp Cut and paste a character - effectively transpose two characters. diw Cut a word. dd Cut a line. ddp Cut and paste a line (one below the current line) - effectively transpose two lines. v{selection}p Swap the highlighted portion in visual mode with the contents of (the unnamed) register, and vice versa. \"{register}v{sel}p Swap the highlighted portion in visual mode with the contents of the register, and vice versa. <ctrl-r>{register} Insert Mode: Paste from register {register}. (Recall <ctrl-r\"> to get the unnamed!) Useful with Ex commands too!","title":"Copying, Cutting, and Pasting (Yanking, Deleting, and Putting)"},{"location":"vim/cheat-sheet.html#default-registers","text":"1 2 3 4 5 6 \"= Expression Register \"% Name of current file. \"# Name of alternate file. \". Last inserted text. \": Last Ex command. \"/ Last search pattern (can be set explicitly with :let ).","title":"Default Registers"},{"location":"vim/cheat-sheet.html#addition","text":"1 2 N <ctrl-a> Add N to the next number on the line, e.g. 10 -> 20 N <ctrl-x> Subtract N from the next number on the line, e.g., 30 -> 20","title":"Addition"},{"location":"vim/cheat-sheet.html#compound-commands","text":"1 2 3 4 5 6 7 A $a C c$ s cl S ^C I ^i o A<CR> # Leverage undo power by finishing lines with {stop} <esc> o O ko","title":"Compound Commands"},{"location":"vim/cheat-sheet.html#screen-redraw","text":"1 2 3 4 zz Redraw the screen with the cursor position in the vertical center of the page. z. Redraw the screen with the cursor position in the vertical center of the page. zt Redraw the screen with the cursor position at the top of the page. <ctrl-l> Clear and redraw the screen.","title":"Screen Redraw"},{"location":"vim/cheat-sheet.html#ex-commands","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <ctrl-d> Offer autocompletion suggestions. Tab to cycle through them. :colorscheme <ctrl-d> Show all the colorscheme options (tab to cycle through). :help ex-cmd-index See the ex-cmd-index for the full list of commands. :{N} Jump to line N. :$ Go to the end of the file. :print Print the line. (Abbreviate with :p) :2,5p Print lines 2 to 5. (.,$p prints from the current line to EOF). :%p Print all the lines in the file. :/{pattern1}/+1,/{pattern2}/-1p Print all lines between, but not including, those matching patterns 1 & 2. :[range]delete[x] Delete specified lines into register x. (e.g., :3d deletes line 3). :[range]yank[x] Yank specified lines into register x. :[line]put[x] Put the text from reigster x after the specified line. :[range]copy{address} Copy the specified lines to below the line specified by {address}. :6copy. Copy line 6 to below the current line. :6t. Copy line 6 to below the current line. ( t == copy ) :t. Duplicate the current line without using a register (yyp uses a register). :[range]move{address} Move the specified lines to below the line specified by {address}. ( abbrev m ) :[range]join Join the specified lines. :[range]normal{commands} Execute normal mode {commands} on each specified line. :[range]substitute/{pattern}/{string}/[flags] Replace {pattern} with {string} on the specified lines. (:[range]s/{pattern}/{string}/[flags]) :%s/{pattern}/{string}/[flags] Do the substitution over the entire file, looking for pattern, etc. :%s/{pattern}/{string}/[flags={g,c,n,&}] Flags: g=global (all in a line), c=confirm, n=no subs, report number, &=reuse flags from last \"s\" :[range]global/{pattern}/[cmd] Execute Ex [cmd] on all specified lines with a {pattern} match. :qall! Quit and discard all unsaved changes in all open buffers. :wall Write all modified buffers to disk. (:wa) :write :wnext Write, followed by \"next.\" :tabnew :split :prev/:next :bprev/:bnext @: Repeat the last Ex command. :normal <cmd> For each selected line, execute the normal mode command <cmd>. (jVG :normal .) :%normal A; Select all modes and run normal \"A;\" (append a semicolon to every line). :%normal i// Comment out every line (.js or .cpp). :delete {register} Cut the current line into {register} :yank {register} Copy the current line into {register} :put {register} Put the line from {register} :edit! Undo all changes (back to last save?). :sort Sort!","title":"Ex Commands"},{"location":"vim/cheat-sheet.html#global-commands","text":"1 2 3 4 5 6 7 8 :[range]global[!]/{pattern}/[cmd] Execute an Ex command on each line that matches a pattern. :[range]global[!]/{pattern}/[range][cmd] Template is expandable... :g/re/p Print a regular expression globally. ^_^ :g/re/d Delete all lines matching a regular expression globally. :[range] vglobal /{pattern}/ [cmd] Execute an Ex command on each line that doesn't match a pattern. :v/re/d Delete all lines NOT matching a regular expression globally. :g/TODO/yank A Copy all lines with TODO in them into register a (use upper case to append). :g/{/ .+1,/}/-1 sort Sort all items between all braces {} in a bufer.","title":"Global Commands"},{"location":"vim/cheat-sheet.html#macros","text":"1 2 3 4 5 6 7 8 9 10 11 q{register} Start recording a macro to {register} (e.g. \"q\"). Lower-case to overwrite, upper case to append. qq Start recording into register q. q Stop recording. qQ Append additional commands to the macro in register \"q\". q Stop appending. :reg {register} Examine the macro in {register}. (Useful before appending.) @{register} Execute the macro in {register}. @@ Execute the most recently *invoked* {register}. N@{register} Execute the macro in {register} N times. :normal @{register} Apply the macro to every visually selected line of text (e.g. vG:normal @a) :argdo normal @{register} Apply the macro to all open buffers. (Often lead with :edit! to undo file where we recorded the macro.)","title":"Macros"},{"location":"vim/cheat-sheet.html#vim-script","text":"1 2 3 4 5 :let i=0 Assign 0 to i. :echo i Print i (not to the buffer). :let i += 1 Increment i. <ctrl-r> =i<cr> Insert i into the buffer. :let @a=substitute(@a, '\\~', 'vU', 'g') Substitute text *inside* the register.","title":"Vim Script"},{"location":"vim/cheat-sheet.html#tags","text":"1 2 3 4 5 6 7 8 9 <ctrl-]> Jump to a definition. <ctrl-t> Jump back through the tag history. g<ctrl-]> See a list of definitions to jump to. (Then, number and <CR>.) :tselect Show the list of definitions to jump to again (need to <ctrl-]> first). :tnext Jump to the next match without showing a prompt. :tprev, :tfirst, :tlast Jump to matches without a prompt. :tag {keyword} Acts like <ctrl-]>. {keyword} features tab completion. :tjump {keyword} Acts like g<ctrl-]>. :pop Acts like <ctrl-t>.","title":"Tags"},{"location":"vim/cheat-sheet.html#quickfix-list","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 :make Run make in the shell where the buffer is. :cnext Jump to the next error from a make (next item in the Quickfix list). :cprev, :cfirst, :clast Jump to an item in the Quickfix list. :cnfile, :cpfile Jump to the first item in the next (previous) file. :cc N Jump to the nth item. :copen, :cclose Open/Close the Quickfix window. :5cnext, :3cprev Jump with a count for the number of items. :colder Look at an older version of the Quickfix list (vim stores up to 10). :cnewer Look at a newer version of the Quickfix list. :setlocal makeprg=gmake\\ acquire_data-lib :setlocal makeprg=cmt\\ make :setglobal errorformat? Check the error format put into the Quickfix list. - %f=filename, %l=line, %m=message :setlocal efm={format} Set the format to handle errors vim doesn't know well. :compiler cmt make Activte the compiler plugin (set makeprg and errorformat). :args $VIMRUNTIME/compiler/*.vim Look at the compiler plugins distributed with vim.","title":"Quickfix List"},{"location":"vim/cheat-sheet.html#location-list","text":"1 :lnext, :lprev, ...","title":"Location List"},{"location":"vim/cheat-sheet.html#grepping-externally","text":"1 2 3 4 5 6 :grep {pattern} * Populate the Quickfix list with the search results (-n flag is automatically present). :grepprg=\"grep -n $* /dev/null\" Set what :grep triggers in the external shell. (For example, call ack.) :grepformat=\"%f:%l:%m,%f:%l%m,%f %l%m\" Format the search results from the external grep triggered by :grep. (See errorformat for more.) :vimgrep/{pattern}/[g][j] {file} Use vim's built-in search engine (vim regex syntax). {File} cannot be blank. (* for any file in the directory.) :vimgrep/{pattern}/** Search through all files in subdirectories recursvely. Navigate in quickfix (use :copen). :vimgrep/{<ctrl-r>/}/** Paste the last search from the search register into the pattern for external searching.","title":"Grepping Externally"},{"location":"vim/cheat-sheet.html#autocompletion","text":"1 <ctrl-p> / <ctrl-n> From insert mode, to select the \"previous\" and \"next\" items.","title":"Autocompletion"},{"location":"vim/cheat-sheet.html#autocompletion-method-table","text":"1 2 3 4 5 6 7 8 9 <ctrl-n> Generic keywords (built from a partial word list using a document scan). <ctrl-x><ctrl-n> Current buffer keywords. <ctrl-x><ctrl-i> Included file keywords (e.g., #include (c,c++), import (ruby, python), etc.) (Tweak the 'include' setting.) <ctrl-x><ctrl-]> Included file keywords. <ctrl-x><ctrl-]> Tags file keywords. <ctrl-x><ctrl-k> Dictionary lookup - dictionary must be populated (best with :set spell). <ctrl-x><ctrl-l> Whole line completion (duplicate an existing line from elsewhere in the buffer - use a few chars to start). <ctrl-x><ctrl-f> Filename completion (uses :pwd, so :cd {path} to get a different set). <ctrl-x><ctrl-o> Omni completion (we need a plug-in for the language we're using, see compl-omni-filetypes).","title":"Autocompletion Method Table"},{"location":"vim/cheat-sheet.html#autocompletion-pop-up-menu","text":"1 2 3 4 5 6 7 8 9 <ctrl-n> Use the next match from the list. <ctrl-p> Use the previous match from the list. <down> Select the next match from the word list. <up> Select the previous match from the word list. <ctrl-y> Adopt the currently selected match. <ctrl-e> Revert to the originally typed text. <ctrl-h> (and <BS>) Delete one character from the current match. <ctrl-l> Add one character from the current match. {char} Stop completion and insert {char}.","title":"Autocompletion Pop-up Menu"},{"location":"vim/cheat-sheet.html#autocompletion-source-material","text":"1 2 3 4 :ls! Look at the keywords in the buffer list. (???) :set include? Inspect included (e.g. header) files. :set complete Look at the list of \"locations\" included in the complete commands. :set complete+=k Etc. See 'complete' documentation for the include lists and defaults.","title":"Autocompletion Source Material"},{"location":"vim/cheat-sheet.html#spelling","text":"1 2 3 4 5 6 7 8 :set spell / :set nospell Show/hide spell checks. [s / ]s Skip back / forward through misspelled words. z= Show suggested spelling replacements. zg Add current word to spell file. zw Remove the current word from the spell file. zug Revert either zg or zw commands for the current word. :set spelllang=en_us Also, en_au, en_ca, en_gb, en_nz (try =fr, will prompt for download, etc.) <ctrl-x>s Fix spelling from insert mode (:set spell must already be active).","title":"Spelling"},{"location":"vim/cheat-sheet.html#programming","text":"1 shift-k Open man page for word under the cursor.","title":"Programming"},{"location":"vim/cheat-sheet.html#recipes---find--replace-across-many-files","text":"Fully populate the args list (all files). :args **/*.txt Enable navigation w/o saving. :set hidden Set the search pattern. /Pragmatic\\ze Vim Replace with error suppression. :argdo %s//Practical/ge","title":"Recipes - Find &amp; Replace Across Many Files"},{"location":"vim/cheat-sheet.html#recipes---clear-a-register","text":"Start and finish a macro with no steps. qaq Check the register (here - a). :reg a","title":"Recipes - Clear a Register"},{"location":"vim/cheat-sheet.html#recipes---sort-a-list","text":"Select the block of items. v{motion} Apply the sort (: brings up \u2018<,\u2019>) :sort","title":"Recipes - Sort a List"},{"location":"vim/cheat-sheet.html#recipes---use-tags","text":"Check to see tags options. :set tags? Generate a tags file locally. :!ctags -R Ignore some noise\u2026 (etc.) :!ctags -R --exclude=.git Shortcut to regenerate file. :nnoremap <f5> :!ctags -R<CR> Set autocommand on save. :autocmd BufWritePost * call system(\"ctags -R\")","title":"Recipes - Use Tags"},{"location":"vim/cheat-sheet.html#recipes---use-ack-instead-of-grep-for-grep","text":"Set a different :grepprg :set grepprg=ack\\ --nogroup\\ --column\\ $* # May need ack-5.12 on my Mac\u2026 Set the format. :set grepformat=%f:%l:%c:%m # %c to go to the column!","title":"Recipes - Use ack instead of grep for :grep"},{"location":"vim/cheat-sheet.html#recipes---add-a-local-dictionary-for-project-jargon-spellings","text":"Turn on spell checking. :set spell Set a base language (if needed). :setlocal spelllang=en_us Set a local spellfile path. :setlocal spellfile=~/.vim/spell/en.utf-8.add Set a local spellfile addition. :setlocal spellfile+=~/mydir/mysubdir/myfile.utf-8.add Add to the second spell file. :2zg Add to the original spell file. :1zg","title":"Recipes - Add a \"local\" Dictionary for Project Jargon Spellings"},{"location":"vim/cheat-sheet.html#recipes---change-vim-on-the-fly","text":"1 2 3 4 5 6 7 8 :set ignorecase / :set noignorecase / :set ignorecase! (toggle) / :set ignorecase? / :set ignorecase& (restore default) :set tabstop=2 (:set ts=2) :set softtabstop=2 (:set sts=2) :set shiftwidth=2 (:set sw=2) :set expandtab (:set et) :set ts=2 sts=2 sw=2 et :bufdo setlocal ts=4 :windo setlocal number","title":"Recipes - Change Vim on the Fly"},{"location":"vim/cheat-sheet.html#recipes---customize-with-vim-files","text":"Name the file. vim ~/mysettings.vim Source it. :source ~/mysettings.vim Syntax is the same as the .vimrc file. set tabstop=2 set softtabstop=2 set shiftwidth=2 set expandtab","title":"Recipes - Customize with .vim Files"},{"location":"vim/cheat-sheet.html#recipes---filetype-specific-customization","text":"Edit customizations file (e.g., ~/.vimrc): 1 2 3 4 5 6 if has(\"autocmd\") filetype on autocmd FileType ruby setlocal ts=2 sts=2 sw=2 et autocmd FileType javascript setlocal ts=4 sts=4 sw=4 noet autocmd FileType javascript compiler nodelint endif Cleaner if we use the ftplugin: 1 2 3 ~/.vim/after/ftplugin/javascript.vim setlocal ts=4 sts=4 sw=4 noet compiler nodelint","title":"Recipes - Filetype Specific Customization"},{"location":"vim/cheat-sheet.html#reciples---change-encoding-eg-fix-excel-exports-to-csv","text":"See: http://stackoverflow.com/questions/64860/best-way-to-convert-text-files-between-character-sets 1 2 3 4 5 $ file Consumer_Complaints_short.csv Consumer_Complaints_short.csv: Non-ISO extended-ASCII English text $ vim +\"set nobomb | set fenc=utf8 |x\" Consumer_Complaints_short.csv $ file Consumer_Complaints_short.csv Consumer_Complaints_short.csv: UTF-8 Unicode English text","title":"Reciples - Change Encoding (e.g. fix Excel exports to csv)"},{"location":"vim/cheat-sheet.html#recipes---paste-tablecolumn-data-from-webclipboard","text":"Copy table from web Go to exec mode and set the clipboard register to block mode 1 call setreg('+', @+, 'b') Insert and paste.","title":"Recipes - Paste Table/Column Data from Web/Clipboard"},{"location":"vim/cheat-sheet.html#recipes---search-for-special-characters","text":"For example, the \u201cnew feed\u201d charcter is \u201c^L\u201d, this can be searched for with: 1 /<ctrl-v><ctrl-l>","title":"Recipes - search for special characters"},{"location":"virtualbox/win11install.html","text":"How to install Microsoft Windows 11 on VirtualBox! \u00b6 Info The following step-by-step guide shows how to install Microsoft Windows 11 on top of VirtualBox 6.1; this guide has been tested and verified on both macOS as well as Linux hosts. This is to address the reported issue that Windows 11 could not be installed as a VirtualBox VM. Configuring Virtualbox for Windows 11 \u00b6 Note The first step is to properly configure the virtual machine that will guest the \u201cMicrosoft Windows 11\u201d Installation; the virtual machine has to be configured in the following way (minimum requirements), based on official \u201cWindows 11 Specs and System Requirements\u201d and your system needs to have proper updated x86 CPU: Configuration: System - Motherboard \u00b6 1 2 RAM: 4GB (minimum) - 8GB (minimum suggested) EFI (Special OSes only) enabled Configuration: System - Processor \u00b6 1 CPU: 2 (minimum) Configuration: Storage \u00b6 1 64 GB Virtual Disk (minimum size) Configuration: Display - Screen \u00b6 1 2 3 Video Memory: 256MB Graphics Controller: VBoxSVGA Enable 3D Acceleration enabled Installation Process \u00b6 Note With those configuration options in-place and the Microsoft Windows 11 ISO properly added as virtual cd-rom we can then start the installation process: Attach Installation ISO, boot from CD, and launch regedit \u00b6 Click next to show-up the Install now button When you see the installation button, Launch a command prompt by pressing Shift+F10 on your keyboard at the same time. On some models of MacOS you may need to add the Virtualbox application to Apple Menu - Preferences - Keyboard - Shortcuts (tab) - Function Keys (Left Menu Item) At this command prompt, type regedit and press enter to launch the Windows Registry Editor . Required Regedit Modifications to Bypass TPM Checks \u00b6 When the Registry Editor opens, navigate to HKEY_LOCAL_MACHINE\\SYSTEM\\Setup Right-click on the Setup key and select New => Key . When prompted to name the key, enter LabConfig and press enter. Now right-click on the LabConfig key and select New => DWORD (32-bit) value and create a value named BypassTPMCheck , and set its data to 1 . With the same steps as above create the BypassRAMCheck and BypassSecureBootCheck values and set their data to 1 , so it looks like the following image. Final Steps \u00b6 With those three values configured under the LabConfig key, close the Registry Editor Type exit in the Command Prompt followed by enter to close the window You can now click on the Install now button to proceed to get Microsoft Windows 11 installed as a virtual-machine on top of VirtualBox.","title":"Install"},{"location":"virtualbox/win11install.html#how-to-install-microsoft-windows-11-on-virtualbox","text":"Info The following step-by-step guide shows how to install Microsoft Windows 11 on top of VirtualBox 6.1; this guide has been tested and verified on both macOS as well as Linux hosts. This is to address the reported issue that Windows 11 could not be installed as a VirtualBox VM.","title":"How to install Microsoft Windows 11 on VirtualBox!"},{"location":"virtualbox/win11install.html#configuring-virtualbox-for-windows-11","text":"Note The first step is to properly configure the virtual machine that will guest the \u201cMicrosoft Windows 11\u201d Installation; the virtual machine has to be configured in the following way (minimum requirements), based on official \u201cWindows 11 Specs and System Requirements\u201d and your system needs to have proper updated x86 CPU:","title":"Configuring Virtualbox for Windows 11"},{"location":"virtualbox/win11install.html#configuration-system---motherboard","text":"1 2 RAM: 4GB (minimum) - 8GB (minimum suggested) EFI (Special OSes only) enabled","title":"Configuration: System - Motherboard"},{"location":"virtualbox/win11install.html#configuration-system---processor","text":"1 CPU: 2 (minimum)","title":"Configuration: System - Processor"},{"location":"virtualbox/win11install.html#configuration-storage","text":"1 64 GB Virtual Disk (minimum size)","title":"Configuration: Storage"},{"location":"virtualbox/win11install.html#configuration-display---screen","text":"1 2 3 Video Memory: 256MB Graphics Controller: VBoxSVGA Enable 3D Acceleration enabled","title":"Configuration: Display - Screen"},{"location":"virtualbox/win11install.html#installation-process","text":"Note With those configuration options in-place and the Microsoft Windows 11 ISO properly added as virtual cd-rom we can then start the installation process:","title":"Installation Process"},{"location":"virtualbox/win11install.html#attach-installation-iso-boot-from-cd-and-launch-regedit","text":"Click next to show-up the Install now button When you see the installation button, Launch a command prompt by pressing Shift+F10 on your keyboard at the same time. On some models of MacOS you may need to add the Virtualbox application to Apple Menu - Preferences - Keyboard - Shortcuts (tab) - Function Keys (Left Menu Item) At this command prompt, type regedit and press enter to launch the Windows Registry Editor .","title":"Attach Installation ISO, boot from CD, and launch regedit"},{"location":"virtualbox/win11install.html#required-regedit-modifications-to-bypass-tpm-checks","text":"When the Registry Editor opens, navigate to HKEY_LOCAL_MACHINE\\SYSTEM\\Setup Right-click on the Setup key and select New => Key . When prompted to name the key, enter LabConfig and press enter. Now right-click on the LabConfig key and select New => DWORD (32-bit) value and create a value named BypassTPMCheck , and set its data to 1 . With the same steps as above create the BypassRAMCheck and BypassSecureBootCheck values and set their data to 1 , so it looks like the following image.","title":"Required Regedit Modifications to Bypass TPM Checks"},{"location":"virtualbox/win11install.html#final-steps","text":"With those three values configured under the LabConfig key, close the Registry Editor Type exit in the Command Prompt followed by enter to close the window You can now click on the Install now button to proceed to get Microsoft Windows 11 installed as a virtual-machine on top of VirtualBox.","title":"Final Steps"},{"location":"webdev/react/jsx.html","text":"JSX \u00b6 What is it? \u00b6 An optional XML-like Element definition markup What is Babel \u00b6 It is a transpiler to transform JSX and unsupported Javascript features into older supported javascript. E.G. Converts ES2015 and JSX to ES5 (The standard most semi-modern browsers support) To use Babel to transpile/transform JSX and ES2015 into ES5, we need presets defining how to do this. Installing Babel and Defining Presets \u00b6 Install React and Necessary Presets sudo npm install -g babel-cli # Preset for ES2015 transform sudo npm install -g babel-preset-es2015 # Preset for JSX transform sudo npm install -g babel-preset-react Configure Babel to Use JSX and ES2015 Presets 1 2 3 4 5 6 7 vi .babelrc { \"presets\": [ \"../../../../usr/local/lib/node_modules/babel-preset-es2015\", \"../../../../usr/local/lib/node_modules/babel-preset-react\" ] } If we had installed node_modules locally instead of globally, we could have simply referenced them as follows: 1 2 3 4 5 6 7 vi .babelrc { \"presets\": [ \"es20125\", \"react\" ] } DOM VS React Components \u00b6 JSX: VS Transpiled: React.createElement(\u2018button\u2019) VS React.createElement(Button) HTML button VS component Button Children \u00b6 Elements can be children of elements 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # JSX <div> <a href=\"http://...\">Click Here</a> </div> # Transpiles to React.createElement( \"div\", null, React.createElement( \"a\", { href: \"http://...\" }, \"Click Here\" ) ); Elements can contain Javascript or variables instead of nested elements. This is a, {variable}, and this is a {function()}. JSX Has Differences from HTML \u00b6 Because its transpiled, to javascript, we can\u2019t use reserved words in Javascript, like class className instead of class htmlFor instead of for style takes dict of camelCase styles instead of CSS style attributes. Since its transpiled to javascript and js can\u2019t return 2 functions JSX like the following will fail 1 2 3 4 5 6 7 <div /> <div /> # Instead add a root. <div> <div /> <div /> </div> Transpiled JSX ignores spacing, so you must include {\u2018 \u2018} where you want spaces. JSX Peculiarities \u00b6 With JSX explicit attribute values should be set because an attribute without a value set is assumed to be true 1 <button disabled /> In the above example disabled is assumed to be true A good rule of thumb is to use the spread operator to pass properties to child ecomponents, don\u2019t pass the object const myObj = { id: \u2018101\u2019 } return This transpiles to (Which makes sense because otherwise it would be an object in an object) var myObj = { id: \u2018101\u2019 }; return React.createElement(\u2018div\u2019, myObj); Because We\u2019ve recoupled (got rid of the separation of concerns) of our scripts JSX can now use javascript as values to attributes. 1 <button disabled={errors.length} />","title":"JSX"},{"location":"webdev/react/jsx.html#jsx","text":"","title":"JSX"},{"location":"webdev/react/jsx.html#what-is-it","text":"An optional XML-like Element definition markup","title":"What is it?"},{"location":"webdev/react/jsx.html#what-is-babel","text":"It is a transpiler to transform JSX and unsupported Javascript features into older supported javascript. E.G. Converts ES2015 and JSX to ES5 (The standard most semi-modern browsers support) To use Babel to transpile/transform JSX and ES2015 into ES5, we need presets defining how to do this.","title":"What is Babel"},{"location":"webdev/react/jsx.html#installing-babel-and-defining-presets","text":"Install React and Necessary Presets sudo npm install -g babel-cli # Preset for ES2015 transform sudo npm install -g babel-preset-es2015 # Preset for JSX transform sudo npm install -g babel-preset-react Configure Babel to Use JSX and ES2015 Presets 1 2 3 4 5 6 7 vi .babelrc { \"presets\": [ \"../../../../usr/local/lib/node_modules/babel-preset-es2015\", \"../../../../usr/local/lib/node_modules/babel-preset-react\" ] } If we had installed node_modules locally instead of globally, we could have simply referenced them as follows: 1 2 3 4 5 6 7 vi .babelrc { \"presets\": [ \"es20125\", \"react\" ] }","title":"Installing Babel and Defining Presets"},{"location":"webdev/react/jsx.html#dom-vs-react-components","text":"JSX: VS Transpiled: React.createElement(\u2018button\u2019) VS React.createElement(Button) HTML button VS component Button","title":"DOM VS React Components"},{"location":"webdev/react/jsx.html#children","text":"Elements can be children of elements 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # JSX <div> <a href=\"http://...\">Click Here</a> </div> # Transpiles to React.createElement( \"div\", null, React.createElement( \"a\", { href: \"http://...\" }, \"Click Here\" ) ); Elements can contain Javascript or variables instead of nested elements. This is a, {variable}, and this is a {function()}.","title":"Children"},{"location":"webdev/react/jsx.html#jsx-has-differences-from-html","text":"Because its transpiled, to javascript, we can\u2019t use reserved words in Javascript, like class className instead of class htmlFor instead of for style takes dict of camelCase styles instead of CSS style attributes. Since its transpiled to javascript and js can\u2019t return 2 functions JSX like the following will fail 1 2 3 4 5 6 7 <div /> <div /> # Instead add a root. <div> <div /> <div /> </div> Transpiled JSX ignores spacing, so you must include {\u2018 \u2018} where you want spaces.","title":"JSX Has Differences from HTML"},{"location":"webdev/react/jsx.html#jsx-peculiarities","text":"With JSX explicit attribute values should be set because an attribute without a value set is assumed to be true 1 <button disabled /> In the above example disabled is assumed to be true A good rule of thumb is to use the spread operator to pass properties to child ecomponents, don\u2019t pass the object const myObj = { id: \u2018101\u2019 } return This transpiles to (Which makes sense because otherwise it would be an object in an object) var myObj = { id: \u2018101\u2019 }; return React.createElement(\u2018div\u2019, myObj); Because We\u2019ve recoupled (got rid of the separation of concerns) of our scripts JSX can now use javascript as values to attributes. 1 <button disabled={errors.length} />","title":"JSX Peculiarities"},{"location":"webdev/react/react.html","text":"React Notes \u00b6 Core Principle \u00b6 Declaritive NOT Imperative Code declares what it wants, not the steps on how to achieve what it wants. Stop Unnecessary Decoupling \u00b6 React wants to combine javascript, styling, and component structure The paradigm of separation of concerns is really separation of technology js/css/dom A component should contain everything necessary to make is function. Building Blocks Philosophy \u00b6 For simple apps start simple with just react.js core. Default javascript createElement is satisfactory for simple element creation. As complexity increases, add transpiler for JSX transpiler converts JSX into Javascript the browser/native app can understand. Only when you need navigation should you add a router Only when we need complex operations should you introduce a package manager for external dependencies This will happen when you need to call API endpoints. Modules , i.e. file organization, should only come once the project looks cluttered. Elements \u00b6 createClass, Component, or stateless functions are all components. Elements are returned by components. Elements control the UI flow by recursively passing properties down nested elements and requesting results until it has a full DOM tree. String Elements terminate as DOM Nodes Function Elements are call recursively to get nested DOM results. Javascript Fatigue \u00b6 Javascript libraries come and go at a pace that incorporating them is extremely difficult. Balance betting on new tech and staying safe. Use the Facebook generated create-react-app 1 2 3 4 npm install -g create-react-app create-react-app hello-world cd hello-world npm start Basics of Create React App \u00b6 Starts the development server. npm start Bundles the app into static files for production. npm run build Starts the test runner. npm test Removes this tool and copies build dependencies, configuration files and scripts into the app directory. Warning If you do this, you can\u2019t go back! npm run eject","title":"React Notes"},{"location":"webdev/react/react.html#react-notes","text":"","title":"React Notes"},{"location":"webdev/react/react.html#core-principle","text":"Declaritive NOT Imperative Code declares what it wants, not the steps on how to achieve what it wants.","title":"Core Principle"},{"location":"webdev/react/react.html#stop-unnecessary-decoupling","text":"React wants to combine javascript, styling, and component structure The paradigm of separation of concerns is really separation of technology js/css/dom A component should contain everything necessary to make is function.","title":"Stop Unnecessary Decoupling"},{"location":"webdev/react/react.html#building-blocks-philosophy","text":"For simple apps start simple with just react.js core. Default javascript createElement is satisfactory for simple element creation. As complexity increases, add transpiler for JSX transpiler converts JSX into Javascript the browser/native app can understand. Only when you need navigation should you add a router Only when we need complex operations should you introduce a package manager for external dependencies This will happen when you need to call API endpoints. Modules , i.e. file organization, should only come once the project looks cluttered.","title":"Building Blocks Philosophy"},{"location":"webdev/react/react.html#elements","text":"createClass, Component, or stateless functions are all components. Elements are returned by components. Elements control the UI flow by recursively passing properties down nested elements and requesting results until it has a full DOM tree. String Elements terminate as DOM Nodes Function Elements are call recursively to get nested DOM results.","title":"Elements"},{"location":"webdev/react/react.html#javascript-fatigue","text":"Javascript libraries come and go at a pace that incorporating them is extremely difficult. Balance betting on new tech and staying safe. Use the Facebook generated create-react-app 1 2 3 4 npm install -g create-react-app create-react-app hello-world cd hello-world npm start","title":"Javascript Fatigue"},{"location":"webdev/react/react.html#basics-of-create-react-app","text":"Starts the development server. npm start Bundles the app into static files for production. npm run build Starts the test runner. npm test Removes this tool and copies build dependencies, configuration files and scripts into the app directory. Warning If you do this, you can\u2019t go back! npm run eject","title":"Basics of Create React App"},{"location":"windows/os_command_map.html","text":"Windows VS Linux Command Cheatsheet \u00b6 Cmd Window Mapping \u00b6 Windows Linux Description dir ls -l Directory listing ren mv Rename a file copy cp Copying a file move mv Moving a file cls clear Clear Screen del rm Delete file fc diff Compare contents of files find grep Search for a string in a file command /? man command Display the manual/help details of the command chdir pwd Returns your current directory location time date Displays the time cd cd Change the current directory md mkdir To create a new directory/folder echo echo To print something on the screen edit vim(depends on editor) To write in to files. exit exit To leave the terminal/command window. format mke2fs or mformat To format a drive/partition. free mem To display free space. rmdir rm -rf/rmdir To delete a directory. taskkill kill To kill a task. tasklist ps x To list running tasks. set var=value export var=value To set environment variables. attrib chown/chmod To change file permissions. tracert traceroute To print the route packets trace to network host. at cron daemon to execute scheduled commands. type cat To print contents of a file. ping ping To send ICMP ECHO_REQUEST to network hosts. nslookup nslookup To query Internet name servers interactively. chdisk du -s For disk usage. tree ls -R To list directory recursively. Powershell Command Mapping \u00b6 Windows Powershell Linux Description Get-Content file3.txt -Tail \u201c3\u201d Get-Content file3.txt | Select-Object -last 3 cat file3.txt | tail -3 Extract last 3 lines of file","title":"Command Cheatsheet"},{"location":"windows/os_command_map.html#windows-vs-linux-command-cheatsheet","text":"","title":"Windows VS Linux Command Cheatsheet"},{"location":"windows/os_command_map.html#cmd-window-mapping","text":"Windows Linux Description dir ls -l Directory listing ren mv Rename a file copy cp Copying a file move mv Moving a file cls clear Clear Screen del rm Delete file fc diff Compare contents of files find grep Search for a string in a file command /? man command Display the manual/help details of the command chdir pwd Returns your current directory location time date Displays the time cd cd Change the current directory md mkdir To create a new directory/folder echo echo To print something on the screen edit vim(depends on editor) To write in to files. exit exit To leave the terminal/command window. format mke2fs or mformat To format a drive/partition. free mem To display free space. rmdir rm -rf/rmdir To delete a directory. taskkill kill To kill a task. tasklist ps x To list running tasks. set var=value export var=value To set environment variables. attrib chown/chmod To change file permissions. tracert traceroute To print the route packets trace to network host. at cron daemon to execute scheduled commands. type cat To print contents of a file. ping ping To send ICMP ECHO_REQUEST to network hosts. nslookup nslookup To query Internet name servers interactively. chdisk du -s For disk usage. tree ls -R To list directory recursively.","title":"Cmd Window Mapping"},{"location":"windows/os_command_map.html#powershell-command-mapping","text":"Windows Powershell Linux Description Get-Content file3.txt -Tail \u201c3\u201d Get-Content file3.txt | Select-Object -last 3 cat file3.txt | tail -3 Extract last 3 lines of file","title":"Powershell Command Mapping"},{"location":"windows/network/arp.html","text":"ARP \u00b6 Display the Arp Cache Table for all Interfaces \u00b6 1 arp /a Delete an Arp Entry \u00b6 1 arp /d <InetAddr> Delete all Arp Cache \u00b6 1 arp /d Manually Add an Entry to Arp Cache \u00b6 1 arp /s <InetAddr> <Mac-Addr> GetMac \u00b6 Noting this here because it\u2019s related to arp Gets the MAC Addresses of all NICs. 1 getmac","title":"Arp"},{"location":"windows/network/arp.html#arp","text":"","title":"ARP"},{"location":"windows/network/arp.html#display-the-arp-cache-table-for-all-interfaces","text":"1 arp /a","title":"Display the Arp Cache Table for all Interfaces"},{"location":"windows/network/arp.html#delete-an-arp-entry","text":"1 arp /d <InetAddr>","title":"Delete an Arp Entry"},{"location":"windows/network/arp.html#delete-all-arp-cache","text":"1 arp /d","title":"Delete all Arp Cache"},{"location":"windows/network/arp.html#manually-add-an-entry-to-arp-cache","text":"1 arp /s <InetAddr> <Mac-Addr>","title":"Manually Add an Entry to Arp Cache"},{"location":"windows/network/arp.html#getmac","text":"Noting this here because it\u2019s related to arp Gets the MAC Addresses of all NICs. 1 getmac","title":"GetMac"},{"location":"windows/network/ipconfig.html","text":"IPCONFIG \u00b6 Show all Network Adapter Information \u00b6 DNS, DHCP, etc. 1 ipconfig /all Release DHCP IP Address \u00b6 The first command releases all The second command releases all that start with Wireless 1 2 ipconfig /release ipconfig /release Wireless* Renew DHCP IP \u00b6 The first command renews all The second command renews all that start with Wireless 1 2 ipconfig /renew ipconfig /renew Wireless* Display DNS Cache \u00b6 1 ipconfig /displaydns Flush Your DNS Cache \u00b6 1 ipconfig /flushdns Initiate Dynamic DNS Registration \u00b6 This ipconfig command is great for troubleshooting DNS name registration issues without rebooting the computer. 1 ipconfig /registerdns","title":"Ipconfig"},{"location":"windows/network/ipconfig.html#ipconfig","text":"","title":"IPCONFIG"},{"location":"windows/network/ipconfig.html#show-all-network-adapter-information","text":"DNS, DHCP, etc. 1 ipconfig /all","title":"Show all Network Adapter Information"},{"location":"windows/network/ipconfig.html#release-dhcp-ip-address","text":"The first command releases all The second command releases all that start with Wireless 1 2 ipconfig /release ipconfig /release Wireless*","title":"Release DHCP IP Address"},{"location":"windows/network/ipconfig.html#renew-dhcp-ip","text":"The first command renews all The second command renews all that start with Wireless 1 2 ipconfig /renew ipconfig /renew Wireless*","title":"Renew DHCP IP"},{"location":"windows/network/ipconfig.html#display-dns-cache","text":"1 ipconfig /displaydns","title":"Display DNS Cache"},{"location":"windows/network/ipconfig.html#flush-your-dns-cache","text":"1 ipconfig /flushdns","title":"Flush Your DNS Cache"},{"location":"windows/network/ipconfig.html#initiate-dynamic-dns-registration","text":"This ipconfig command is great for troubleshooting DNS name registration issues without rebooting the computer. 1 ipconfig /registerdns","title":"Initiate Dynamic DNS Registration"},{"location":"windows/network/nbtstat.html","text":"NBTSTAT - Mostly phased out \u00b6 Nbtstat is designed to help troubleshoot NetBIOS name resolution problems. Connect to NetBios Computer \u00b6 1 2 3 nbtstat -a <Computer Name> # OR by IP nbtstat -a <IP> The Result lists major services: <00>: Workstation Service <20>: Server Service <03>: Messenger Service List Remote NetBIOS Computers/Sessions \u00b6 1 2 3 nbtstat -S # Or to list computer names instead of IP nbtstat -s List NetBios Name Resolution Stats \u00b6 1 nbtstat -r Purge NetBios Name Cache \u00b6 1 nbtstat -R Release and Refresh NetBios Names \u00b6 1 nbtstat -RR","title":"Nbtstat"},{"location":"windows/network/nbtstat.html#nbtstat---mostly-phased-out","text":"Nbtstat is designed to help troubleshoot NetBIOS name resolution problems.","title":"NBTSTAT - Mostly phased out"},{"location":"windows/network/nbtstat.html#connect-to-netbios-computer","text":"1 2 3 nbtstat -a <Computer Name> # OR by IP nbtstat -a <IP> The Result lists major services: <00>: Workstation Service <20>: Server Service <03>: Messenger Service","title":"Connect to NetBios Computer"},{"location":"windows/network/nbtstat.html#list-remote-netbios-computerssessions","text":"1 2 3 nbtstat -S # Or to list computer names instead of IP nbtstat -s","title":"List Remote NetBIOS Computers/Sessions"},{"location":"windows/network/nbtstat.html#list-netbios-name-resolution-stats","text":"1 nbtstat -r","title":"List NetBios Name Resolution Stats"},{"location":"windows/network/nbtstat.html#purge-netbios-name-cache","text":"1 nbtstat -R","title":"Purge NetBios Name Cache"},{"location":"windows/network/nbtstat.html#release-and-refresh-netbios-names","text":"1 nbtstat -RR","title":"Release and Refresh NetBios Names"},{"location":"windows/network/net.html","text":"NET Command \u00b6 Info The net command has a massive number of options, only a few are covered here. Remember all Windows commands can get help with /? net time /? or net /? Show Computers on Immediate Network \u00b6 Also shows if they operate as a workgroup or a domain 1 net view Show Time for Networked Computer \u00b6 UNC: Universal Naming Convention UNC: Always starts with \\ 1 net time \\\\UNC Show User Accounts for Networked Computer \u00b6 1 2 3 net user # Or for a remote computer net user \\\\UNC List Running Services \u00b6 1 net start Start and Stop Service \u00b6 1 2 net stop <service name> net start <service name> Example: Themes Service 1 2 net stop themes net start themes Example: Print spooler 1 2 net stop \"print spooler\" net start \"print spooler\" Force Account Passwords to Expire After 180 Days \u00b6 1 net accounts /MAXPWAGE:180 Share a Folder on the Network \u00b6 1 net share <TheShareName>=C:\\Share\\Path /GRANT:everyone,FULL","title":"Net"},{"location":"windows/network/net.html#net-command","text":"Info The net command has a massive number of options, only a few are covered here. Remember all Windows commands can get help with /? net time /? or net /?","title":"NET Command"},{"location":"windows/network/net.html#show-computers-on-immediate-network","text":"Also shows if they operate as a workgroup or a domain 1 net view","title":"Show Computers on Immediate Network"},{"location":"windows/network/net.html#show-time-for-networked-computer","text":"UNC: Universal Naming Convention UNC: Always starts with \\ 1 net time \\\\UNC","title":"Show Time for Networked Computer"},{"location":"windows/network/net.html#show-user-accounts-for-networked-computer","text":"1 2 3 net user # Or for a remote computer net user \\\\UNC","title":"Show User Accounts for Networked Computer"},{"location":"windows/network/net.html#list-running-services","text":"1 net start","title":"List Running Services"},{"location":"windows/network/net.html#start-and-stop-service","text":"1 2 net stop <service name> net start <service name> Example: Themes Service 1 2 net stop themes net start themes Example: Print spooler 1 2 net stop \"print spooler\" net start \"print spooler\"","title":"Start and Stop Service"},{"location":"windows/network/net.html#force-account-passwords-to-expire-after-180-days","text":"1 net accounts /MAXPWAGE:180","title":"Force Account Passwords to Expire After 180 Days"},{"location":"windows/network/net.html#share-a-folder-on-the-network","text":"1 net share <TheShareName>=C:\\Share\\Path /GRANT:everyone,FULL","title":"Share a Folder on the Network"},{"location":"windows/network/netstat.html","text":"Netstat \u00b6 Show all connections \u00b6 1 netstat -a Show only Connection by State \u00b6 1 2 3 4 netstat | findstr ESTABLISHED netstat | findstr LISTENING netstat | findstr CLOSE_WAIT netstat | findstr TIME_WAIT Show Process ID used by Port Number \u00b6 1 2 netstat -o netstat \u2013o | findstr <PORT> Show Protocol Statistics and Find Errors \u00b6 1 2 netstat \u2013s inetstat -s | findstr Errors Show Routing Information \u00b6 1 netstat \u2013r Show Interface Statistics \u00b6 1 netstat -e Show Fully Qualified Domain Name of foreign address (remote host) \u00b6 1 2 netstat \u2013f netstat \u2013f | findstr ESTABLISHED","title":"Netstat"},{"location":"windows/network/netstat.html#netstat","text":"","title":"Netstat"},{"location":"windows/network/netstat.html#show-all-connections","text":"1 netstat -a","title":"Show all connections"},{"location":"windows/network/netstat.html#show-only-connection-by-state","text":"1 2 3 4 netstat | findstr ESTABLISHED netstat | findstr LISTENING netstat | findstr CLOSE_WAIT netstat | findstr TIME_WAIT","title":"Show only Connection by State"},{"location":"windows/network/netstat.html#show-process-id-used-by-port-number","text":"1 2 netstat -o netstat \u2013o | findstr <PORT>","title":"Show Process ID used by Port Number"},{"location":"windows/network/netstat.html#show-protocol-statistics-and-find-errors","text":"1 2 netstat \u2013s inetstat -s | findstr Errors","title":"Show Protocol Statistics and Find Errors"},{"location":"windows/network/netstat.html#show-routing-information","text":"1 netstat \u2013r","title":"Show Routing Information"},{"location":"windows/network/netstat.html#show-interface-statistics","text":"1 netstat -e","title":"Show Interface Statistics"},{"location":"windows/network/netstat.html#show-fully-qualified-domain-name-of-foreign-address-remote-host","text":"1 2 netstat \u2013f netstat \u2013f | findstr ESTABLISHED","title":"Show Fully Qualified Domain Name of foreign address (remote host)"},{"location":"windows/network/nslookup.html","text":"NSLOOKUP \u00b6 Domain A Record Lookup \u00b6 1 nslookup example.com Check Authoritative Name Servers (NS) for a Domain \u00b6 1 nslookup -type=ns example.com Query Domain Start of Authority (SoA) Zone Records \u00b6 1 nslookup -type=soa example.com Find the Mail Exchange (MX) Records \u00b6 1 nslookup -query=mx example.com List all Available DNS Records for a Domain \u00b6 1 nslookup -type=any example.com Check the DNS Using a Specific DNS Server \u00b6 1 nslookup example.com <name server ip or fqdn> Check Revers DNS Lookup \u00b6 1 nslookup 10.20.30.40 Check for Domain PTR Record \u00b6 Remember you have to reverse the IP and add in-addr.arpa This will verify the IP belongs to a specific domain 1 nslookup -type=ptr 1.0.168.192.in-addr.arpa Check which Servers Respond Faster \u00b6 1 nslookup -timeout=5 example.com Some Useful Output For Debugging DNS \u00b6 1 nslookup -debug example.com","title":"Nslookup"},{"location":"windows/network/nslookup.html#nslookup","text":"","title":"NSLOOKUP"},{"location":"windows/network/nslookup.html#domain-a-record-lookup","text":"1 nslookup example.com","title":"Domain A Record Lookup"},{"location":"windows/network/nslookup.html#check-authoritative-name-servers-ns-for-a-domain","text":"1 nslookup -type=ns example.com","title":"Check Authoritative Name Servers (NS) for a Domain"},{"location":"windows/network/nslookup.html#query-domain-start-of-authority-soa-zone-records","text":"1 nslookup -type=soa example.com","title":"Query Domain Start of Authority (SoA) Zone Records"},{"location":"windows/network/nslookup.html#find-the-mail-exchange-mx-records","text":"1 nslookup -query=mx example.com","title":"Find the Mail Exchange (MX) Records"},{"location":"windows/network/nslookup.html#list-all-available-dns-records-for-a-domain","text":"1 nslookup -type=any example.com","title":"List all Available DNS Records for a Domain"},{"location":"windows/network/nslookup.html#check-the-dns-using-a-specific-dns-server","text":"1 nslookup example.com <name server ip or fqdn>","title":"Check the DNS Using a Specific DNS Server"},{"location":"windows/network/nslookup.html#check-revers-dns-lookup","text":"1 nslookup 10.20.30.40","title":"Check Revers DNS Lookup"},{"location":"windows/network/nslookup.html#check-for-domain-ptr-record","text":"Remember you have to reverse the IP and add in-addr.arpa This will verify the IP belongs to a specific domain 1 nslookup -type=ptr 1.0.168.192.in-addr.arpa","title":"Check for Domain PTR Record"},{"location":"windows/network/nslookup.html#check-which-servers-respond-faster","text":"1 nslookup -timeout=5 example.com","title":"Check which Servers Respond Faster"},{"location":"windows/network/nslookup.html#some-useful-output-for-debugging-dns","text":"1 nslookup -debug example.com","title":"Some Useful Output For Debugging DNS"},{"location":"windows/network/ping.html","text":"PING \u00b6 Increase or Decrease ping TTL \u00b6 Example: Wait for 5 seconds before sending the next packet. 1 ping -i 5 IP Example: Wait 0.1 seconds before sending the next packet. 1 ping -i 0.1 IP Send n packets and stop \u00b6 1 ping -n 10 <IP|Domain> Continuous Ping \u00b6 Start before you reboot a remote server or VM Make sure you have a backup console if remote!!! 1 ping -t <IP|Domain> Hostname Lookup with Ping \u00b6 1 ping -a <IP> Ping Localhost \u00b6 Tests own protocol stack 1 ping 127.0.0.1 PING IPv6 \u00b6 1 ping -t -6 <IP|Domain> Change the Packet Size \u00b6 1 ping -l 1500 <IP|Domain> Ping of Death (Ping Flood Buffer Overflow Attempt) \u00b6 -l: Buffer size -w: wait timeout in ms -n: number of echo requests Script is to loop infinitely 1 2 3 4 :loop ping <IP|Domain> -l 65500 -w 1 -n 1 goto :loop","title":"Ping"},{"location":"windows/network/ping.html#ping","text":"","title":"PING"},{"location":"windows/network/ping.html#increase-or-decrease-ping-ttl","text":"Example: Wait for 5 seconds before sending the next packet. 1 ping -i 5 IP Example: Wait 0.1 seconds before sending the next packet. 1 ping -i 0.1 IP","title":"Increase or Decrease ping TTL"},{"location":"windows/network/ping.html#send-n-packets-and-stop","text":"1 ping -n 10 <IP|Domain>","title":"Send n packets and stop"},{"location":"windows/network/ping.html#continuous-ping","text":"Start before you reboot a remote server or VM Make sure you have a backup console if remote!!! 1 ping -t <IP|Domain>","title":"Continuous Ping"},{"location":"windows/network/ping.html#hostname-lookup-with-ping","text":"1 ping -a <IP>","title":"Hostname Lookup with Ping"},{"location":"windows/network/ping.html#ping-localhost","text":"Tests own protocol stack 1 ping 127.0.0.1","title":"Ping Localhost"},{"location":"windows/network/ping.html#ping-ipv6","text":"1 ping -t -6 <IP|Domain>","title":"PING IPv6"},{"location":"windows/network/ping.html#change-the-packet-size","text":"1 ping -l 1500 <IP|Domain>","title":"Change the Packet Size"},{"location":"windows/network/ping.html#ping-of-death-ping-flood-buffer-overflow-attempt","text":"-l: Buffer size -w: wait timeout in ms -n: number of echo requests Script is to loop infinitely 1 2 3 4 :loop ping <IP|Domain> -l 65500 -w 1 -n 1 goto :loop","title":"Ping of Death (Ping Flood Buffer Overflow Attempt)"},{"location":"windows/network/tracert.html","text":"TRACERT \u00b6 Look for latency between network hops Look for routing loops Look for flapping routes Count hops to determine if large routing path is reason for latency Show the Path from the Networked Computer to Destination \u00b6 1 tracert <IP|Domain> Get Path to Destination but Exclude DNS \u00b6 The idea behind this tracert command is that it allows you to find out whether a router has malfunctioned. By comparing the tracert results with your network documentation, you should be able to alert the correct network person to the problem, or perhaps fix the problem yourself. 1 tracert -d <IP|Domain> Get Path to Destination but Limit Hops \u00b6 hop: Number of routing devices a packet passes through from source to destination 1 tracert -h 3 <IP|Domain> PATHPING \u00b6 Pathping is similar to tracert but it will also compute the degree of packet loss. 1 pathping <IP|Domain>","title":"Tracert"},{"location":"windows/network/tracert.html#tracert","text":"Look for latency between network hops Look for routing loops Look for flapping routes Count hops to determine if large routing path is reason for latency","title":"TRACERT"},{"location":"windows/network/tracert.html#show-the-path-from-the-networked-computer-to-destination","text":"1 tracert <IP|Domain>","title":"Show the Path from the Networked Computer to Destination"},{"location":"windows/network/tracert.html#get-path-to-destination-but-exclude-dns","text":"The idea behind this tracert command is that it allows you to find out whether a router has malfunctioned. By comparing the tracert results with your network documentation, you should be able to alert the correct network person to the problem, or perhaps fix the problem yourself. 1 tracert -d <IP|Domain>","title":"Get Path to Destination but Exclude DNS"},{"location":"windows/network/tracert.html#get-path-to-destination-but-limit-hops","text":"hop: Number of routing devices a packet passes through from source to destination 1 tracert -h 3 <IP|Domain>","title":"Get Path to Destination but Limit Hops"},{"location":"windows/network/tracert.html#pathping","text":"Pathping is similar to tracert but it will also compute the degree of packet loss. 1 pathping <IP|Domain>","title":"PATHPING"},{"location":"classes.html","text":"","title":"Classes"}]}